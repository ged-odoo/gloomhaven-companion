{
  "version": 3,
  "sources": ["../src/data.js", "../src/utils.js", "../src/game_state.js", "../node_modules/@odoo/owl/dist/owl.es.js", "../src/shared/layout.js", "../src/screens/add_enemy_screen.js", "../src/screens/character_editor_screen.js", "../src/screens/config_screen.js", "../src/shared/control_panel.js", "../src/shared/status_editor.js", "../src/shared/counter.js", "../src/shared/style.js", "../src/shared/character_card.js", "../src/screens/main_screen.js", "../src/screens/start_screen.js", "../src/app.js"],
  "sourcesContent": ["export const CLASS_NAME = {\n  void_warden: \"Gardienne du N\u00E9ant\",\n  red_guard: \"Garde Rouge\",\n  axe_thrower: \"Lanceur de Haches\",\n  artificer: \"Artificier\",\n};\n\nexport const MAX_HP_MAP = {\n  void_warden: [6, 7, 8, 9, 10, 11, 12, 13, 14],\n  red_guard: [10, 12, 14, 16, 18, 20, 22, 24, 26],\n  axe_thrower: [8, 9, 11, 12, 14, 15, 17, 18, 20],\n  artificer: [8, 9, 11, 12, 14, 15, 17, 18, 20],\n};\n\nexport const MAX_CARD_MAP = {\n  void_warden: 11,\n  red_guard: 10,\n  artificer: 9,\n  axe_thrower: 10,\n};\n\nconst BOSS_ACTIONS = [\n  {\n    id: 1,\n    name: \"Puissance Acc\u00E9l\u00E9r\u00E9e\",\n    initiative: 11,\n    recycled: false,\n    effects: [\"Sp\u00E9cial 2\"],\n  },\n  {\n    id: 2,\n    name: \"Puissance Acc\u00E9l\u00E9r\u00E9e\",\n    initiative: 14,\n    recycled: false,\n    effects: [\"Sp\u00E9cial 2\"],\n  },\n  {\n    id: 3,\n    name: \"Puissance Acc\u00E9l\u00E9r\u00E9e\",\n    initiative: 17,\n    recycled: true,\n    effects: [\"Sp\u00E9cial 2\"],\n  },\n  {\n    id: 4,\n    name: \"Force Durable\",\n    initiative: 85,\n    recycled: true,\n    effects: [\"Sp\u00E9cial 1\"],\n  },\n  {\n    id: 5,\n    name: \"Force Durable\",\n    initiative: 79,\n    recycled: false,\n    effects: [\"Sp\u00E9cial 1\"],\n  },\n  {\n    id: 6,\n    name: \"Force Durable\",\n    initiative: 73,\n    recycled: false,\n    effects: [\"Sp\u00E9cial 1\"],\n  },\n  {\n    id: 7,\n    name: \"Rien de Particulier\",\n    initiative: 36,\n    recycled: false,\n    effects: [\"D\u00E9placement +0\", \"Attaque +0\"],\n  },\n  {\n    id: 8,\n    name: \"Projectiles Jumeaux\",\n    initiative: 54,\n    recycled: false,\n    effects: [\"D\u00E9placement -1\", \"Attaque -1, port\u00E9e 3, cible 2\"],\n  },\n];\n\nexport const ENEMIES = [\n  // MARK: reanimated corpse\n  {\n    id: \"reanimated_corpse\",\n    name: \"Cadavre R\u00E9anim\u00E9\",\n    normalHp: [5, 7, 9, 10, 11, 13, 14, 16],\n    eliteHp: [10, 11, 14, 14, 16, 18, 23, 29],\n    normalMove: [1, 1, 1, 1, 2, 2, 2, 2],\n    eliteMove: [1, 1, 1, 2, 2, 2, 2, 2],\n    normalAttack: [3, 3, 3, 4, 4, 4, 4, 5],\n    eliteAttack: [3, 4, 4, 5, 5, 6, 6, 6],\n    normalModifiers: [\n      \"\",\n      \"\",\n      \"\",\n      \"\",\n      \"\",\n      \"\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n    ],\n    eliteModifiers: [\n      \"\",\n      \"\",\n      \"\",\n      \"\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"Empoisonnement\",\n    ],\n    actions: [\n      {\n        id: 1,\n        name: \"\u00C9treinte Putride\",\n        initiative: 21,\n        recycled: false,\n        effects: [\n          \"D\u00E9placement +1\",\n          \"Confusion, immobilisation (cible un adversaire adjacent)\",\n          \"[terre]: la cible subit aussi 2 d\u00E9gats\",\n        ],\n      },\n      {\n        id: 2,\n        name: \"Claque Violente\",\n        initiative: 32,\n        recycled: false,\n        effects: [\n          \"Attaque +2, pouss\u00E9e 1\",\n          \"Si cette attaque est effectu\u00E9e, le Cadavre R\u00E9anim\u00E9 subit 1 d\u00E9gat\",\n        ],\n      },\n      {\n        id: 3,\n        name: \"Assaut Pr\u00E9cipit\u00E9\",\n        initiative: 47,\n        recycled: false,\n        effects: [\"D\u00E9placement +1\", \"Attaque -1\"],\n      },\n      {\n        id: 4,\n        name: \"Rien de Particulier\",\n        initiative: 68,\n        recycled: true,\n        effects: [\"D\u00E9placement +0\", \"Attaque +0\"],\n      },\n      {\n        id: 5,\n        name: \"Rien de Particulier\",\n        initiative: 68,\n        recycled: true,\n        effects: [\"D\u00E9placement +0\", \"Attaque +0\"],\n      },\n      {\n        id: 6,\n        name: \"\u00C9mission de Gaz\",\n        initiative: 71,\n        recycled: false,\n        effects: [\n          \"D\u00E9placement +0\",\n          \"Attaque +1\",\n          \"Empoisonnement (cible tous les adversaires adjacents)\",\n          \"Infuse: Terre\",\n        ],\n      },\n      {\n        id: 7,\n        name: \"Coup Calcul\u00E9\",\n        initiative: 81,\n        recycled: false,\n        effects: [\"D\u00E9placement -1\", \"Attaque +1\"],\n      },\n      {\n        id: 8,\n        name: \"Charge T\u00E9m\u00E9raire\",\n        initiative: 91,\n        recycled: false,\n        effects: [\n          \"D\u00E9placement +2\",\n          \"Si ce d\u00E9placement est effectu\u00E9, le cadavre subit 1 d\u00E9gat\",\n        ],\n      },\n    ],\n  },\n  // MARK: chaos demon\n  {\n    id: \"chaos_demon\",\n    name: \"D\u00E9mon du Chaos\",\n    normalHp: [7, 8, 11, 12, 15, 16, 20, 22],\n    eliteHp: [10, 12, 14, 18, 21, 26, 30, 35],\n    normalMove: [3, 3, 3, 3, 4, 4, 4, 4],\n    eliteMove: [4, 4, 4, 5, 5, 5, 5, 5],\n    normalAttack: [2, 3, 3, 4, 4, 5, 5, 6],\n    eliteAttack: [3, 4, 5, 5, 6, 6, 7, 8],\n    normalModifiers: [\n      \"confusion\",\n      \"confusion\",\n      \"confusion\",\n      \"confusion\",\n      \"confusion\",\n      \"confusion\",\n      \"confusion\",\n      \"confusion\",\n    ],\n    eliteModifiers: [\n      \"confusion\",\n      \"confusion\",\n      \"confusion\",\n      \"confusion\",\n      \"confusion\",\n      \"confusion\",\n      \"confusion\",\n      \"confusion\",\n    ],\n    actions: [\n      {\n        id: 1,\n        name: \"Souffle Glacial\",\n        initiative: 13,\n        recycled: false,\n        effects: [\n          \"D\u00E9placement -1\",\n          \"Attaque +0, cible 2 hex voisins adjacents\",\n          \"[Glace]: chaque fois qu'un personnage attaque le d\u00E9mon, le personnage subit 2 d\u00E9gats\",\n        ],\n      },\n      {\n        id: 2,\n        name: \"D\u00E9flagration de Chaleur\",\n        initiative: 1,\n        recycled: false,\n        effects: [\"D\u00E9placement -1\", \"Attaque -1, port\u00E9e 3\", \"[Feu]: blessure\"],\n      },\n      {\n        id: 3,\n        name: \"Coup Sismique\",\n        initiative: 67,\n        recycled: false,\n        effects: [\n          \"D\u00E9placement -2\",\n          \"Attaque +1, pouss\u00E9e 2\",\n          \"[Terre]: cible 2 hex adjacents voisins\",\n        ],\n      },\n      {\n        id: 4,\n        name: \"Tourbillon\",\n        initiative: 20,\n        recycled: false,\n        effects: [\n          \"D\u00E9placement +0\",\n          \"Attaque -1, port\u00E9e 2, cible 3 hex adjacents voisins\",\n          \"[Air]: bouclier 2\",\n        ],\n      },\n      {\n        id: 5,\n        name: \"Griffes Soudaines\",\n        initiative: 41,\n        recycled: false,\n        effects: [\n          \"D\u00E9placement +0\",\n          \"Attaque +0, avantage\",\n          \"[Lumi\u00E8re]: soin 4 sur lui-m\u00EAme\",\n        ],\n      },\n      {\n        id: 6,\n        name: \"Vrilles Noires\",\n        initiative: 52,\n        recycled: false,\n        effects: [\n          \"D\u00E9placement -1\",\n          \"Attaque +1\",\n          \"[Obscurit\u00E9]: tous les adversaires adjacents \u00E0 la cible subissent 1 d\u00E9gat\",\n        ],\n      },\n      {\n        id: 7,\n        name: \"Explosion de Mana\",\n        initiative: 76,\n        recycled: true,\n        effects: [\n          \"D\u00E9placement +0\",\n          \"Attaque +0\",\n          \"Infuse Feu, Glace, Air, Terre, Lumi\u00E8re, Obscurit\u00E9\",\n        ],\n      },\n      {\n        id: 8,\n        name: \"Gueule Affam\u00E9e\",\n        initiative: 98,\n        recycled: true,\n        effects: [\"Attaque -1\", \"[n'importe quel \u00E9l\u00E9ment]: d\u00E9sarmement\"],\n      },\n    ],\n  },\n  // MARK: blood demon\n  {\n    id: \"blood_demon\",\n    name: \"Diablotin de Sang\",\n    normalHp: [3, 4, 5, 5, 7, 8, 9, 12],\n    eliteHp: [4, 6, 7, 10, 11, 13, 17, 21],\n    normalMove: [2, 2, 3, 3, 3, 4, 4, 4],\n    eliteMove: [2, 2, 3, 3, 3, 4, 4, 4],\n    normalAttack: [1, 1, 1, 2, 2, 2, 3, 3],\n    eliteAttack: [2, 2, 2, 2, 3, 3, 4, 4],\n    normalModifiers: [\n      \"\",\n      \"confusion\",\n      \"confusion\",\n      \"confusion\",\n      \"confusion\",\n      \"confusion\",\n      \"confusion\",\n      \"confusion\",\n    ],\n    eliteModifiers: [\n      \"confusion\",\n      \"confusion\",\n      \"confusion\",\n      \"confusion\",\n      \"confusion\",\n      \"confusion\",\n      \"confusion\",\n      \"confusion\",\n    ],\n    actions: [\n      {\n        id: 1,\n        name: \"Hors Phase\",\n        initiative: 5,\n        recycled: false,\n        effects: [\"Bouclier 5\", \"Soin 1 sur lui m\u00EAme\", \"Infuse 1 \u00E9l\u00E9ment\"],\n      },\n      {\n        id: 2,\n        name: \"Faire Pencher la Balance\",\n        initiative: 24,\n        recycled: false,\n        effects: [\n          \"Renforcement, cible tous les alli\u00E9s \u00E0 port\u00E9e 2 et lui-m\u00EAme\",\n          \"Confusion, cible tous les adversaires \u00E0 port\u00E9e 2\",\n        ],\n      },\n      {\n        id: 3,\n        name: \"Rien de Particulier\",\n        initiative: 37,\n        recycled: false,\n        effects: [\"D\u00E9placement +0\", \"Attaque +0, port\u00E9e 3\"],\n      },\n      {\n        id: 4,\n        name: \"Rien de Particulier\",\n        initiative: 37,\n        recycled: false,\n        effects: [\"D\u00E9placement +0\", \"Attaque +0, port\u00E9e 3\"],\n      },\n      {\n        id: 5,\n        name: \"R\u00E9cup\u00E9ration\",\n        initiative: 42,\n        recycled: true,\n        effects: [\"D\u00E9placement +1\", \"Soin 2, port\u00E9e 3\"],\n      },\n      {\n        id: 6,\n        name: \"Estropier\",\n        initiative: 42,\n        recycled: true,\n        effects: [\n          \"D\u00E9placement +0\",\n          \"Attaque -1, port\u00E9e 3, cible 2, empoisonnement\",\n        ],\n      },\n      {\n        id: 7,\n        name: \"Sombre Charme\",\n        initiative: 42,\n        recycled: false,\n        effects: [\n          \"D\u00E9placement +0\",\n          \"Attaque -1, port\u00E9e 3, cible 2, mal\u00E9diction\",\n        ],\n      },\n      {\n        id: 8,\n        name: \"Coup Calcul\u00E9\",\n        initiative: 76,\n        recycled: false,\n        effects: [\"D\u00E9placement -1\", \"Attaque +1, port\u00E9e 3\"],\n      },\n    ],\n  },\n  // MARK: black imp\n  {\n    id: \"black_imp\",\n    name: \"Diablotin Noir\",\n    normalHp: [3, 4, 5, 5, 7, 9, 10, 13],\n    eliteHp: [4, 6, 8, 8, 11, 14, 15, 19],\n    normalMove: [1, 1, 1, 1, 1, 1, 1, 1],\n    eliteMove: [1, 1, 1, 1, 1, 1, 1, 1],\n    normalAttack: [1, 1, 1, 2, 2, 2, 3, 3],\n    eliteAttack: [2, 2, 2, 3, 3, 3, 4, 4],\n    normalModifiers: [\n      \"\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n    ],\n    eliteModifiers: [\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement, attaquants gagnent d\u00E9savantage\",\n      \"empoisonnement, attaquants gagnent d\u00E9savantage\",\n      \"empoisonnement, attaquants gagnent d\u00E9savantage\",\n      \"empoisonnement, attaquants gagnent d\u00E9savantage\",\n      \"empoisonnement, attaquants gagnent d\u00E9savantage\",\n    ],\n    actions: [\n      {\n        id: 1,\n        name: \"Hors Phase\",\n        initiative: 5,\n        recycled: false,\n        effects: [\"Bouclier 5\", \"Soin 1 sur lui m\u00EAme\", \"Infuse 1 \u00E9l\u00E9ment\"],\n      },\n      {\n        id: 2,\n        name: \"Faire Pencher la Balance\",\n        initiative: 24,\n        recycled: false,\n        effects: [\n          \"Renforcement, cible tous les alli\u00E9s \u00E0 port\u00E9e 2 et lui-m\u00EAme\",\n          \"Confusion, cible tous les adversaires \u00E0 port\u00E9e 2\",\n        ],\n      },\n      {\n        id: 3,\n        name: \"Rien de Particulier\",\n        initiative: 37,\n        recycled: false,\n        effects: [\"D\u00E9placement +0\", \"Attaque +0, port\u00E9e 3\"],\n      },\n      {\n        id: 4,\n        name: \"Rien de Particulier\",\n        initiative: 37,\n        recycled: false,\n        effects: [\"D\u00E9placement +0\", \"Attaque +0, port\u00E9e 3\"],\n      },\n      {\n        id: 5,\n        name: \"R\u00E9cup\u00E9ration\",\n        initiative: 42,\n        recycled: true,\n        effects: [\"D\u00E9placement +1\", \"Soin 2, port\u00E9e 3\"],\n      },\n      {\n        id: 6,\n        name: \"Estropier\",\n        initiative: 42,\n        recycled: true,\n        effects: [\n          \"D\u00E9placement +0\",\n          \"Attaque -1, port\u00E9e 3, cible 2, empoisonnement\",\n        ],\n      },\n      {\n        id: 7,\n        name: \"Sombre Charme\",\n        initiative: 42,\n        recycled: false,\n        effects: [\n          \"D\u00E9placement +0\",\n          \"Attaque -1, port\u00E9e 3, cible 2, mal\u00E9diction\",\n        ],\n      },\n      {\n        id: 8,\n        name: \"Coup Calcul\u00E9\",\n        initiative: 76,\n        recycled: false,\n        effects: [\"D\u00E9placement -1\", \"Attaque +1, port\u00E9e 3\"],\n      },\n    ],\n  },\n  // MARK: vermling scout\n  {\n    id: \"vermling_scout\",\n    name: \"\u00C9claireur Vermling\",\n    normalHp: [2, 3, 3, 5, 6, 8, 10, 13],\n    eliteHp: [4, 5, 5, 7, 8, 11, 13, 17],\n    normalMove: [3, 3, 3, 3, 3, 3, 4, 4],\n    eliteMove: [3, 3, 4, 4, 4, 4, 5, 5],\n    normalAttack: [1, 1, 2, 2, 3, 3, 3, 3],\n    eliteAttack: [2, 2, 3, 3, 4, 4, 4, 4],\n    normalModifiers: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    eliteModifiers: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    actions: [\n      {\n        id: 1,\n        name: \"Arc Court\",\n        initiative: 29,\n        recycled: false,\n        effects: [\"D\u00E9placement -1\", \"Attaque -1, port\u00E9e 3\"],\n      },\n      {\n        id: 2,\n        name: \"Assaut Pr\u00E9cipit\u00E9\",\n        initiative: 40,\n        recycled: false,\n        effects: [\"D\u00E9placement +1\", \"Attaque -1\"],\n      },\n      {\n        id: 3,\n        name: \"Rien de Particulier\",\n        initiative: 53,\n        recycled: false,\n        effects: [\"D\u00E9placement +0\", \"Attaque +0\"],\n      },\n      {\n        id: 4,\n        name: \"Fl\u00E8che Rance\",\n        initiative: 53,\n        recycled: false,\n        effects: [\"D\u00E9placement -2\", \"Attaque +0, port\u00E9e 3, empoisonnement\"],\n      },\n      {\n        id: 5,\n        name: \"Coup Calcul\u00E9\",\n        initiative: 69,\n        recycled: false,\n        effects: [\"D\u00E9placement -1\", \"Attaque +1\"],\n      },\n      {\n        id: 6,\n        name: \"Lame D\u00E9l\u00E9t\u00E8re\",\n        initiative: 92,\n        recycled: true,\n        effects: [\"Attaque +2, empoisonnement\"],\n      },\n      {\n        id: 7,\n        name: \"Carreaux Rapides\",\n        initiative: 78,\n        recycled: false,\n        effects: [\"Attaque -1, port\u00E9e 4, cible 2\"],\n      },\n      {\n        id: 8,\n        name: \"Avidit\u00E9\",\n        initiative: 40,\n        recycled: true,\n        effects: [\"D\u00E9placement +1, saut\", \"Pillage 1\"],\n      },\n    ],\n  },\n  // MARK: reanimated spirit\n  {\n    id: \"reanimated_spirit\",\n    name: \"Esprit R\u00E9anim\u00E9\",\n    normalHp: [3, 4, 5, 6, 6, 8, 9, 12],\n    eliteHp: [5, 5, 7, 8, 8, 11, 13, 17],\n    normalMove: [2, 2, 3, 3, 3, 3, 3, 3],\n    eliteMove: [3, 3, 4, 4, 4, 4, 4, 4],\n    normalAttack: [2, 2, 2, 3, 3, 3, 4, 4],\n    eliteAttack: [3, 3, 3, 4, 4, 4, 5, 5],\n    normalModifiers: [\n      \"Bouclier 1\",\n      \"Bouclier 1\",\n      \"Bouclier 1\",\n      \"Bouclier 1\",\n      \"Bouclier 2\",\n      \"Bouclier 2\",\n      \"Bouclier 2\",\n      \"Bouclier 2\",\n    ],\n    eliteModifiers: [\n      \"Bouclier 1\",\n      \"Bouclier 2\",\n      \"Bouclier 2\",\n      \"Bouclier 2\",\n      \"Bouclier 3\",\n      \"Bouclier 3\",\n      \"Bouclier 3\",\n      \"Bouclier 3\",\n    ],\n    actions: [\n      {\n        id: 1,\n        name: \"Saper l'\u00C9nergie\",\n        initiative: 22,\n        recycled: true,\n        effects: [\"D\u00E9placement -1\", \"Attaque -1, port\u00E9e 4, confusion\"],\n      },\n      {\n        id: 2,\n        name: \"Cri Retentissant\",\n        initiative: 33,\n        recycled: true,\n        effects: [\n          \"D\u00E9placement +0\",\n          \"Attaque -1, cible tous les adversaires \u00E0 port\u00E9e 2\",\n        ],\n      },\n      {\n        id: 3,\n        name: \"Rien de Particulier\",\n        initiative: 48,\n        recycled: false,\n        effects: [\"D\u00E9placement +0\", \"Attaque +0, port\u00E9e 3\"],\n      },\n      {\n        id: 4,\n        name: \"Rien de Particulier\",\n        initiative: 48,\n        recycled: false,\n        effects: [\"D\u00E9placement +0\", \"Attaque +0, port\u00E9e 3\"],\n      },\n      {\n        id: 5,\n        name: \"Chaine Coupl\u00E9e\",\n        initiative: 61,\n        recycled: false,\n        effects: [\"Attaque +0, port\u00E9e 3, cible 2\"],\n      },\n      {\n        id: 6,\n        name: \"Aspirer la Chaleur\",\n        initiative: 75,\n        recycled: false,\n        effects: [\n          \"D\u00E9placement -1\",\n          \"Attaque +1, port\u00E9e 3\",\n          \"Soin 1 sur lui-m\u00EAme\",\n          \"Infuse Glace\",\n        ],\n      },\n      {\n        id: 7,\n        name: \"Hurlement de Col\u00E8re\",\n        initiative: 55,\n        recycled: false,\n        effects: [\n          \"D\u00E9placement +0\",\n          \"Mal\u00E9diction, cible tous les adversaires \u00E0 port\u00E9e 3\",\n          \"Infuse Glace\",\n        ],\n      },\n      {\n        id: 8,\n        name: \"Regard Glacial\",\n        initiative: 67,\n        recycled: false,\n        effects: [\n          \"D\u00E9placement -1\",\n          \"Attaque +1, port\u00E9e 3\",\n          \"[Glace]: d\u00E9sarmement\",\n        ],\n      },\n    ],\n  },\n  // MARK: stone golem\n  {\n    id: \"stone_golem\",\n    name: \"Golem de Pierre\",\n    normalHp: [10, 10, 11, 11, 12, 13, 16, 16],\n    eliteHp: [10, 11, 13, 14, 16, 18, 20, 21],\n    normalMove: [1, 1, 1, 1, 2, 2, 2, 2],\n    eliteMove: [2, 2, 2, 2, 2, 3, 3, 3],\n    normalAttack: [3, 3, 4, 4, 4, 5, 5, 5],\n    eliteAttack: [4, 4, 5, 5, 6, 6, 7, 7],\n    normalModifiers: [\n      \"\",\n      \"Bouclier 1\",\n      \"Bouclier 1\",\n      \"Bouclier 2\",\n      \"Bouclier 2\",\n      \"Bouclier 2\",\n      \"Bouclier 2\",\n      \"Bouclier 3\",\n    ],\n    eliteModifiers: [\n      \"Bouclier 1\",\n      \"Bouclier 2\",\n      \"Bouclier 2\",\n      \"Bouclier 3\",\n      \"Bouclier 3\",\n      \"Bouclier 3\",\n      \"Bouclier 3\",\n      \"Bouclier 4\",\n    ],\n    actions: [\n      {\n        id: 1,\n        name: \"Progression \u00C9prouvante\",\n        initiative: 28,\n        recycled: false,\n        effects: [\n          \"D\u00E9placement +1\",\n          \"Attaque +0\",\n          \"Si la capacit\u00E9 de d\u00E9placement a \u00E9t\u00E9 effectu\u00E9e, le golem subit 1 d\u00E9gat\",\n        ],\n      },\n      {\n        id: 2,\n        name: \"Assaut Pr\u00E9cipit\u00E9\",\n        initiative: 51,\n        recycled: true,\n        effects: [\"D\u00E9placement +1\", \"Attaque -1\"],\n      },\n      {\n        id: 3,\n        name: \"Marteler le Sol\",\n        initiative: 83,\n        recycled: false,\n        effects: [\n          \"D\u00E9placement +0\",\n          \"Attaque -1, cible tous les adversaires adjacents\",\n        ],\n      },\n      {\n        id: 4,\n        name: \"Coup Calcul\u00E9\",\n        initiative: 90,\n        recycled: true,\n        effects: [\"D\u00E9placement -1\", \"Attack +1\"],\n      },\n      {\n        id: 5,\n        name: \"R\u00E9action Runique\",\n        initiative: 10,\n        recycled: false,\n        effects: [\n          \"Chaque fois qu'un personnage attaque le golem, le personnage subit 3 d\u00E9gats\",\n        ],\n      },\n      {\n        id: 6,\n        name: \"Attraction Runique\",\n        initiative: 28,\n        recycled: false,\n        effects: [\n          \"D\u00E9placement +1\",\n          \"Attaque -2, port\u00E9e 3, traction 2, immobilisation\",\n        ],\n      },\n      {\n        id: 7,\n        name: \"Rien de Particulier\",\n        initiative: 64,\n        recycled: false,\n        effects: [\"D\u00E9placement +0\", \"Attaque +0\"],\n      },\n      {\n        id: 8,\n        name: \"Lancer Sacrificiel\",\n        initiative: 72,\n        recycled: false,\n        effects: [\n          \"Attaque +1, port\u00E9e 3. Si cette attaque est effectu\u00E9e, le golem subit 2 d\u00E9gats\",\n        ],\n      },\n    ],\n  },\n  // MARK: monstruosit\u00E9 de sang\n  {\n    id: \"blood_monster\",\n    name: \"Monstruosit\u00E9 de Sang\",\n    normalHp: [7, 9, 10, 12, 12, 13, 17, 20],\n    eliteHp: [12, 12, 15, 18, 18, 20, 23, 23],\n    normalMove: [2, 2, 2, 3, 3, 3, 3, 3],\n    eliteMove: [2, 2, 2, 3, 3, 3, 3, 3],\n    normalAttack: [2, 2, 3, 3, 3, 4, 4, 5],\n    eliteAttack: [3, 3, 4, 4, 4, 5, 6, 6],\n    normalModifiers: [\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 1 d\u00E9gats\",\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 2 d\u00E9gats\",\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 2 d\u00E9gats\",\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 3 d\u00E9gats\",\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 3 d\u00E9gats, Bouclier 1\",\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 3 d\u00E9gats, Bouclier 1\",\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 3 d\u00E9gats, Bouclier 1\",\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 4 d\u00E9gats, Bouclier 1\",\n    ],\n    eliteModifiers: [\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 1 d\u00E9gats\",\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 3 d\u00E9gats, Bouclier 1\",\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 3 d\u00E9gats, Bouclier 1\",\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 4 d\u00E9gats, Bouclier 1\",\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 4 d\u00E9gats, Bouclier 2\",\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 5 d\u00E9gats, Bouclier 2\",\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 5 d\u00E9gats, Bouclier 2\",\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 5 d\u00E9gats, Bouclier 3\",\n    ],\n    actions: [\n      {\n        id: 1,\n        name: \"Bulles Explosives\",\n        initiative: 9,\n        recycled: true,\n        effects: [\n          \"D\u00E9placement +1\",\n          \"Chaque fois qu'un personnage attaque la monstruosit\u00E9, le personnage subit 2 d\u00E9gats\",\n        ],\n      },\n      {\n        id: 2,\n        name: \"Nu\u00E9e\",\n        initiative: 21,\n        recycled: false,\n        effects: [\n          \"D\u00E9placement +1\",\n          \"Attaque -1\",\n          \"+1 \u00E0 attaque si cible adjacente \u00E0 un alli\u00E9 de la monstruosit\u00E9\",\n        ],\n      },\n      {\n        id: 3,\n        name: \"Nu\u00E9e\",\n        initiative: 21,\n        recycled: false,\n        effects: [\n          \"D\u00E9placement +1\",\n          \"Attaque -1\",\n          \"+1 \u00E0 attaque si cible adjacente \u00E0 un alli\u00E9 de la monstruosit\u00E9\",\n        ],\n      },\n      {\n        id: 4,\n        name: \"Morsure Affaiblissante\",\n        initiative: 34,\n        recycled: false,\n        effects: [\"D\u00E9placement +0\", \"Attaque +0, confusion\"],\n      },\n      {\n        id: 5,\n        name: \"Rien de Particulier\",\n        initiative: 39,\n        recycled: false,\n        effects: [\"D\u00E9placement +0\", \"Attaque +0\"],\n      },\n      {\n        id: 6,\n        name: \"\u00C9gratignure Incertaine\",\n        initiative: 52,\n        recycled: true,\n        effects: [\n          \"D\u00E9placement +0\",\n          \"Attaque +1\",\n          \"Si l'attaque est effectu\u00E9e, la monstruosit\u00E9 subit 1 d\u00E9gat\",\n        ],\n      },\n      {\n        id: 7,\n        name: \"Coup Calcul\u00E9\",\n        initiative: 60,\n        recycled: false,\n        effects: [\"D\u00E9placement -1\", \"Attaque +1\"],\n      },\n      {\n        id: 8,\n        name: \"Fr\u00E9n\u00E9sie Incertaine\",\n        initiative: 74,\n        recycled: false,\n        effects: [\n          \"D\u00E9placement +0\",\n          \"la Monstruosit\u00E9 subit 1 d\u00E9gat\",\n          \"Attaque +1, cible tous les adversaires adjacents\",\n        ],\n      },\n    ],\n  },\n  // MARK: monstruosit\u00E9 ratine\n  {\n    id: \"rat_monster\",\n    name: \"Monstruosit\u00E9 ratine\",\n    normalHp: [4, 4, 5, 6, 8, 10, 12, 12],\n    eliteHp: [6, 7, 8, 10, 12, 13, 14, 16],\n    normalMove: [1, 1, 2, 2, 2, 3, 3, 3],\n    eliteMove: [1, 1, 1, 2, 2, 2, 3, 3],\n    normalAttack: [1, 2, 2, 3, 3, 3, 3, 4],\n    eliteAttack: [2, 2, 3, 3, 3, 4, 4, 5],\n    normalModifiers: [\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 1 d\u00E9gats\",\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 1 d\u00E9gats\",\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 1 d\u00E9gats\",\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 2 d\u00E9gats\",\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 2 d\u00E9gats\",\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 2 d\u00E9gats\",\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 3 d\u00E9gats\",\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 3 d\u00E9gats\",\n    ],\n    eliteModifiers: [\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 1 d\u00E9gats\",\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 2 d\u00E9gats, avantage\",\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 2 d\u00E9gats, avantage\",\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 2 d\u00E9gats, avantage\",\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 3 d\u00E9gats, avantage\",\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 3 d\u00E9gats, avantage\",\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 3 d\u00E9gats, avantage\",\n      \"\u00E0 sa mort, tous les personnages adjacents subissent 4 d\u00E9gats, avantage\",\n    ],\n    actions: [\n      {\n        id: 1,\n        name: \"Bulles explosives\",\n        initiative: 9,\n        recycled: true,\n        effects: [\n          \"D\u00E9placement +1\",\n          \"Chaque fois qu'un h\u00E9ro attaque la monstruosit\u00E9, le h\u00E9ro subit 2 d\u00E9gats\",\n        ],\n      },\n      {\n        id: 2,\n        name: \"Nu\u00E9e\",\n        initiative: 21,\n        recycled: false,\n        effects: [\n          \"D\u00E9placement +1\",\n          \"Attaque -1\",\n          \"+1 \u00E0 attaque si cible adjacente \u00E0 un alli\u00E9 de la monstruosit\u00E9\",\n        ],\n      },\n      {\n        id: 3,\n        name: \"Nu\u00E9e\",\n        initiative: 21,\n        recycled: false,\n        effects: [\n          \"D\u00E9placement +1\",\n          \"Attaque -1\",\n          \"+1 \u00E0 attaque si cible adjacente \u00E0 un alli\u00E9 de la monstruosit\u00E9\",\n        ],\n      },\n      {\n        id: 4,\n        name: \"Morsure affaiblissante\",\n        initiative: 34,\n        recycled: false,\n        effects: [\"D\u00E9placement +0\", \"Attaque +0, confusion\"],\n      },\n      {\n        id: 5,\n        name: \"Rien de Particulier\",\n        initiative: 39,\n        recycled: false,\n        effects: [\"D\u00E9placement +0\", \"Attaque +0\"],\n      },\n      {\n        id: 6,\n        name: \"\u00C9gratignure incertaine\",\n        initiative: 52,\n        recycled: true,\n        effects: [\n          \"D\u00E9placement +0\",\n          \"Attaque +1\",\n          \"Si l'attaque est effectu\u00E9e, la monstruosit\u00E9 subit 1 d\u00E9gat\",\n        ],\n      },\n      {\n        id: 7,\n        name: \"Coup Calcul\u00E9\",\n        initiative: 60,\n        recycled: false,\n        effects: [\"D\u00E9placement -1\", \"Attaque +1\"],\n      },\n      {\n        id: 8,\n        name: \"Fr\u00E9n\u00E9sie incertaine\",\n        initiative: 74,\n        recycled: false,\n        effects: [\n          \"D\u00E9placement +0\",\n          \"la monstruosit\u00E9 subit 1 d\u00E9gat\",\n          \"Attaque +1, cible tous les adversaires adjacents\",\n        ],\n      },\n    ],\n  },\n  // MARK: base vermling bandit\n  {\n    id: \"base_vermling_bandit\",\n    name: \"Pillard Vermling de Base\",\n    normalHp: [4, 5, 9, 11, 12, 15, 17, 19],\n    eliteHp: [8, 10, 14, 16, 19, 23, 27, 31],\n    normalMove: [1, 1, 2, 3, 3, 3, 4, 4],\n    eliteMove: [1, 1, 3, 3, 4, 4, 4, 4],\n    normalAttack: [2, 2, 2, 2, 3, 3, 3, 4],\n    eliteAttack: [2, 2, 3, 4, 4, 4, 5, 6],\n    normalModifiers: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    eliteModifiers: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    actions: [\n      {\n        id: 1,\n        name: \"Hurlements\",\n        initiative: 85,\n        recycled: true,\n        effects: [\n          \"Pouss\u00E9e 1, ciblez tous les adversaires adjacents\",\n          \"Attaque +1, port\u00E9e 2\",\n        ],\n      },\n      {\n        id: 2,\n        name: \"Lancer Pr\u00E9cis\",\n        initiative: 36,\n        recycled: false,\n        effects: [\"D\u00E9placement +0\", \"Attaque -1, port\u00E9e 2\"],\n      },\n      {\n        id: 3,\n        name: \"Double Dagues\",\n        initiative: 59,\n        recycled: false,\n        effects: [\"Attaque +0, port\u00E9e 2, cible 2\"],\n      },\n      {\n        id: 4,\n        name: \"Rien de Particulier\",\n        initiative: 50,\n        recycled: false,\n        effects: [\"D\u00E9placement +0\", \"Attaque +0\"],\n      },\n    ],\n  },\n  // MARK: vermling bandit\n  {\n    id: \"vermling_bandit\",\n    name: \"Pillard Vermling\",\n    normalHp: [4, 5, 9, 11, 12, 15, 17, 19],\n    eliteHp: [8, 10, 14, 16, 19, 23, 27, 31],\n    normalMove: [1, 1, 2, 3, 3, 3, 4, 4],\n    eliteMove: [1, 1, 3, 3, 4, 4, 4, 4],\n    normalAttack: [2, 2, 2, 2, 3, 3, 3, 4],\n    eliteAttack: [2, 2, 3, 4, 4, 4, 5, 6],\n    normalModifiers: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    eliteModifiers: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    actions: [\n      {\n        id: 1,\n        name: \"Fosse \u00E0 Pointes\",\n        initiative: 20,\n        recycled: false,\n        effects: [\n          \"Attaque +0, port\u00E9e 4\",\n          \"Cr\u00E9ez un pi\u00E8ge \u00E0 3 d\u00E9gats sur l'hexaxone vide adjacent le plus proche d'un adversaire\",\n        ],\n      },\n      {\n        id: 2,\n        name: \"Panser les Blessures\",\n        initiative: 30,\n        recycled: true,\n        effects: [\"D\u00E9placement +1\", \"Soin 3 sur lui-m\u00EAme\"],\n      },\n      {\n        id: 3,\n        name: \"Lancer Pr\u00E9cis\",\n        initiative: 36,\n        recycled: false,\n        effects: [\"D\u00E9placement +0\", \"Attaque -1, port\u00E9e 4\"],\n      },\n      {\n        id: 4,\n        name: \"Rien de Particulier\",\n        initiative: 50,\n        recycled: false,\n        effects: [\"D\u00E9placement +0\", \"Attaque +0\"],\n      },\n      {\n        id: 5,\n        name: \"Doubles Dagues\",\n        initiative: 59,\n        recycled: false,\n        effects: [\"Attaque +0, port\u00E9e 3, cible 2\"],\n      },\n      {\n        id: 6,\n        name: \"Parade\",\n        initiative: 70,\n        recycled: false,\n        effects: [\"D\u00E9placement +0\", \"Attaque -1, d\u00E9sarmement\"],\n      },\n      {\n        id: 7,\n        name: \"M\u00E9chant \u00C9pieu\",\n        initiative: 77,\n        recycled: false,\n        effects: [\"D\u00E9placement -1\", \"Attaque +0, port\u00E9e 3, blessure\"],\n      },\n      {\n        id: 8,\n        name: \"Hurlements Repoussants\",\n        initiative: 85,\n        recycled: true,\n        effects: [\n          \"Pouss\u00E9e 1, ciblez tous les adversaires adjacents\",\n          \"Attaque +1, port\u00E9e 2\",\n        ],\n      },\n    ],\n  },\n  // MARK: black vase\n  {\n    id: \"black_vase\",\n    name: \"Vase Noire\",\n    normalHp: [4, 5, 7, 8, 9, 10, 12, 16],\n    eliteHp: [8, 9, 11, 11, 13, 15, 16, 18],\n    normalMove: [1, 1, 1, 1, 2, 2, 2, 2],\n    eliteMove: [1, 1, 1, 2, 2, 3, 3, 3],\n    normalAttack: [2, 2, 2, 3, 3, 3, 4, 4],\n    eliteAttack: [2, 2, 3, 3, 4, 4, 4, 5],\n    normalModifiers: [\n      \"\",\n      \"Bouclier 1\",\n      \"Bouclier 1\",\n      \"Bouclier 1\",\n      \"Bouclier 1\",\n      \"Bouclier 1\",\n      \"Bouclier 1, empoisonnement\",\n      \"Bouclier 1, empoisonnement\",\n    ],\n    eliteModifiers: [\n      \"\",\n      \"Bouclier 1\",\n      \"Bouclier 1\",\n      \"Bouclier 1, empoisonnement\",\n      \"Bouclier 1, empoisonnement\",\n      \"Bouclier 1, empoisonnement\",\n      \"Bouclier 2, empoisonnement\",\n      \"Bouclier 2, empoisonnement\",\n    ],\n    actions: [\n      {\n        id: 1,\n        name: \"Assaut Pr\u00E9cipit\u00E9\",\n        initiative: 36,\n        recycled: false,\n        effects: [\"D\u00E9placement +1\", \"Attaque -1, port\u00E9e 3\"],\n      },\n      {\n        id: 2,\n        name: \"Rien de Particulier\",\n        initiative: 57,\n        recycled: false,\n        effects: [\"D\u00E9placement +0\", \"Attaque +0, port\u00E9e 2\"],\n      },\n      {\n        id: 3,\n        name: \"Explosion Toxique\",\n        initiative: 57,\n        recycled: false,\n        effects: [\n          \"Attaque +0, port\u00E9e 2, cible 2, empoisonnement\",\n          \"[Terre]: +1 cible\",\n        ],\n      },\n      {\n        id: 4,\n        name: \"Coup Calcul\u00E9\",\n        initiative: 66,\n        recycled: false,\n        effects: [\"D\u00E9placement -1\", \"Attaque +1, port\u00E9e 3\"],\n      },\n      {\n        id: 5,\n        name: \"Repas\",\n        initiative: 66,\n        recycled: false,\n        effects: [\n          \"D\u00E9placement +0\",\n          \"Pillage 1\",\n          \"Soin 2 sur elle-m\u00EAme\",\n          \"[Obscurit\u00E9]: +1 soin\",\n        ],\n      },\n      {\n        id: 6,\n        name: \"Sceau Plasmique\",\n        initiative: 85,\n        recycled: false,\n        effects: [\n          \"Pouss\u00E9e 1, empoisonnement, cible tous les adversaires adjacents\",\n          \"Attaque +1, port\u00E9e 2\",\n        ],\n      },\n      {\n        id: 7,\n        name: \"Noire Damnation\",\n        initiative: 85,\n        recycled: true,\n        effects: [\n          \"L'adversaire en ligne de vue le plus proche, sans consid\u00E9ration de port\u00E9e, subit 1+NS/2 d\u00E9gats (arrondis au sup\u00E9rieur)\",\n          \"Soin 1 sur elle-m\u00EAme\",\n          \"Infuse Obscurit\u00E9\",\n        ],\n      },\n      {\n        id: 8,\n        name: \"Damnation Infectieuse\",\n        initiative: 85,\n        recycled: true,\n        effects: [\n          \"L'adversaire en ligne de vue le plus proche, sans consid\u00E9ration de port\u00E9e, subit 1+NS/2 d\u00E9gats (arrondis au sup\u00E9rieur)\",\n          \"Soin 1 sur elle-m\u00EAme\",\n          \"Infuse Terre\",\n        ],\n      },\n    ],\n  },\n  // MARK: base giant viper\n  {\n    id: \"base_giant_viper\",\n    name: \"Vip\u00E8re G\u00E9ante de Base\",\n    normalHp: [2, 3, 4, 4, 6, 7, 8, 10],\n    eliteHp: [3, 5, 7, 8, 11, 13, 14, 18],\n    normalMove: [2, 2, 3, 3, 3, 3, 4, 4],\n    eliteMove: [2, 2, 3, 3, 3, 4, 4, 4],\n    normalAttack: [1, 1, 1, 2, 2, 3, 3, 3],\n    eliteAttack: [2, 2, 2, 3, 3, 3, 4, 4],\n    normalModifiers: [\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n    ],\n    eliteModifiers: [\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n    ],\n    actions: [\n      {\n        id: 1,\n        name: \"Constriction\",\n        initiative: 58,\n        recycled: false,\n        effects: [\"D\u00E9placement -1\", \"Attaque +1, immobilisation\"],\n      },\n      {\n        id: 2,\n        name: \"Crocs Rapides\",\n        initiative: 33,\n        recycled: false,\n        effects: [\"D\u00E9placement +1, saut\", \"Attaque +0, cible 2\"],\n      },\n      {\n        id: 3,\n        name: \"\u00C0 couvert\",\n        initiative: 18,\n        recycled: false,\n        effects: [\n          \"D\u00E9placement +1, saut\",\n          \"Attaque -1\",\n          \"Toutes les attaques ciblant la vip\u00E8re gagnent d\u00E9savantage ce round\",\n        ],\n      },\n      {\n        id: 4,\n        name: \"Fr\u00E9n\u00E9sie Toxique\",\n        initiative: 43,\n        recycled: true,\n        effects: [\n          \"D\u00E9placement +1, saut\",\n          \"Attaque -1, cible tous les adversaires adjacents\",\n        ],\n      },\n    ],\n  },\n  // MARK: giant viper\n  {\n    id: \"giant_viper\",\n    name: \"Vip\u00E8re G\u00E9ante\",\n    normalHp: [2, 3, 4, 4, 6, 7, 8, 10],\n    eliteHp: [3, 5, 7, 8, 11, 13, 14, 18],\n    normalMove: [2, 2, 3, 3, 3, 3, 4, 4],\n    eliteMove: [2, 2, 3, 3, 3, 4, 4, 4],\n    normalAttack: [1, 1, 1, 2, 2, 3, 3, 3],\n    eliteAttack: [2, 2, 2, 3, 3, 3, 4, 4],\n    normalModifiers: [\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n    ],\n    eliteModifiers: [\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n      \"empoisonnement\",\n    ],\n    actions: [\n      {\n        id: 1,\n        name: \"Crocs Rapides\",\n        initiative: 33,\n        recycled: false,\n        effects: [\"D\u00E9placement +1, saut\", \"Attaque +0, cible 2\"],\n      },\n      {\n        id: 2,\n        name: \"\u00C0 couvert\",\n        initiative: 18,\n        recycled: false,\n        effects: [\n          \"D\u00E9placement +1, saut\",\n          \"Attaque -1\",\n          \"Toutes les attaques ciblant la vip\u00E8re gagnent d\u00E9savantage ce round\",\n        ],\n      },\n      {\n        id: 3,\n        name: \"Coup Calcul\u00E9\",\n        initiative: 58,\n        recycled: false,\n        effects: [\"D\u00E9placement -1\", \"Attaque +1\"],\n      },\n      {\n        id: 4,\n        name: \"Fr\u00E9n\u00E9sie Toxique\",\n        initiative: 43,\n        recycled: false,\n        effects: [\n          \"D\u00E9placement +1, saut\",\n          \"Attaque -1, cible tous les adversaires adjacents\",\n        ],\n      },\n      {\n        id: 5,\n        name: \"Cerner\",\n        initiative: 32,\n        recycled: true,\n        effects: [\n          \"D\u00E9placement +0\",\n          \"Attaque +0\",\n          \"Ajoute +2 attaque si la cible est adjacente \u00E0 un alli\u00E9 de la vip\u00E8re\",\n        ],\n      },\n      {\n        id: 6,\n        name: \"Cerner\",\n        initiative: 32,\n        recycled: true,\n        effects: [\n          \"D\u00E9placement +0\",\n          \"Attaque +0\",\n          \"Ajoute +2 attaque si la cible est adjacente \u00E0 un alli\u00E9 de la vip\u00E8re\",\n        ],\n      },\n      {\n        id: 7,\n        name: \"Coup D\u00E9fensif\",\n        initiative: 11,\n        recycled: false,\n        effects: [\"Bouclier 1\", \"Attaque +0\"],\n      },\n      {\n        id: 8,\n        name: \"Constriction\",\n        initiative: 23,\n        recycled: false,\n        effects: [\"D\u00E9placement -1\", \"Attaque -1, immobilisation\", \"Attaque -1\"],\n      },\n    ],\n  },\n  // MARK: base_zealot\n  {\n    id: \"base_zealot\",\n    name: \"Z\u00E9lote de Base\",\n    normalHp: [4, 6, 7, 8, 10, 12, 14, 16],\n    eliteHp: [7, 8, 11, 13, 17, 18, 22, 26],\n    normalMove: [2, 2, 3, 3, 3, 4, 4, 4],\n    eliteMove: [2, 2, 3, 3, 3, 4, 4, 4],\n    normalAttack: [2, 2, 3, 3, 3, 3, 4, 5],\n    eliteAttack: [3, 3, 3, 4, 4, 5, 6, 7],\n    normalModifiers: [\n      \"\",\n      \"\",\n      \"\",\n      \"blessure\",\n      \"blessure\",\n      \"blessure\",\n      \"blessure\",\n      \"blessure\",\n    ],\n    eliteModifiers: [\n      \"\",\n      \"blessure\",\n      \"blessure\",\n      \"blessure\",\n      \"blessure\",\n      \"blessure\",\n      \"blessure\",\n      \"blessure\",\n    ],\n    actions: [\n      {\n        id: 1,\n        name: \"Sang Bouillant\",\n        initiative: 46,\n        recycled: false,\n        effects: [\"Attaque +1, port\u00E9e 2, confusion\"],\n      },\n      {\n        id: 2,\n        name: \"Fouet de Damnation\",\n        initiative: 19,\n        recycled: false,\n        effects: [\"D\u00E9placement +0\", \"Attaque -1, mal\u00E9diction\"],\n      },\n      {\n        id: 3,\n        name: \"Drain de Vie\",\n        initiative: 27,\n        recycled: true,\n        effects: [\n          \"Soin 1 sur lui-m\u00EAme\",\n          \"D\u00E9placement +1\",\n          \"Attaque -1, port\u00E9e 2\",\n        ],\n      },\n      {\n        id: 4,\n        name: \"Fl\u00E9au Infame\",\n        initiative: 77,\n        recycled: false,\n        effects: [\"D\u00E9placement -1\", \"Attaque -1, empoisonnement\"],\n      },\n    ],\n  },\n  // MARK: zealot\n  {\n    id: \"zealot\",\n    name: \"Z\u00E9lote\",\n    normalHp: [4, 6, 7, 8, 10, 12, 14, 16],\n    eliteHp: [7, 8, 11, 13, 17, 18, 22, 26],\n    normalMove: [2, 2, 3, 3, 3, 4, 4, 4],\n    eliteMove: [2, 2, 3, 3, 3, 4, 4, 4],\n    normalAttack: [2, 2, 3, 3, 3, 3, 4, 5],\n    eliteAttack: [3, 3, 3, 4, 4, 5, 6, 7],\n    normalModifiers: [\n      \"\",\n      \"\",\n      \"\",\n      \"blessure\",\n      \"blessure\",\n      \"blessure\",\n      \"blessure\",\n      \"blessure\",\n    ],\n    eliteModifiers: [\n      \"\",\n      \"blessure\",\n      \"blessure\",\n      \"blessure\",\n      \"blessure\",\n      \"blessure\",\n      \"blessure\",\n      \"blessure\",\n    ],\n    actions: [\n      {\n        id: 1,\n        name: \"Fouet de Damnation\",\n        initiative: 19,\n        recycled: false,\n        effects: [\n          \"D\u00E9placement +1, saut\",\n          \"Attaque -1, mal\u00E9diction\",\n          \"infuse Air\",\n        ],\n      },\n      {\n        id: 2,\n        name: \"Drain de Vie\",\n        initiative: 27,\n        recycled: true,\n        effects: [\n          \"D\u00E9placement +0\",\n          \"Attaque -1, port\u00E9e 2\",\n          \"Soin X sur lui-m\u00EAme (X=montant d\u00E9gats attaque)\",\n          \"infuse Obscurit\u00E9\",\n        ],\n      },\n      {\n        id: 3,\n        name: \"Assaut Pr\u00E9cipit\u00E9\",\n        initiative: 35,\n        recycled: false,\n        effects: [\"D\u00E9placement +1\", \"Attaque -1\"],\n      },\n      {\n        id: 4,\n        name: \"Sang Bouillant\",\n        initiative: 46,\n        recycled: false,\n        effects: [\n          \"Attaque -1, port\u00E9e 2, cible 2, confusion\",\n          \"[Feu]: +2 port\u00E9e\",\n        ],\n      },\n      {\n        id: 5,\n        name: \"Rien de Particulier\",\n        initiative: 50,\n        recycled: false,\n        effects: [\"D\u00E9placement +0\", \"Attaque +0\"],\n      },\n      {\n        id: 6,\n        name: \"Coup Calcul\u00E9\",\n        initiative: 65,\n        recycled: false,\n        effects: [\"D\u00E9placement -1\", \"Attaque +1\"],\n      },\n      {\n        id: 7,\n        name: \"Fl\u00E9au Infame\",\n        initiative: 77,\n        recycled: false,\n        effects: [\n          \"D\u00E9placement -1\",\n          \"Attaque -1, empoisonnement (cible 2 hexes adjacents voisins\",\n          \"[Air]: +1 attaque\",\n        ],\n      },\n      {\n        id: 8,\n        name: \"Flamme impie\",\n        initiative: 82,\n        recycled: true,\n        effects: [\"Attaque +1, port\u00E9e 3\", \"Infuse Feu\"],\n      },\n    ],\n  },\n  // MARK: horreur de sang\n  {\n    id: \"blood_horror\",\n    name: \"Horreur de sang\",\n    boss: true,\n    hp: [\n      (a) => 7 * a,\n      (a) => 10 * a,\n      (a) => 12 * a,\n      (a) => 15 * a,\n      (a) => 17 * a,\n      (a) => 20 * a,\n      (a) => 23 * a,\n      (a) => 28 * a,\n    ],\n    move: [3, 3, 4, 4, 5, 5, 5, 5],\n    attack: [\n      (a) => a - 1,\n      (a) => a,\n      (a) => a,\n      (a) => a + 1,\n      (a) => a + 1,\n      (a) => a + 2,\n      (a) => a + 3,\n      (a) => a + 4,\n    ],\n    immunities: [\n      \"immobilisation\",\n      \"d\u00E9sarmement\",\n      \"confusion\",\n      \"\u00E9tourdissement\",\n    ],\n    special1: [\n      () =>\n        `saute jusqu'au z\u00E9lote mort le plus \u00E9loign\u00E9 et le ressuscite, ou saute jusqu'a l'aventurier le plus \u00E9loign\u00E9 et Attaque +0`,\n      () =>\n        `saute jusqu'au z\u00E9lote mort le plus \u00E9loign\u00E9 et le ressuscite, ou saute jusqu'a l'aventurier le plus \u00E9loign\u00E9 et Attaque +0`,\n      () =>\n        `saute jusqu'au z\u00E9lote mort le plus \u00E9loign\u00E9 et le ressuscite, ou saute jusqu'a l'aventurier le plus \u00E9loign\u00E9 et Attaque +0`,\n      () =>\n        `saute jusqu'au z\u00E9lote mort le plus \u00E9loign\u00E9 et le ressuscite, ou saute jusqu'a l'aventurier le plus \u00E9loign\u00E9 et Attaque +0`,\n      () =>\n        `saute jusqu'au z\u00E9lote mort le plus \u00E9loign\u00E9 et le ressuscite, ou saute jusqu'a l'aventurier le plus \u00E9loign\u00E9 et Attaque +0`,\n      () =>\n        `saute jusqu'au z\u00E9lote mort le plus \u00E9loign\u00E9 et le ressuscite, ou saute jusqu'a l'aventurier le plus \u00E9loign\u00E9 et Attaque +0`,\n      () =>\n        `saute jusqu'au z\u00E9lote mort le plus \u00E9loign\u00E9 et le ressuscite, ou saute jusqu'a l'aventurier le plus \u00E9loign\u00E9 et Attaque +0`,\n      () =>\n        `saute jusqu'au z\u00E9lote mort le plus \u00E9loign\u00E9 et le ressuscite, ou saute jusqu'a l'aventurier le plus \u00E9loign\u00E9 et Attaque +0`,\n    ],\n    special2: [\n      () =>\n        `d\u00E9placement +0, attaque +0. ressuscite tous les z\u00E9lotes morts dans la salle`,\n      () =>\n        `d\u00E9placement +0, attaque +0. ressuscite tous les z\u00E9lotes morts dans la salle`,\n      () =>\n        `d\u00E9placement +0, attaque +0. ressuscite tous les z\u00E9lotes morts dans la salle`,\n      () =>\n        `d\u00E9placement +0, attaque +0. ressuscite tous les z\u00E9lotes morts dans la salle`,\n      () =>\n        `d\u00E9placement +0, attaque +0. ressuscite tous les z\u00E9lotes morts dans la salle`,\n      () =>\n        `d\u00E9placement +0, attaque +0. ressuscite tous les z\u00E9lotes morts dans la salle`,\n      () =>\n        `d\u00E9placement +0, attaque +0. ressuscite tous les z\u00E9lotes morts dans la salle`,\n      () =>\n        `d\u00E9placement +0, attaque +0. ressuscite tous les z\u00E9lotes morts dans la salle`,\n    ],\n    actions: BOSS_ACTIONS,\n  },\n  // MARK: primat de l'ordre\n  {\n    id: \"primat_de_ordre\",\n    name: \"Primat de l'Ordre\",\n    boss: true,\n    hp: [\n      (a) => 10 * a,\n      (a) => 14 * a,\n      (a) => 17 * a,\n      (a) => 20 * a,\n      (a) => 24 * a,\n      (a) => 28 * a,\n      (a) => 32 * a,\n      (a) => 36 * a,\n    ],\n    move: [2, 2, 2, 2, 3, 3, 3, 3],\n    attack: [\n      () => 3,\n      () => 4,\n      () => 4,\n      () => 5,\n      () => 5,\n      () => 6,\n      () => 7,\n      () => 8,\n    ],\n    immunities: [\n      \"immobilisation\",\n      \"d\u00E9sarmement\",\n      \"confusion\",\n      \"\u00E9tourdissement\",\n      \"mal\u00E9diction\",\n    ],\n    special1: [\n      (a) =>\n        `tous les adversaires \u00E0 port\u00E9e 2 subissent 2 d\u00E9gats, g\u00E9n\u00E9rez ${a / 2} diablotins de sang`,\n      (a) =>\n        `tous les adversaires \u00E0 port\u00E9e 2 subissent 2 d\u00E9gats, g\u00E9n\u00E9rez ${a / 2} diablotins de sang`,\n      (a) =>\n        `tous les adversaires \u00E0 port\u00E9e 2 subissent 2 d\u00E9gats, g\u00E9n\u00E9rez ${a / 2} diablotins de sang`,\n      (a) =>\n        `tous les adversaires \u00E0 port\u00E9e 2 subissent 2 d\u00E9gats, g\u00E9n\u00E9rez ${a / 2} diablotins de sang`,\n      (a) =>\n        `tous les adversaires \u00E0 port\u00E9e 2 subissent 2 d\u00E9gats, g\u00E9n\u00E9rez ${a / 2} diablotins de sang`,\n      (a) =>\n        `tous les adversaires \u00E0 port\u00E9e 2 subissent 2 d\u00E9gats, g\u00E9n\u00E9rez ${a / 2} diablotins de sang`,\n      (a) =>\n        `tous les adversaires \u00E0 port\u00E9e 2 subissent 2 d\u00E9gats, g\u00E9n\u00E9rez ${a / 2} diablotins de sang`,\n      (a) =>\n        `tous les adversaires \u00E0 port\u00E9e 2 subissent 2 d\u00E9gats, g\u00E9n\u00E9rez ${a / 2} diablotins de sang`,\n    ],\n    special2: [\n      () =>\n        `attaque +0, attaque -1 \u00E0 port\u00E9e 2 de la cible, attaque -2 \u00E0 port\u00E9e 2 de la cible`,\n      () =>\n        `attaque +0, attaque -1 \u00E0 port\u00E9e 2 de la cible, attaque -2 \u00E0 port\u00E9e 2 de la cible`,\n      () =>\n        `attaque +0, attaque -1 \u00E0 port\u00E9e 2 de la cible, attaque -2 \u00E0 port\u00E9e 2 de la cible`,\n      () =>\n        `attaque +0, attaque -1 \u00E0 port\u00E9e 2 de la cible, attaque -2 \u00E0 port\u00E9e 2 de la cible`,\n      () =>\n        `attaque +0, attaque -1 \u00E0 port\u00E9e 2 de la cible, attaque -2 \u00E0 port\u00E9e 2 de la cible`,\n      () =>\n        `attaque +0, attaque -1 \u00E0 port\u00E9e 2 de la cible, attaque -2 \u00E0 port\u00E9e 2 de la cible`,\n      () =>\n        `attaque +0, attaque -1 \u00E0 port\u00E9e 2 de la cible, attaque -2 \u00E0 port\u00E9e 2 de la cible`,\n      () =>\n        `attaque +0, attaque -1 \u00E0 port\u00E9e 2 de la cible, attaque -2 \u00E0 port\u00E9e 2 de la cible`,\n    ],\n    actions: BOSS_ACTIONS,\n  },\n  // MARK: tumeur de sang\n  {\n    id: \"tumeur_de_sang\",\n    name: \"Tumeur de Sang\",\n    boss: true,\n    hp: [\n      (a) => 7 * a,\n      (a) => 10 * a,\n      (a) => 12 * a,\n      (a) => 15 * a,\n      (a) => 17 * a,\n      (a) => 20 * a,\n      (a) => 23 * a,\n      (a) => 28 * a,\n    ],\n    move: [0, 0, 0, 0, 0, 0, 0, 0],\n    attack: [\n      (a) => a - 1,\n      (a) => a,\n      (a) => a,\n      (a) => a + 1,\n      (a) => a + 1,\n      (a) => a + 2,\n      (a) => a + 2,\n      (a) => a + 3,\n    ],\n    immunities: [\"d\u00E9sarmement\", \"confusion\", \"\u00E9tourdissement\"],\n    special1: [\n      (a) => `Soin ${a} sur elle-m\u00EAme`,\n      (a) => `Soin ${a} sur elle-m\u00EAme`,\n      (a) => `Soin ${a + 1} sur elle-m\u00EAme`,\n      (a) => `Soin ${a + 1} sur elle-m\u00EAme`,\n      (a) => `Soin ${a + 2} sur elle-m\u00EAme`,\n      (a) => `Soin ${a + 2} sur elle-m\u00EAme`,\n      (a) => `Soin ${a + 3} sur elle-m\u00EAme`,\n      (a) => `Soin ${a + 3} sur elle-m\u00EAme`,\n    ],\n    special2: [\n      () => `Soin 2 sur tous les alli\u00E9s`,\n      () => `Soin 2 sur tous les alli\u00E9s`,\n      () => `Soin 3 sur tous les alli\u00E9s`,\n      () => `Soin 3 sur tous les alli\u00E9s`,\n      () => `Soin 4 sur tous les alli\u00E9s`,\n      () => `Soin 4 sur tous les alli\u00E9s`,\n      () => `Soin 5 sur tous les alli\u00E9s`,\n      () => `Soin 5 sur tous les alli\u00E9s`,\n    ],\n    actions: BOSS_ACTIONS,\n  },\n];\n\nexport const ENEMIES_MAP = {};\nfor (let enemies of ENEMIES) {\n  ENEMIES_MAP[enemies.id] = enemies;\n}\n\nexport const BATTLE_GOALS = [\n  {\n    id: 1,\n    title: \"Maraudeur\",\n    description:\n      \"Effectuer deux actions pr\u00E9sentant l'icone Perdue durant le m\u00EAme round\",\n  },\n  {\n    id: 2,\n    title: \"Reclus\",\n    description: \"Ne jamais terminer votre tour adjacent \u00E0 un de vos alli\u00E9s\",\n  },\n  {\n    id: 3,\n    title: \"Vite sur pied\",\n    description:\n      \"Terminer le sc\u00E9nario avec un nombre de points de vie \u00E9gal \u00E0 votre valeur maximale de points de vie\",\n  },\n  {\n    id: 4,\n    title: \"Feinteur\",\n    description:\n      \"\u00C9liminer un monstre qui ne vous est pas adjacent alors que vous \u00EAtes adjacent \u00E0 un autre\",\n  },\n  {\n    id: 5,\n    title: \"T\u00EAte br\u00FBl\u00E9e\",\n    description:\n      \"Effectuer deux actions pr\u00E9sentant l'icone Perdue avant votre premier repos\",\n  },\n  {\n    id: 6,\n    title: \"Insomniaque\",\n    description:\n      \"Subir des d\u00E9g\u00E2ts d'une attaque intervenant le m\u00EAme round o\u00F9 vous prenez un repos long\",\n  },\n  {\n    id: 7,\n    title: \"Pacifiste\",\n    description: \"\u00C9liminer au maximum trois monstres\",\n  },\n  {\n    id: 8,\n    title: \"Acrobate\",\n    description: \"Perdre une carte pour \u00E9viter de subir 5 d\u00E9gats ou plus\",\n  },\n  {\n    id: 9,\n    title: \"Abstinent\",\n    description: \"Ne jamais consommer de potion\",\n  },\n  {\n    id: 10,\n    title: \"Fin de match\",\n    description: \"\u00CAtre le dernier \u00E0 \u00E9liminer un monstre lors de ce sc\u00E9nario\",\n  },\n  {\n    id: 11,\n    title: \"Conservateur\",\n    description: \"Ne jamais perdre une carte pour \u00E9viter de subir des d\u00E9gats\",\n  },\n  {\n    id: 12,\n    title: \"Dur \u00E0 cuire\",\n    description:\n      \"Ne jamais laisser votre nombre de points de vie descendre sous la moiti\u00E9 de votre valeur maximale de points de vie (arrondie au sup\u00E9rieur)\",\n  },\n  {\n    id: 13,\n    title: \"Comp\u00E9titeur\",\n    description: \"Ne jamais quitter un hexagone adjacent \u00E0 un monstre\",\n  },\n  {\n    id: 14,\n    title: \"Vol \u00E0 la tire\",\n    description:\n      \"Ramasser au moins un pion Monnaie en effectuant une action Pillage lorsque vous \u00EAtes sur un hexagone adjacents \u00E0 deux monstres ou plus\",\n  },\n  {\n    id: 15,\n    title: \"Pelote \u00E0 \u00E9pingles\",\n    description:\n      \"\u00CAtre la cible d'attaque d'au moins trois monstres durant le m\u00EAme round\",\n  },\n  {\n    id: 16,\n    title: \"Pl\u00E9b\u00E9ien\",\n    description: \"Ne jamais \u00E9liminer un monstre d'\u00E9lite ou un boss\",\n  },\n  {\n    id: 17,\n    title: \"\u00C9goiste\",\n    description: \"Amasser plus de pions Monnaie que tout autre aventurier\",\n  },\n  {\n    id: 18,\n    title: \"Vecteur\",\n    description:\n      \"Appliquer un \u00E9tat n\u00E9gatif \u00E0 un monstre alors que vous \u00EAtes vous-m\u00EAme sous le coup d'un \u00E9tat n\u00E9gatif\",\n  },\n  {\n    id: 19,\n    title: \"Gringalet\",\n    description: \"Finir \u00E9puis\u00E9 avant tout autre aventurier\",\n  },\n  {\n    id: 20,\n    title: \"Joueur\",\n    description: \"\u00C9liminer un monstre gr\u00E2ce \u00E0 une attaque avec d\u00E9saventage\",\n  },\n  {\n    id: 21,\n    title: \"Pionnier\",\n    description:\n      \"Ouvrir une porte et terminer le m\u00EAme tour dans la salle r\u00E9v\u00E9l\u00E9e\",\n  },\n  {\n    id: 22,\n    title: \"Tra\u00EEnard\",\n    description: \"Ne jamais prendre de repos court\",\n  },\n  {\n    id: 23,\n    title: \"Assistant\",\n    description:\n      \"\u00C9liminer un monstre pr\u00E9c\u00E9demment attaqu\u00E9 par un de vos alli\u00E9s durant le m\u00EAme round\",\n  },\n  {\n    id: 24,\n    title: \"Altruiste\",\n    description: \"Amasser moins de pions monnaie que tout autre aventurier\",\n  },\n  {\n    id: 25,\n    title: \"Sp\u00E9cialiste\",\n    description: \"Ne jamais entreprendre d'action par d\u00E9faut\",\n  },\n  {\n    id: 26,\n    title: \"Agoraphobe\",\n    description: \"Terminer tous vos tours adjacent \u00E0 un mur ou \u00E0 un obstacle\",\n  },\n  {\n    id: 27,\n    title: \"Hyperactif\",\n    description: \"Ne jamais prendre un repos long\",\n  },\n  {\n    id: 28,\n    title: \"Ombre\",\n    description: \"Terminer tous vos tours adjacents \u00E0 un de vos alli\u00E9s\",\n  },\n  {\n    id: 29,\n    title: \"Sadique\",\n    description: \"\u00C9liminer au moins cinq monstres\",\n  },\n  {\n    id: 30,\n    title: \"Masochiste\",\n    description: \"Terminer le sc\u00E9nario avec 3 points de vie au maximum\",\n  },\n  {\n    id: 31,\n    title: \"Premier sang\",\n    description: \"\u00CAtre le premier \u00E0 \u00E9liminer un monstre lors de ce sc\u00E9nario\",\n  },\n  {\n    id: 32,\n    title: \"Coupe-jarret\",\n    description:\n      \"\u00C9liminer un monstre et piller le pion Monnaie qu'il laisse tomber au cours du m\u00EAme tour\",\n  },\n];\n\nexport const MONSTER_MODIFIERS_DECK = [\n  {\n    id: 1,\n    effects: [\"+0\"],\n    recycled: false,\n    color: false,\n  },\n  {\n    id: 2,\n    effects: [\"+0\"],\n    recycled: false,\n    color: false,\n  },\n  {\n    id: 3,\n    effects: [\"+0\"],\n    recycled: false,\n    color: false,\n  },\n  {\n    id: 4,\n    effects: [\"+0\"],\n    recycled: false,\n    color: false,\n  },\n  {\n    id: 5,\n    effects: [\"+0\"],\n    recycled: false,\n    color: false,\n  },\n  {\n    id: 6,\n    effects: [\"+0\"],\n    recycled: false,\n    color: false,\n  },\n  {\n    id: 7,\n    effects: [\"-1\"],\n    recycled: false,\n    color: \"#fff0f0\",\n  },\n  {\n    id: 8,\n    effects: [\"-1\"],\n    recycled: false,\n    color: \"#fff0f0\",\n  },\n  {\n    id: 9,\n    effects: [\"-1\"],\n    recycled: false,\n    color: \"#fff0f0\",\n  },\n  {\n    id: 10,\n    effects: [\"-1\"],\n    recycled: false,\n    color: \"#fff0f0\",\n  },\n  {\n    id: 11,\n    effects: [\"-1\"],\n    recycled: false,\n    color: \"#fff0f0\",\n  },\n  {\n    id: 12,\n    effects: [\"-2\"],\n    recycled: false,\n    color: \"#fff0f0\",\n  },\n  {\n    id: 13,\n    effects: [\"+1\"],\n    recycled: false,\n    color: \"#ebfceb\",\n  },\n  {\n    id: 14,\n    effects: [\"+1\"],\n    recycled: false,\n    color: \"#ebfceb\",\n  },\n  {\n    id: 15,\n    effects: [\"+1\"],\n    recycled: false,\n    color: \"#ebfceb\",\n  },\n  {\n    id: 16,\n    effects: [\"+1\"],\n    recycled: false,\n    color: \"#ebfceb\",\n  },\n  {\n    id: 17,\n    effects: [\"+1\"],\n    recycled: false,\n    color: \"#ebfceb\",\n  },\n  {\n    id: 18,\n    effects: [\"x0\"],\n    recycled: true,\n    color: \"#ffffd9\",\n  },\n  {\n    id: 19,\n    effects: [\"x2\"],\n    recycled: true,\n    color: \"#ffc7ff\",\n  },\n  {\n    id: 20,\n    effects: [\"+2\"],\n    recycled: false,\n    color: \"#ebfceb\",\n  },\n];\n", "// -----------------------------------------------------------------------------\n// MARK: utils\n// -----------------------------------------------------------------------------\n\nexport function shuffleArray(array) {\n  for (var i = array.length - 1; i >= 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n}\n\nlet isSleepPrevented = false;\nexport function preventSleep() {\n  if (\"wakeLock\" in navigator && !isSleepPrevented) {\n    isSleepPrevented = true;\n    document.addEventListener(\n      \"click\",\n      () => {\n        navigator.wakeLock.request(\"screen\");\n      },\n      { once: true },\n    );\n  }\n}\n", "import { ENEMIES_MAP, MONSTER_MODIFIERS_DECK } from \"./data\";\nimport { shuffleArray } from \"./utils\";\n\n// -----------------------------------------------------------------------------\n// MARK: Game state\n// -----------------------------------------------------------------------------\n\nexport class GameState {\n  nextId = 1;\n  heroes = [];\n  enemies = [];\n  scenarioLevel = 1;\n  round = 0;\n  fire = 0;\n  ice = 0;\n  air = 0;\n  earth = 0;\n  light = 0;\n  darkness = 0;\n  monsterActions = {};\n  enemyModifiers = {\n    visible: 0, // number of discarded cards to show\n    deck: shuffleArray(MONSTER_MODIFIERS_DECK.map((c) => c.id)),\n    discardPile: [],\n  };\n  battleGoals = {};\n  turnTracker = {};\n  activeEntity = false;\n  config = {\n    elements: true,\n    turnTracker: true,\n    battleGoals: true,\n    enemyActions: true,\n    attackModifiers: true,\n  };\n\n  screens = [\"START\"];\n  states = [null];\n\n  save() {\n    const state = JSON.stringify(this);\n    localStorage.setItem(\"game_state\", state);\n  }\n\n  restore() {\n    const dataStr = localStorage.getItem(\"game_state\");\n    if (!dataStr) {\n      return;\n    }\n    const data = JSON.parse(dataStr);\n    Object.assign(this, data);\n  }\n\n  get screen() {\n    return this.screens.at(-1);\n  }\n\n  get state() {\n    return this.states.at(-1);\n  }\n\n  setScreen(screen) {\n    this.screens = [screen];\n    this.states = [null];\n  }\n\n  pushScreen(screen, state = null) {\n    this.screens.push(screen);\n    this.states.push(state);\n  }\n\n  popScreen() {\n    this.screens.pop();\n    this.states.pop();\n  }\n\n  addHero(hero) {\n    hero.id = this.nextId++;\n    this.heroes.push(hero);\n  }\n\n  addEnemy(type, nbr, elite) {\n    const enemy = ENEMIES_MAP[type];\n    const level = this.scenarioLevel;\n    const A = this.heroes.length;\n    // hp computation\n    let maxHp;\n    if (enemy.boss) {\n      maxHp = enemy.hp[level](A);\n    } else {\n      const hpArray = elite ? enemy.eliteHp : enemy.normalHp;\n      maxHp = hpArray[level];\n    }\n    // move computation\n    let move;\n    if (enemy.boss) {\n      move = enemy.move[level];\n    } else {\n      const moveArray = elite ? enemy.eliteMove : enemy.normalMove;\n      move = moveArray[level];\n    }\n    // attack computation\n    let attack;\n    if (enemy.boss) {\n      attack = enemy.attack[level](A);\n    } else {\n      const attackArray = elite\n        ? enemy.eliteAttack\n        : enemy.normalAttack;\n      attack = attackArray[level];\n    }\n    // modifiers computation\n    let modifiers = \"\";\n    if (!enemy.boss) {\n      const modifiersArray = elite\n        ? enemy.eliteModifiers\n        : enemy.normalModifiers;\n      modifiers = modifiersArray[level];\n    }\n    // boss specific values\n    let immunities = \"\";\n    let special1 = \"\";\n    let special2 = \"\";\n    if (enemy.boss) {\n      immunities = enemy.immunities.join(\", \");\n      special1 = enemy.special1[level](A);\n      special2 = enemy.special2[level](A);\n    }\n    const enemyObj = {\n      id: this.getId(),\n      type: type,\n      name: enemy.name,\n      nbr: nbr,\n      elite: elite,\n      boss: !!enemy.boss,\n      hp: maxHp,\n      maxHp,\n      move,\n      attack,\n      modifiers,\n      immunities,\n      special1,\n      special2,\n      hasTurnEnded: false,\n      status: {\n        poisoned: false,\n        wound: false,\n        confusion: false,\n        immobilisation: false,\n        stunned: false,\n        disarmed: false,\n        renforced: false,\n      },\n    };\n\n    this.enemies.push(enemyObj);\n    this.turnTracker[enemyObj.type] = false;\n    if (!this.monsterActions[enemyObj.type]) {\n      const deck = ENEMIES_MAP[enemyObj.type].actions.map((a) => a.id);\n      shuffleArray(deck);\n      this.monsterActions[enemyObj.type] = {\n        deck,\n        discardPile: [],\n        active: false,\n        initiative: false,\n      };\n    }\n  }\n\n  getId() {\n    return this.nextId++;\n  }\n\n  isNextRoundEnabled() {\n    if (this.round === 0) {\n      return true;\n    }\n    if (this.config.turnTracker) {\n      for (let hero of this.heroes) {\n        if (!this.turnTracker[hero.id]) {\n          return false;\n        }\n      }\n      for (let enemy of this.enemies) {\n        if (!this.turnTracker[enemy.type]) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  startTurn(entity) {\n    const prevEntity = this.activeEntity;\n    if (prevEntity) {\n      this.endTurn(prevEntity);\n    }\n    this.activeEntity = entity;\n    this.turnTracker[entity] = true;\n  }\n\n  endTurn(entity) {\n    if (typeof entity === \"number\") {\n      // its a hero!\n      const hero = this.heroes.find((hero) => hero.id === entity);\n      this.clearStatus(hero.status);\n    } else {\n      // its a monster!\n      for (let enemy of this.enemies) {\n        if (enemy.type === entity && !enemy.hasTurnEnded) {\n          this.clearStatus(enemy.status);\n        }\n        enemy.hasTurnEnded = true;\n      }\n    }\n  }\n\n  clearStatus(status) {\n    status.confusion = Math.max(0, status.confusion - 1);\n    status.immobilisation = Math.max(0, status.immobilisation - 1);\n    status.stunned = Math.max(0, status.stunned - 1);\n    status.disarmed = Math.max(0, status.disarmed - 1);\n    status.renforced = Math.max(0, status.renforced - 1);\n  }\n\n  incrementRound() {\n    if (this.activeEntity) {\n      this.endTurn(this.activeEntity);\n    }\n    this.round++;\n    for (let elem of [\"fire\", \"ice\", \"air\", \"earth\", \"light\", \"darkness\"]) {\n      if (this[elem] > 0) {\n        this[elem]--;\n      }\n    }\n    // reset all monster actions\n    for (let type in this.monsterActions) {\n      this.monsterActions[type].active = false;\n      this.monsterActions[type].initiative = false;\n      let shouldShuffle = false;\n      for (let actionId of this.monsterActions[type].discardPile) {\n        const action = ENEMIES_MAP[type].actions.find((a) => a.id === actionId);\n        if (action.recycled) {\n          shouldShuffle = true;\n          break;\n        }\n      }\n      if (shouldShuffle) {\n        const deck = ENEMIES_MAP[type].actions.map((a) => a.id);\n        shuffleArray(deck);\n        this.monsterActions[type].deck = deck;\n        this.monsterActions[type].discardPile = [];\n      }\n    }\n\n    // reset all enemy attack modifiers if necessary\n    const mods = this.enemyModifiers;\n    mods.visible = 0;\n    // remove strings (curses and blessings)\n    mods.discardPile = mods.discardPile.filter((c) => typeof c === \"number\");\n    const discardedMods = mods.discardPile.map((id) =>\n      MONSTER_MODIFIERS_DECK.find((mod) => mod.id === id),\n    );\n    if (discardedMods.find((mod) => mod.recycled)) {\n      // should shuffle\n      while (mods.discardPile.length) {\n        mods.deck.push(mods.discardPile.pop());\n      }\n      shuffleArray(mods.deck);\n    }\n\n    // reset turntracker to false\n    this.turnTracker = {};\n    this.activeEntity = false;\n\n    for (let enemy of this.enemies) {\n      enemy.hasTurnEnded = false;\n    }\n  }\n\n  addCurse() {\n    const curses = this.enemyModifiers.deck.filter((id) => {\n      return typeof id === \"string\" && id.startsWith(\"curse\");\n    });\n    if (curses.length < 10) {\n      this.enemyModifiers.deck.push(`curse${-this.nextId++}`);\n      shuffleArray(this.enemyModifiers.deck);\n    }\n  }\n  addBlessing() {\n    const blessings = this.enemyModifiers.deck.filter((id) => {\n      return typeof id === \"string\" && id.startsWith(\"blessing\");\n    });\n    if (blessings.length < 10) {\n      this.enemyModifiers.deck.push(`blessing${-this.nextId++}`);\n      shuffleArray(this.enemyModifiers.deck);\n    }\n  }\n}\n", "function filterOutModifiersFromData(dataList) {\r\n    dataList = dataList.slice();\r\n    const modifiers = [];\r\n    let elm;\r\n    while ((elm = dataList[0]) && typeof elm === \"string\") {\r\n        modifiers.push(dataList.shift());\r\n    }\r\n    return { modifiers, data: dataList };\r\n}\r\nconst config = {\r\n    // whether or not blockdom should normalize DOM whenever a block is created.\r\n    // Normalizing dom mean removing empty text nodes (or containing only spaces)\r\n    shouldNormalizeDom: true,\r\n    // this is the main event handler. Every event handler registered with blockdom\r\n    // will go through this function, giving it the data registered in the block\r\n    // and the event\r\n    mainEventHandler: (data, ev, currentTarget) => {\r\n        if (typeof data === \"function\") {\r\n            data(ev);\r\n        }\r\n        else if (Array.isArray(data)) {\r\n            data = filterOutModifiersFromData(data).data;\r\n            data[0](data[1], ev);\r\n        }\r\n        return false;\r\n    },\r\n};\n\n// -----------------------------------------------------------------------------\r\n// Toggler node\r\n// -----------------------------------------------------------------------------\r\nclass VToggler {\r\n    constructor(key, child) {\r\n        this.key = key;\r\n        this.child = child;\r\n    }\r\n    mount(parent, afterNode) {\r\n        this.parentEl = parent;\r\n        this.child.mount(parent, afterNode);\r\n    }\r\n    moveBeforeDOMNode(node, parent) {\r\n        this.child.moveBeforeDOMNode(node, parent);\r\n    }\r\n    moveBeforeVNode(other, afterNode) {\r\n        this.moveBeforeDOMNode((other && other.firstNode()) || afterNode);\r\n    }\r\n    patch(other, withBeforeRemove) {\r\n        if (this === other) {\r\n            return;\r\n        }\r\n        let child1 = this.child;\r\n        let child2 = other.child;\r\n        if (this.key === other.key) {\r\n            child1.patch(child2, withBeforeRemove);\r\n        }\r\n        else {\r\n            child2.mount(this.parentEl, child1.firstNode());\r\n            if (withBeforeRemove) {\r\n                child1.beforeRemove();\r\n            }\r\n            child1.remove();\r\n            this.child = child2;\r\n            this.key = other.key;\r\n        }\r\n    }\r\n    beforeRemove() {\r\n        this.child.beforeRemove();\r\n    }\r\n    remove() {\r\n        this.child.remove();\r\n    }\r\n    firstNode() {\r\n        return this.child.firstNode();\r\n    }\r\n    toString() {\r\n        return this.child.toString();\r\n    }\r\n}\r\nfunction toggler(key, child) {\r\n    return new VToggler(key, child);\r\n}\n\n// Custom error class that wraps error that happen in the owl lifecycle\r\nclass OwlError extends Error {\r\n}\n\nconst { setAttribute: elemSetAttribute, removeAttribute } = Element.prototype;\r\nconst tokenList = DOMTokenList.prototype;\r\nconst tokenListAdd = tokenList.add;\r\nconst tokenListRemove = tokenList.remove;\r\nconst isArray = Array.isArray;\r\nconst { split, trim } = String.prototype;\r\nconst wordRegexp = /\\s+/;\r\n/**\r\n * We regroup here all code related to updating attributes in a very loose sense:\r\n * attributes, properties and classs are all managed by the functions in this\r\n * file.\r\n */\r\nfunction setAttribute(key, value) {\r\n    switch (value) {\r\n        case false:\r\n        case undefined:\r\n            removeAttribute.call(this, key);\r\n            break;\r\n        case true:\r\n            elemSetAttribute.call(this, key, \"\");\r\n            break;\r\n        default:\r\n            elemSetAttribute.call(this, key, value);\r\n    }\r\n}\r\nfunction createAttrUpdater(attr) {\r\n    return function (value) {\r\n        setAttribute.call(this, attr, value);\r\n    };\r\n}\r\nfunction attrsSetter(attrs) {\r\n    if (isArray(attrs)) {\r\n        if (attrs[0] === \"class\") {\r\n            setClass.call(this, attrs[1]);\r\n        }\r\n        else {\r\n            setAttribute.call(this, attrs[0], attrs[1]);\r\n        }\r\n    }\r\n    else {\r\n        for (let k in attrs) {\r\n            if (k === \"class\") {\r\n                setClass.call(this, attrs[k]);\r\n            }\r\n            else {\r\n                setAttribute.call(this, k, attrs[k]);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction attrsUpdater(attrs, oldAttrs) {\r\n    if (isArray(attrs)) {\r\n        const name = attrs[0];\r\n        const val = attrs[1];\r\n        if (name === oldAttrs[0]) {\r\n            if (val === oldAttrs[1]) {\r\n                return;\r\n            }\r\n            if (name === \"class\") {\r\n                updateClass.call(this, val, oldAttrs[1]);\r\n            }\r\n            else {\r\n                setAttribute.call(this, name, val);\r\n            }\r\n        }\r\n        else {\r\n            removeAttribute.call(this, oldAttrs[0]);\r\n            setAttribute.call(this, name, val);\r\n        }\r\n    }\r\n    else {\r\n        for (let k in oldAttrs) {\r\n            if (!(k in attrs)) {\r\n                if (k === \"class\") {\r\n                    updateClass.call(this, \"\", oldAttrs[k]);\r\n                }\r\n                else {\r\n                    removeAttribute.call(this, k);\r\n                }\r\n            }\r\n        }\r\n        for (let k in attrs) {\r\n            const val = attrs[k];\r\n            if (val !== oldAttrs[k]) {\r\n                if (k === \"class\") {\r\n                    updateClass.call(this, val, oldAttrs[k]);\r\n                }\r\n                else {\r\n                    setAttribute.call(this, k, val);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction toClassObj(expr) {\r\n    const result = {};\r\n    switch (typeof expr) {\r\n        case \"string\":\r\n            // we transform here a list of classes into an object:\r\n            //  'hey you' becomes {hey: true, you: true}\r\n            const str = trim.call(expr);\r\n            if (!str) {\r\n                return {};\r\n            }\r\n            let words = split.call(str, wordRegexp);\r\n            for (let i = 0, l = words.length; i < l; i++) {\r\n                result[words[i]] = true;\r\n            }\r\n            return result;\r\n        case \"object\":\r\n            // this is already an object but we may need to split keys:\r\n            // {'a': true, 'b c': true} should become {a: true, b: true, c: true}\r\n            for (let key in expr) {\r\n                const value = expr[key];\r\n                if (value) {\r\n                    key = trim.call(key);\r\n                    if (!key) {\r\n                        continue;\r\n                    }\r\n                    const words = split.call(key, wordRegexp);\r\n                    for (let word of words) {\r\n                        result[word] = value;\r\n                    }\r\n                }\r\n            }\r\n            return result;\r\n        case \"undefined\":\r\n            return {};\r\n        case \"number\":\r\n            return { [expr]: true };\r\n        default:\r\n            return { [expr]: true };\r\n    }\r\n}\r\nfunction setClass(val) {\r\n    val = val === \"\" ? {} : toClassObj(val);\r\n    // add classes\r\n    const cl = this.classList;\r\n    for (let c in val) {\r\n        tokenListAdd.call(cl, c);\r\n    }\r\n}\r\nfunction updateClass(val, oldVal) {\r\n    oldVal = oldVal === \"\" ? {} : toClassObj(oldVal);\r\n    val = val === \"\" ? {} : toClassObj(val);\r\n    const cl = this.classList;\r\n    // remove classes\r\n    for (let c in oldVal) {\r\n        if (!(c in val)) {\r\n            tokenListRemove.call(cl, c);\r\n        }\r\n    }\r\n    // add classes\r\n    for (let c in val) {\r\n        if (!(c in oldVal)) {\r\n            tokenListAdd.call(cl, c);\r\n        }\r\n    }\r\n}\n\n/**\r\n * Creates a batched version of a callback so that all calls to it in the same\r\n * microtick will only call the original callback once.\r\n *\r\n * @param callback the callback to batch\r\n * @returns a batched version of the original callback\r\n */\r\nfunction batched(callback) {\r\n    let scheduled = false;\r\n    return async (...args) => {\r\n        if (!scheduled) {\r\n            scheduled = true;\r\n            await Promise.resolve();\r\n            scheduled = false;\r\n            callback(...args);\r\n        }\r\n    };\r\n}\r\n/**\r\n * Determine whether the given element is contained in its ownerDocument:\r\n * either directly or with a shadow root in between.\r\n */\r\nfunction inOwnerDocument(el) {\r\n    if (!el) {\r\n        return false;\r\n    }\r\n    if (el.ownerDocument.contains(el)) {\r\n        return true;\r\n    }\r\n    const rootNode = el.getRootNode();\r\n    return rootNode instanceof ShadowRoot && el.ownerDocument.contains(rootNode.host);\r\n}\r\nfunction validateTarget(target) {\r\n    // Get the document and HTMLElement corresponding to the target to allow mounting in iframes\r\n    const document = target && target.ownerDocument;\r\n    if (document) {\r\n        const HTMLElement = document.defaultView.HTMLElement;\r\n        if (target instanceof HTMLElement || target instanceof ShadowRoot) {\r\n            if (!document.body.contains(target instanceof HTMLElement ? target : target.host)) {\r\n                throw new OwlError(\"Cannot mount a component on a detached dom node\");\r\n            }\r\n            return;\r\n        }\r\n    }\r\n    throw new OwlError(\"Cannot mount component: the target is not a valid DOM element\");\r\n}\r\nclass EventBus extends EventTarget {\r\n    trigger(name, payload) {\r\n        this.dispatchEvent(new CustomEvent(name, { detail: payload }));\r\n    }\r\n}\r\nfunction whenReady(fn) {\r\n    return new Promise(function (resolve) {\r\n        if (document.readyState !== \"loading\") {\r\n            resolve(true);\r\n        }\r\n        else {\r\n            document.addEventListener(\"DOMContentLoaded\", resolve, false);\r\n        }\r\n    }).then(fn || function () { });\r\n}\r\nasync function loadFile(url) {\r\n    const result = await fetch(url);\r\n    if (!result.ok) {\r\n        throw new OwlError(\"Error while fetching xml templates\");\r\n    }\r\n    return await result.text();\r\n}\r\n/*\r\n * This class just transports the fact that a string is safe\r\n * to be injected as HTML. Overriding a JS primitive is quite painful though\r\n * so we need to redfine toString and valueOf.\r\n */\r\nclass Markup extends String {\r\n}\r\n/*\r\n * Marks a value as safe, that is, a value that can be injected as HTML directly.\r\n * It should be used to wrap the value passed to a t-out directive to allow a raw rendering.\r\n */\r\nfunction markup(value) {\r\n    return new Markup(value);\r\n}\n\nfunction createEventHandler(rawEvent) {\r\n    const eventName = rawEvent.split(\".\")[0];\r\n    const capture = rawEvent.includes(\".capture\");\r\n    if (rawEvent.includes(\".synthetic\")) {\r\n        return createSyntheticHandler(eventName, capture);\r\n    }\r\n    else {\r\n        return createElementHandler(eventName, capture);\r\n    }\r\n}\r\n// Native listener\r\nlet nextNativeEventId = 1;\r\nfunction createElementHandler(evName, capture = false) {\r\n    let eventKey = `__event__${evName}_${nextNativeEventId++}`;\r\n    if (capture) {\r\n        eventKey = `${eventKey}_capture`;\r\n    }\r\n    function listener(ev) {\r\n        const currentTarget = ev.currentTarget;\r\n        if (!currentTarget || !inOwnerDocument(currentTarget))\r\n            return;\r\n        const data = currentTarget[eventKey];\r\n        if (!data)\r\n            return;\r\n        config.mainEventHandler(data, ev, currentTarget);\r\n    }\r\n    function setup(data) {\r\n        this[eventKey] = data;\r\n        this.addEventListener(evName, listener, { capture });\r\n    }\r\n    function remove() {\r\n        delete this[eventKey];\r\n        this.removeEventListener(evName, listener, { capture });\r\n    }\r\n    function update(data) {\r\n        this[eventKey] = data;\r\n    }\r\n    return { setup, update, remove };\r\n}\r\n// Synthetic handler: a form of event delegation that allows placing only one\r\n// listener per event type.\r\nlet nextSyntheticEventId = 1;\r\nfunction createSyntheticHandler(evName, capture = false) {\r\n    let eventKey = `__event__synthetic_${evName}`;\r\n    if (capture) {\r\n        eventKey = `${eventKey}_capture`;\r\n    }\r\n    setupSyntheticEvent(evName, eventKey, capture);\r\n    const currentId = nextSyntheticEventId++;\r\n    function setup(data) {\r\n        const _data = this[eventKey] || {};\r\n        _data[currentId] = data;\r\n        this[eventKey] = _data;\r\n    }\r\n    function remove() {\r\n        delete this[eventKey];\r\n    }\r\n    return { setup, update: setup, remove };\r\n}\r\nfunction nativeToSyntheticEvent(eventKey, event) {\r\n    let dom = event.target;\r\n    while (dom !== null) {\r\n        const _data = dom[eventKey];\r\n        if (_data) {\r\n            for (const data of Object.values(_data)) {\r\n                const stopped = config.mainEventHandler(data, event, dom);\r\n                if (stopped)\r\n                    return;\r\n            }\r\n        }\r\n        dom = dom.parentNode;\r\n    }\r\n}\r\nconst CONFIGURED_SYNTHETIC_EVENTS = {};\r\nfunction setupSyntheticEvent(evName, eventKey, capture = false) {\r\n    if (CONFIGURED_SYNTHETIC_EVENTS[eventKey]) {\r\n        return;\r\n    }\r\n    document.addEventListener(evName, (event) => nativeToSyntheticEvent(eventKey, event), {\r\n        capture,\r\n    });\r\n    CONFIGURED_SYNTHETIC_EVENTS[eventKey] = true;\r\n}\n\nconst getDescriptor$3 = (o, p) => Object.getOwnPropertyDescriptor(o, p);\r\nconst nodeProto$4 = Node.prototype;\r\nconst nodeInsertBefore$3 = nodeProto$4.insertBefore;\r\nconst nodeSetTextContent$1 = getDescriptor$3(nodeProto$4, \"textContent\").set;\r\nconst nodeRemoveChild$3 = nodeProto$4.removeChild;\r\n// -----------------------------------------------------------------------------\r\n// Multi NODE\r\n// -----------------------------------------------------------------------------\r\nclass VMulti {\r\n    constructor(children) {\r\n        this.children = children;\r\n    }\r\n    mount(parent, afterNode) {\r\n        const children = this.children;\r\n        const l = children.length;\r\n        const anchors = new Array(l);\r\n        for (let i = 0; i < l; i++) {\r\n            let child = children[i];\r\n            if (child) {\r\n                child.mount(parent, afterNode);\r\n            }\r\n            else {\r\n                const childAnchor = document.createTextNode(\"\");\r\n                anchors[i] = childAnchor;\r\n                nodeInsertBefore$3.call(parent, childAnchor, afterNode);\r\n            }\r\n        }\r\n        this.anchors = anchors;\r\n        this.parentEl = parent;\r\n    }\r\n    moveBeforeDOMNode(node, parent = this.parentEl) {\r\n        this.parentEl = parent;\r\n        const children = this.children;\r\n        const anchors = this.anchors;\r\n        for (let i = 0, l = children.length; i < l; i++) {\r\n            let child = children[i];\r\n            if (child) {\r\n                child.moveBeforeDOMNode(node, parent);\r\n            }\r\n            else {\r\n                const anchor = anchors[i];\r\n                nodeInsertBefore$3.call(parent, anchor, node);\r\n            }\r\n        }\r\n    }\r\n    moveBeforeVNode(other, afterNode) {\r\n        if (other) {\r\n            const next = other.children[0];\r\n            afterNode = (next ? next.firstNode() : other.anchors[0]) || null;\r\n        }\r\n        const children = this.children;\r\n        const parent = this.parentEl;\r\n        const anchors = this.anchors;\r\n        for (let i = 0, l = children.length; i < l; i++) {\r\n            let child = children[i];\r\n            if (child) {\r\n                child.moveBeforeVNode(null, afterNode);\r\n            }\r\n            else {\r\n                const anchor = anchors[i];\r\n                nodeInsertBefore$3.call(parent, anchor, afterNode);\r\n            }\r\n        }\r\n    }\r\n    patch(other, withBeforeRemove) {\r\n        if (this === other) {\r\n            return;\r\n        }\r\n        const children1 = this.children;\r\n        const children2 = other.children;\r\n        const anchors = this.anchors;\r\n        const parentEl = this.parentEl;\r\n        for (let i = 0, l = children1.length; i < l; i++) {\r\n            const vn1 = children1[i];\r\n            const vn2 = children2[i];\r\n            if (vn1) {\r\n                if (vn2) {\r\n                    vn1.patch(vn2, withBeforeRemove);\r\n                }\r\n                else {\r\n                    const afterNode = vn1.firstNode();\r\n                    const anchor = document.createTextNode(\"\");\r\n                    anchors[i] = anchor;\r\n                    nodeInsertBefore$3.call(parentEl, anchor, afterNode);\r\n                    if (withBeforeRemove) {\r\n                        vn1.beforeRemove();\r\n                    }\r\n                    vn1.remove();\r\n                    children1[i] = undefined;\r\n                }\r\n            }\r\n            else if (vn2) {\r\n                children1[i] = vn2;\r\n                const anchor = anchors[i];\r\n                vn2.mount(parentEl, anchor);\r\n                nodeRemoveChild$3.call(parentEl, anchor);\r\n            }\r\n        }\r\n    }\r\n    beforeRemove() {\r\n        const children = this.children;\r\n        for (let i = 0, l = children.length; i < l; i++) {\r\n            const child = children[i];\r\n            if (child) {\r\n                child.beforeRemove();\r\n            }\r\n        }\r\n    }\r\n    remove() {\r\n        const parentEl = this.parentEl;\r\n        if (this.isOnlyChild) {\r\n            nodeSetTextContent$1.call(parentEl, \"\");\r\n        }\r\n        else {\r\n            const children = this.children;\r\n            const anchors = this.anchors;\r\n            for (let i = 0, l = children.length; i < l; i++) {\r\n                const child = children[i];\r\n                if (child) {\r\n                    child.remove();\r\n                }\r\n                else {\r\n                    nodeRemoveChild$3.call(parentEl, anchors[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    firstNode() {\r\n        const child = this.children[0];\r\n        return child ? child.firstNode() : this.anchors[0];\r\n    }\r\n    toString() {\r\n        return this.children.map((c) => (c ? c.toString() : \"\")).join(\"\");\r\n    }\r\n}\r\nfunction multi(children) {\r\n    return new VMulti(children);\r\n}\n\nconst getDescriptor$2 = (o, p) => Object.getOwnPropertyDescriptor(o, p);\r\nconst nodeProto$3 = Node.prototype;\r\nconst characterDataProto$1 = CharacterData.prototype;\r\nconst nodeInsertBefore$2 = nodeProto$3.insertBefore;\r\nconst characterDataSetData$1 = getDescriptor$2(characterDataProto$1, \"data\").set;\r\nconst nodeRemoveChild$2 = nodeProto$3.removeChild;\r\nclass VSimpleNode {\r\n    constructor(text) {\r\n        this.text = text;\r\n    }\r\n    mountNode(node, parent, afterNode) {\r\n        this.parentEl = parent;\r\n        nodeInsertBefore$2.call(parent, node, afterNode);\r\n        this.el = node;\r\n    }\r\n    moveBeforeDOMNode(node, parent = this.parentEl) {\r\n        this.parentEl = parent;\r\n        nodeInsertBefore$2.call(parent, this.el, node);\r\n    }\r\n    moveBeforeVNode(other, afterNode) {\r\n        nodeInsertBefore$2.call(this.parentEl, this.el, other ? other.el : afterNode);\r\n    }\r\n    beforeRemove() { }\r\n    remove() {\r\n        nodeRemoveChild$2.call(this.parentEl, this.el);\r\n    }\r\n    firstNode() {\r\n        return this.el;\r\n    }\r\n    toString() {\r\n        return this.text;\r\n    }\r\n}\r\nclass VText$1 extends VSimpleNode {\r\n    mount(parent, afterNode) {\r\n        this.mountNode(document.createTextNode(toText(this.text)), parent, afterNode);\r\n    }\r\n    patch(other) {\r\n        const text2 = other.text;\r\n        if (this.text !== text2) {\r\n            characterDataSetData$1.call(this.el, toText(text2));\r\n            this.text = text2;\r\n        }\r\n    }\r\n}\r\nclass VComment extends VSimpleNode {\r\n    mount(parent, afterNode) {\r\n        this.mountNode(document.createComment(toText(this.text)), parent, afterNode);\r\n    }\r\n    patch() { }\r\n}\r\nfunction text(str) {\r\n    return new VText$1(str);\r\n}\r\nfunction comment(str) {\r\n    return new VComment(str);\r\n}\r\nfunction toText(value) {\r\n    switch (typeof value) {\r\n        case \"string\":\r\n            return value;\r\n        case \"number\":\r\n            return String(value);\r\n        case \"boolean\":\r\n            return value ? \"true\" : \"false\";\r\n        default:\r\n            return value || \"\";\r\n    }\r\n}\n\nconst getDescriptor$1 = (o, p) => Object.getOwnPropertyDescriptor(o, p);\r\nconst nodeProto$2 = Node.prototype;\r\nconst elementProto = Element.prototype;\r\nconst characterDataProto = CharacterData.prototype;\r\nconst characterDataSetData = getDescriptor$1(characterDataProto, \"data\").set;\r\nconst nodeGetFirstChild = getDescriptor$1(nodeProto$2, \"firstChild\").get;\r\nconst nodeGetNextSibling = getDescriptor$1(nodeProto$2, \"nextSibling\").get;\r\nconst NO_OP = () => { };\r\nfunction makePropSetter(name) {\r\n    return function setProp(value) {\r\n        // support 0, fallback to empty string for other falsy values\r\n        this[name] = value === 0 ? 0 : value ? value.valueOf() : \"\";\r\n    };\r\n}\r\nconst cache$1 = {};\r\n/**\r\n * Compiling blocks is a multi-step process:\r\n *\r\n * 1. build an IntermediateTree from the HTML element. This intermediate tree\r\n *    is a binary tree structure that encode dynamic info sub nodes, and the\r\n *    path required to reach them\r\n * 2. process the tree to build a block context, which is an object that aggregate\r\n *    all dynamic info in a list, and also, all ref indexes.\r\n * 3. process the context to build appropriate builder/setter functions\r\n * 4. make a dynamic block class, which will efficiently collect references and\r\n *    create/update dynamic locations/children\r\n *\r\n * @param str\r\n * @returns a new block type, that can build concrete blocks\r\n */\r\nfunction createBlock(str) {\r\n    if (str in cache$1) {\r\n        return cache$1[str];\r\n    }\r\n    // step 0: prepare html base element\r\n    const doc = new DOMParser().parseFromString(`<t>${str}</t>`, \"text/xml\");\r\n    const node = doc.firstChild.firstChild;\r\n    if (config.shouldNormalizeDom) {\r\n        normalizeNode(node);\r\n    }\r\n    // step 1: prepare intermediate tree\r\n    const tree = buildTree(node);\r\n    // step 2: prepare block context\r\n    const context = buildContext(tree);\r\n    // step 3: build the final block class\r\n    const template = tree.el;\r\n    const Block = buildBlock(template, context);\r\n    cache$1[str] = Block;\r\n    return Block;\r\n}\r\n// -----------------------------------------------------------------------------\r\n// Helper\r\n// -----------------------------------------------------------------------------\r\nfunction normalizeNode(node) {\r\n    if (node.nodeType === Node.TEXT_NODE) {\r\n        if (!/\\S/.test(node.textContent)) {\r\n            node.remove();\r\n            return;\r\n        }\r\n    }\r\n    if (node.nodeType === Node.ELEMENT_NODE) {\r\n        if (node.tagName === \"pre\") {\r\n            return;\r\n        }\r\n    }\r\n    for (let i = node.childNodes.length - 1; i >= 0; --i) {\r\n        normalizeNode(node.childNodes.item(i));\r\n    }\r\n}\r\nfunction buildTree(node, parent = null, domParentTree = null) {\r\n    switch (node.nodeType) {\r\n        case Node.ELEMENT_NODE: {\r\n            // HTMLElement\r\n            let currentNS = domParentTree && domParentTree.currentNS;\r\n            const tagName = node.tagName;\r\n            let el = undefined;\r\n            const info = [];\r\n            if (tagName.startsWith(\"block-text-\")) {\r\n                const index = parseInt(tagName.slice(11), 10);\r\n                info.push({ type: \"text\", idx: index });\r\n                el = document.createTextNode(\"\");\r\n            }\r\n            if (tagName.startsWith(\"block-child-\")) {\r\n                if (!domParentTree.isRef) {\r\n                    addRef(domParentTree);\r\n                }\r\n                const index = parseInt(tagName.slice(12), 10);\r\n                info.push({ type: \"child\", idx: index });\r\n                el = document.createTextNode(\"\");\r\n            }\r\n            currentNS || (currentNS = node.namespaceURI);\r\n            if (!el) {\r\n                el = currentNS\r\n                    ? document.createElementNS(currentNS, tagName)\r\n                    : document.createElement(tagName);\r\n            }\r\n            if (el instanceof Element) {\r\n                if (!domParentTree) {\r\n                    // some html elements may have side effects when setting their attributes.\r\n                    // For example, setting the src attribute of an <img/> will trigger a\r\n                    // request to get the corresponding image. This is something that we\r\n                    // don't want at compile time. We avoid that by putting the content of\r\n                    // the block in a <template/> element\r\n                    const fragment = document.createElement(\"template\").content;\r\n                    fragment.appendChild(el);\r\n                }\r\n                const attrs = node.attributes;\r\n                for (let i = 0; i < attrs.length; i++) {\r\n                    const attrName = attrs[i].name;\r\n                    const attrValue = attrs[i].value;\r\n                    if (attrName.startsWith(\"block-handler-\")) {\r\n                        const idx = parseInt(attrName.slice(14), 10);\r\n                        info.push({\r\n                            type: \"handler\",\r\n                            idx,\r\n                            event: attrValue,\r\n                        });\r\n                    }\r\n                    else if (attrName.startsWith(\"block-attribute-\")) {\r\n                        const idx = parseInt(attrName.slice(16), 10);\r\n                        info.push({\r\n                            type: \"attribute\",\r\n                            idx,\r\n                            name: attrValue,\r\n                            tag: tagName,\r\n                        });\r\n                    }\r\n                    else if (attrName.startsWith(\"block-property-\")) {\r\n                        const idx = parseInt(attrName.slice(15), 10);\r\n                        info.push({\r\n                            type: \"property\",\r\n                            idx,\r\n                            name: attrValue,\r\n                            tag: tagName,\r\n                        });\r\n                    }\r\n                    else if (attrName === \"block-attributes\") {\r\n                        info.push({\r\n                            type: \"attributes\",\r\n                            idx: parseInt(attrValue, 10),\r\n                        });\r\n                    }\r\n                    else if (attrName === \"block-ref\") {\r\n                        info.push({\r\n                            type: \"ref\",\r\n                            idx: parseInt(attrValue, 10),\r\n                        });\r\n                    }\r\n                    else {\r\n                        el.setAttribute(attrs[i].name, attrValue);\r\n                    }\r\n                }\r\n            }\r\n            const tree = {\r\n                parent,\r\n                firstChild: null,\r\n                nextSibling: null,\r\n                el,\r\n                info,\r\n                refN: 0,\r\n                currentNS,\r\n            };\r\n            if (node.firstChild) {\r\n                const childNode = node.childNodes[0];\r\n                if (node.childNodes.length === 1 &&\r\n                    childNode.nodeType === Node.ELEMENT_NODE &&\r\n                    childNode.tagName.startsWith(\"block-child-\")) {\r\n                    const tagName = childNode.tagName;\r\n                    const index = parseInt(tagName.slice(12), 10);\r\n                    info.push({ idx: index, type: \"child\", isOnlyChild: true });\r\n                }\r\n                else {\r\n                    tree.firstChild = buildTree(node.firstChild, tree, tree);\r\n                    el.appendChild(tree.firstChild.el);\r\n                    let curNode = node.firstChild;\r\n                    let curTree = tree.firstChild;\r\n                    while ((curNode = curNode.nextSibling)) {\r\n                        curTree.nextSibling = buildTree(curNode, curTree, tree);\r\n                        el.appendChild(curTree.nextSibling.el);\r\n                        curTree = curTree.nextSibling;\r\n                    }\r\n                }\r\n            }\r\n            if (tree.info.length) {\r\n                addRef(tree);\r\n            }\r\n            return tree;\r\n        }\r\n        case Node.TEXT_NODE:\r\n        case Node.COMMENT_NODE: {\r\n            // text node or comment node\r\n            const el = node.nodeType === Node.TEXT_NODE\r\n                ? document.createTextNode(node.textContent)\r\n                : document.createComment(node.textContent);\r\n            return {\r\n                parent: parent,\r\n                firstChild: null,\r\n                nextSibling: null,\r\n                el,\r\n                info: [],\r\n                refN: 0,\r\n                currentNS: null,\r\n            };\r\n        }\r\n    }\r\n    throw new OwlError(\"boom\");\r\n}\r\nfunction addRef(tree) {\r\n    tree.isRef = true;\r\n    do {\r\n        tree.refN++;\r\n    } while ((tree = tree.parent));\r\n}\r\nfunction parentTree(tree) {\r\n    let parent = tree.parent;\r\n    while (parent && parent.nextSibling === tree) {\r\n        tree = parent;\r\n        parent = parent.parent;\r\n    }\r\n    return parent;\r\n}\r\nfunction buildContext(tree, ctx, fromIdx) {\r\n    if (!ctx) {\r\n        const children = new Array(tree.info.filter((v) => v.type === \"child\").length);\r\n        ctx = { collectors: [], locations: [], children, cbRefs: [], refN: tree.refN, refList: [] };\r\n        fromIdx = 0;\r\n    }\r\n    if (tree.refN) {\r\n        const initialIdx = fromIdx;\r\n        const isRef = tree.isRef;\r\n        const firstChild = tree.firstChild ? tree.firstChild.refN : 0;\r\n        const nextSibling = tree.nextSibling ? tree.nextSibling.refN : 0;\r\n        //node\r\n        if (isRef) {\r\n            for (let info of tree.info) {\r\n                info.refIdx = initialIdx;\r\n            }\r\n            tree.refIdx = initialIdx;\r\n            updateCtx(ctx, tree);\r\n            fromIdx++;\r\n        }\r\n        // right\r\n        if (nextSibling) {\r\n            const idx = fromIdx + firstChild;\r\n            ctx.collectors.push({ idx, prevIdx: initialIdx, getVal: nodeGetNextSibling });\r\n            buildContext(tree.nextSibling, ctx, idx);\r\n        }\r\n        // left\r\n        if (firstChild) {\r\n            ctx.collectors.push({ idx: fromIdx, prevIdx: initialIdx, getVal: nodeGetFirstChild });\r\n            buildContext(tree.firstChild, ctx, fromIdx);\r\n        }\r\n    }\r\n    return ctx;\r\n}\r\nfunction updateCtx(ctx, tree) {\r\n    for (let info of tree.info) {\r\n        switch (info.type) {\r\n            case \"text\":\r\n                ctx.locations.push({\r\n                    idx: info.idx,\r\n                    refIdx: info.refIdx,\r\n                    setData: setText,\r\n                    updateData: setText,\r\n                });\r\n                break;\r\n            case \"child\":\r\n                if (info.isOnlyChild) {\r\n                    // tree is the parentnode here\r\n                    ctx.children[info.idx] = {\r\n                        parentRefIdx: info.refIdx,\r\n                        isOnlyChild: true,\r\n                    };\r\n                }\r\n                else {\r\n                    // tree is the anchor text node\r\n                    ctx.children[info.idx] = {\r\n                        parentRefIdx: parentTree(tree).refIdx,\r\n                        afterRefIdx: info.refIdx,\r\n                    };\r\n                }\r\n                break;\r\n            case \"property\": {\r\n                const refIdx = info.refIdx;\r\n                const setProp = makePropSetter(info.name);\r\n                ctx.locations.push({\r\n                    idx: info.idx,\r\n                    refIdx,\r\n                    setData: setProp,\r\n                    updateData: setProp,\r\n                });\r\n                break;\r\n            }\r\n            case \"attribute\": {\r\n                const refIdx = info.refIdx;\r\n                let updater;\r\n                let setter;\r\n                if (info.name === \"class\") {\r\n                    setter = setClass;\r\n                    updater = updateClass;\r\n                }\r\n                else {\r\n                    setter = createAttrUpdater(info.name);\r\n                    updater = setter;\r\n                }\r\n                ctx.locations.push({\r\n                    idx: info.idx,\r\n                    refIdx,\r\n                    setData: setter,\r\n                    updateData: updater,\r\n                });\r\n                break;\r\n            }\r\n            case \"attributes\":\r\n                ctx.locations.push({\r\n                    idx: info.idx,\r\n                    refIdx: info.refIdx,\r\n                    setData: attrsSetter,\r\n                    updateData: attrsUpdater,\r\n                });\r\n                break;\r\n            case \"handler\": {\r\n                const { setup, update } = createEventHandler(info.event);\r\n                ctx.locations.push({\r\n                    idx: info.idx,\r\n                    refIdx: info.refIdx,\r\n                    setData: setup,\r\n                    updateData: update,\r\n                });\r\n                break;\r\n            }\r\n            case \"ref\":\r\n                const index = ctx.cbRefs.push(info.idx) - 1;\r\n                ctx.locations.push({\r\n                    idx: info.idx,\r\n                    refIdx: info.refIdx,\r\n                    setData: makeRefSetter(index, ctx.refList),\r\n                    updateData: NO_OP,\r\n                });\r\n        }\r\n    }\r\n}\r\n// -----------------------------------------------------------------------------\r\n// building the concrete block class\r\n// -----------------------------------------------------------------------------\r\nfunction buildBlock(template, ctx) {\r\n    let B = createBlockClass(template, ctx);\r\n    if (ctx.cbRefs.length) {\r\n        const cbRefs = ctx.cbRefs;\r\n        const refList = ctx.refList;\r\n        let cbRefsNumber = cbRefs.length;\r\n        B = class extends B {\r\n            mount(parent, afterNode) {\r\n                refList.push(new Array(cbRefsNumber));\r\n                super.mount(parent, afterNode);\r\n                for (let cbRef of refList.pop()) {\r\n                    cbRef();\r\n                }\r\n            }\r\n            remove() {\r\n                super.remove();\r\n                for (let cbRef of cbRefs) {\r\n                    let fn = this.data[cbRef];\r\n                    fn(null);\r\n                }\r\n            }\r\n        };\r\n    }\r\n    if (ctx.children.length) {\r\n        B = class extends B {\r\n            constructor(data, children) {\r\n                super(data);\r\n                this.children = children;\r\n            }\r\n        };\r\n        B.prototype.beforeRemove = VMulti.prototype.beforeRemove;\r\n        return (data, children = []) => new B(data, children);\r\n    }\r\n    return (data) => new B(data);\r\n}\r\nfunction createBlockClass(template, ctx) {\r\n    const { refN, collectors, children } = ctx;\r\n    const colN = collectors.length;\r\n    ctx.locations.sort((a, b) => a.idx - b.idx);\r\n    const locations = ctx.locations.map((loc) => ({\r\n        refIdx: loc.refIdx,\r\n        setData: loc.setData,\r\n        updateData: loc.updateData,\r\n    }));\r\n    const locN = locations.length;\r\n    const childN = children.length;\r\n    const childrenLocs = children;\r\n    const isDynamic = refN > 0;\r\n    // these values are defined here to make them faster to lookup in the class\r\n    // block scope\r\n    const nodeCloneNode = nodeProto$2.cloneNode;\r\n    const nodeInsertBefore = nodeProto$2.insertBefore;\r\n    const elementRemove = elementProto.remove;\r\n    class Block {\r\n        constructor(data) {\r\n            this.data = data;\r\n        }\r\n        beforeRemove() { }\r\n        remove() {\r\n            elementRemove.call(this.el);\r\n        }\r\n        firstNode() {\r\n            return this.el;\r\n        }\r\n        moveBeforeDOMNode(node, parent = this.parentEl) {\r\n            this.parentEl = parent;\r\n            nodeInsertBefore.call(parent, this.el, node);\r\n        }\r\n        moveBeforeVNode(other, afterNode) {\r\n            nodeInsertBefore.call(this.parentEl, this.el, other ? other.el : afterNode);\r\n        }\r\n        toString() {\r\n            const div = document.createElement(\"div\");\r\n            this.mount(div, null);\r\n            return div.innerHTML;\r\n        }\r\n        mount(parent, afterNode) {\r\n            const el = nodeCloneNode.call(template, true);\r\n            nodeInsertBefore.call(parent, el, afterNode);\r\n            this.el = el;\r\n            this.parentEl = parent;\r\n        }\r\n        patch(other, withBeforeRemove) { }\r\n    }\r\n    if (isDynamic) {\r\n        Block.prototype.mount = function mount(parent, afterNode) {\r\n            const el = nodeCloneNode.call(template, true);\r\n            // collecting references\r\n            const refs = new Array(refN);\r\n            this.refs = refs;\r\n            refs[0] = el;\r\n            for (let i = 0; i < colN; i++) {\r\n                const w = collectors[i];\r\n                refs[w.idx] = w.getVal.call(refs[w.prevIdx]);\r\n            }\r\n            // applying data to all update points\r\n            if (locN) {\r\n                const data = this.data;\r\n                for (let i = 0; i < locN; i++) {\r\n                    const loc = locations[i];\r\n                    loc.setData.call(refs[loc.refIdx], data[i]);\r\n                }\r\n            }\r\n            nodeInsertBefore.call(parent, el, afterNode);\r\n            // preparing all children\r\n            if (childN) {\r\n                const children = this.children;\r\n                for (let i = 0; i < childN; i++) {\r\n                    const child = children[i];\r\n                    if (child) {\r\n                        const loc = childrenLocs[i];\r\n                        const afterNode = loc.afterRefIdx ? refs[loc.afterRefIdx] : null;\r\n                        child.isOnlyChild = loc.isOnlyChild;\r\n                        child.mount(refs[loc.parentRefIdx], afterNode);\r\n                    }\r\n                }\r\n            }\r\n            this.el = el;\r\n            this.parentEl = parent;\r\n        };\r\n        Block.prototype.patch = function patch(other, withBeforeRemove) {\r\n            if (this === other) {\r\n                return;\r\n            }\r\n            const refs = this.refs;\r\n            // update texts/attributes/\r\n            if (locN) {\r\n                const data1 = this.data;\r\n                const data2 = other.data;\r\n                for (let i = 0; i < locN; i++) {\r\n                    const val1 = data1[i];\r\n                    const val2 = data2[i];\r\n                    if (val1 !== val2) {\r\n                        const loc = locations[i];\r\n                        loc.updateData.call(refs[loc.refIdx], val2, val1);\r\n                    }\r\n                }\r\n                this.data = data2;\r\n            }\r\n            // update children\r\n            if (childN) {\r\n                let children1 = this.children;\r\n                const children2 = other.children;\r\n                for (let i = 0; i < childN; i++) {\r\n                    const child1 = children1[i];\r\n                    const child2 = children2[i];\r\n                    if (child1) {\r\n                        if (child2) {\r\n                            child1.patch(child2, withBeforeRemove);\r\n                        }\r\n                        else {\r\n                            if (withBeforeRemove) {\r\n                                child1.beforeRemove();\r\n                            }\r\n                            child1.remove();\r\n                            children1[i] = undefined;\r\n                        }\r\n                    }\r\n                    else if (child2) {\r\n                        const loc = childrenLocs[i];\r\n                        const afterNode = loc.afterRefIdx ? refs[loc.afterRefIdx] : null;\r\n                        child2.mount(refs[loc.parentRefIdx], afterNode);\r\n                        children1[i] = child2;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n    return Block;\r\n}\r\nfunction setText(value) {\r\n    characterDataSetData.call(this, toText(value));\r\n}\r\nfunction makeRefSetter(index, refs) {\r\n    return function setRef(fn) {\r\n        refs[refs.length - 1][index] = () => fn(this);\r\n    };\r\n}\n\nconst getDescriptor = (o, p) => Object.getOwnPropertyDescriptor(o, p);\r\nconst nodeProto$1 = Node.prototype;\r\nconst nodeInsertBefore$1 = nodeProto$1.insertBefore;\r\nconst nodeAppendChild = nodeProto$1.appendChild;\r\nconst nodeRemoveChild$1 = nodeProto$1.removeChild;\r\nconst nodeSetTextContent = getDescriptor(nodeProto$1, \"textContent\").set;\r\n// -----------------------------------------------------------------------------\r\n// List Node\r\n// -----------------------------------------------------------------------------\r\nclass VList {\r\n    constructor(children) {\r\n        this.children = children;\r\n    }\r\n    mount(parent, afterNode) {\r\n        const children = this.children;\r\n        const _anchor = document.createTextNode(\"\");\r\n        this.anchor = _anchor;\r\n        nodeInsertBefore$1.call(parent, _anchor, afterNode);\r\n        const l = children.length;\r\n        if (l) {\r\n            const mount = children[0].mount;\r\n            for (let i = 0; i < l; i++) {\r\n                mount.call(children[i], parent, _anchor);\r\n            }\r\n        }\r\n        this.parentEl = parent;\r\n    }\r\n    moveBeforeDOMNode(node, parent = this.parentEl) {\r\n        this.parentEl = parent;\r\n        const children = this.children;\r\n        for (let i = 0, l = children.length; i < l; i++) {\r\n            children[i].moveBeforeDOMNode(node, parent);\r\n        }\r\n        parent.insertBefore(this.anchor, node);\r\n    }\r\n    moveBeforeVNode(other, afterNode) {\r\n        if (other) {\r\n            const next = other.children[0];\r\n            afterNode = (next ? next.firstNode() : other.anchor) || null;\r\n        }\r\n        const children = this.children;\r\n        for (let i = 0, l = children.length; i < l; i++) {\r\n            children[i].moveBeforeVNode(null, afterNode);\r\n        }\r\n        this.parentEl.insertBefore(this.anchor, afterNode);\r\n    }\r\n    patch(other, withBeforeRemove) {\r\n        if (this === other) {\r\n            return;\r\n        }\r\n        const ch1 = this.children;\r\n        const ch2 = other.children;\r\n        if (ch2.length === 0 && ch1.length === 0) {\r\n            return;\r\n        }\r\n        this.children = ch2;\r\n        const proto = ch2[0] || ch1[0];\r\n        const { mount: cMount, patch: cPatch, remove: cRemove, beforeRemove, moveBeforeVNode: cMoveBefore, firstNode: cFirstNode, } = proto;\r\n        const _anchor = this.anchor;\r\n        const isOnlyChild = this.isOnlyChild;\r\n        const parent = this.parentEl;\r\n        // fast path: no new child => only remove\r\n        if (ch2.length === 0 && isOnlyChild) {\r\n            if (withBeforeRemove) {\r\n                for (let i = 0, l = ch1.length; i < l; i++) {\r\n                    beforeRemove.call(ch1[i]);\r\n                }\r\n            }\r\n            nodeSetTextContent.call(parent, \"\");\r\n            nodeAppendChild.call(parent, _anchor);\r\n            return;\r\n        }\r\n        let startIdx1 = 0;\r\n        let startIdx2 = 0;\r\n        let startVn1 = ch1[0];\r\n        let startVn2 = ch2[0];\r\n        let endIdx1 = ch1.length - 1;\r\n        let endIdx2 = ch2.length - 1;\r\n        let endVn1 = ch1[endIdx1];\r\n        let endVn2 = ch2[endIdx2];\r\n        let mapping = undefined;\r\n        while (startIdx1 <= endIdx1 && startIdx2 <= endIdx2) {\r\n            // -------------------------------------------------------------------\r\n            if (startVn1 === null) {\r\n                startVn1 = ch1[++startIdx1];\r\n                continue;\r\n            }\r\n            // -------------------------------------------------------------------\r\n            if (endVn1 === null) {\r\n                endVn1 = ch1[--endIdx1];\r\n                continue;\r\n            }\r\n            // -------------------------------------------------------------------\r\n            let startKey1 = startVn1.key;\r\n            let startKey2 = startVn2.key;\r\n            if (startKey1 === startKey2) {\r\n                cPatch.call(startVn1, startVn2, withBeforeRemove);\r\n                ch2[startIdx2] = startVn1;\r\n                startVn1 = ch1[++startIdx1];\r\n                startVn2 = ch2[++startIdx2];\r\n                continue;\r\n            }\r\n            // -------------------------------------------------------------------\r\n            let endKey1 = endVn1.key;\r\n            let endKey2 = endVn2.key;\r\n            if (endKey1 === endKey2) {\r\n                cPatch.call(endVn1, endVn2, withBeforeRemove);\r\n                ch2[endIdx2] = endVn1;\r\n                endVn1 = ch1[--endIdx1];\r\n                endVn2 = ch2[--endIdx2];\r\n                continue;\r\n            }\r\n            // -------------------------------------------------------------------\r\n            if (startKey1 === endKey2) {\r\n                // bnode moved right\r\n                cPatch.call(startVn1, endVn2, withBeforeRemove);\r\n                ch2[endIdx2] = startVn1;\r\n                const nextChild = ch2[endIdx2 + 1];\r\n                cMoveBefore.call(startVn1, nextChild, _anchor);\r\n                startVn1 = ch1[++startIdx1];\r\n                endVn2 = ch2[--endIdx2];\r\n                continue;\r\n            }\r\n            // -------------------------------------------------------------------\r\n            if (endKey1 === startKey2) {\r\n                // bnode moved left\r\n                cPatch.call(endVn1, startVn2, withBeforeRemove);\r\n                ch2[startIdx2] = endVn1;\r\n                const nextChild = ch1[startIdx1];\r\n                cMoveBefore.call(endVn1, nextChild, _anchor);\r\n                endVn1 = ch1[--endIdx1];\r\n                startVn2 = ch2[++startIdx2];\r\n                continue;\r\n            }\r\n            // -------------------------------------------------------------------\r\n            mapping = mapping || createMapping(ch1, startIdx1, endIdx1);\r\n            let idxInOld = mapping[startKey2];\r\n            if (idxInOld === undefined) {\r\n                cMount.call(startVn2, parent, cFirstNode.call(startVn1) || null);\r\n            }\r\n            else {\r\n                const elmToMove = ch1[idxInOld];\r\n                cMoveBefore.call(elmToMove, startVn1, null);\r\n                cPatch.call(elmToMove, startVn2, withBeforeRemove);\r\n                ch2[startIdx2] = elmToMove;\r\n                ch1[idxInOld] = null;\r\n            }\r\n            startVn2 = ch2[++startIdx2];\r\n        }\r\n        // ---------------------------------------------------------------------\r\n        if (startIdx1 <= endIdx1 || startIdx2 <= endIdx2) {\r\n            if (startIdx1 > endIdx1) {\r\n                const nextChild = ch2[endIdx2 + 1];\r\n                const anchor = nextChild ? cFirstNode.call(nextChild) || null : _anchor;\r\n                for (let i = startIdx2; i <= endIdx2; i++) {\r\n                    cMount.call(ch2[i], parent, anchor);\r\n                }\r\n            }\r\n            else {\r\n                for (let i = startIdx1; i <= endIdx1; i++) {\r\n                    let ch = ch1[i];\r\n                    if (ch) {\r\n                        if (withBeforeRemove) {\r\n                            beforeRemove.call(ch);\r\n                        }\r\n                        cRemove.call(ch);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    beforeRemove() {\r\n        const children = this.children;\r\n        const l = children.length;\r\n        if (l) {\r\n            const beforeRemove = children[0].beforeRemove;\r\n            for (let i = 0; i < l; i++) {\r\n                beforeRemove.call(children[i]);\r\n            }\r\n        }\r\n    }\r\n    remove() {\r\n        const { parentEl, anchor } = this;\r\n        if (this.isOnlyChild) {\r\n            nodeSetTextContent.call(parentEl, \"\");\r\n        }\r\n        else {\r\n            const children = this.children;\r\n            const l = children.length;\r\n            if (l) {\r\n                const remove = children[0].remove;\r\n                for (let i = 0; i < l; i++) {\r\n                    remove.call(children[i]);\r\n                }\r\n            }\r\n            nodeRemoveChild$1.call(parentEl, anchor);\r\n        }\r\n    }\r\n    firstNode() {\r\n        const child = this.children[0];\r\n        return child ? child.firstNode() : undefined;\r\n    }\r\n    toString() {\r\n        return this.children.map((c) => c.toString()).join(\"\");\r\n    }\r\n}\r\nfunction list(children) {\r\n    return new VList(children);\r\n}\r\nfunction createMapping(ch1, startIdx1, endIdx2) {\r\n    let mapping = {};\r\n    for (let i = startIdx1; i <= endIdx2; i++) {\r\n        mapping[ch1[i].key] = i;\r\n    }\r\n    return mapping;\r\n}\n\nconst nodeProto = Node.prototype;\r\nconst nodeInsertBefore = nodeProto.insertBefore;\r\nconst nodeRemoveChild = nodeProto.removeChild;\r\nclass VHtml {\r\n    constructor(html) {\r\n        this.content = [];\r\n        this.html = html;\r\n    }\r\n    mount(parent, afterNode) {\r\n        this.parentEl = parent;\r\n        const template = document.createElement(\"template\");\r\n        template.innerHTML = this.html;\r\n        this.content = [...template.content.childNodes];\r\n        for (let elem of this.content) {\r\n            nodeInsertBefore.call(parent, elem, afterNode);\r\n        }\r\n        if (!this.content.length) {\r\n            const textNode = document.createTextNode(\"\");\r\n            this.content.push(textNode);\r\n            nodeInsertBefore.call(parent, textNode, afterNode);\r\n        }\r\n    }\r\n    moveBeforeDOMNode(node, parent = this.parentEl) {\r\n        this.parentEl = parent;\r\n        for (let elem of this.content) {\r\n            nodeInsertBefore.call(parent, elem, node);\r\n        }\r\n    }\r\n    moveBeforeVNode(other, afterNode) {\r\n        const target = other ? other.content[0] : afterNode;\r\n        this.moveBeforeDOMNode(target);\r\n    }\r\n    patch(other) {\r\n        if (this === other) {\r\n            return;\r\n        }\r\n        const html2 = other.html;\r\n        if (this.html !== html2) {\r\n            const parent = this.parentEl;\r\n            // insert new html in front of current\r\n            const afterNode = this.content[0];\r\n            const template = document.createElement(\"template\");\r\n            template.innerHTML = html2;\r\n            const content = [...template.content.childNodes];\r\n            for (let elem of content) {\r\n                nodeInsertBefore.call(parent, elem, afterNode);\r\n            }\r\n            if (!content.length) {\r\n                const textNode = document.createTextNode(\"\");\r\n                content.push(textNode);\r\n                nodeInsertBefore.call(parent, textNode, afterNode);\r\n            }\r\n            // remove current content\r\n            this.remove();\r\n            this.content = content;\r\n            this.html = other.html;\r\n        }\r\n    }\r\n    beforeRemove() { }\r\n    remove() {\r\n        const parent = this.parentEl;\r\n        for (let elem of this.content) {\r\n            nodeRemoveChild.call(parent, elem);\r\n        }\r\n    }\r\n    firstNode() {\r\n        return this.content[0];\r\n    }\r\n    toString() {\r\n        return this.html;\r\n    }\r\n}\r\nfunction html(str) {\r\n    return new VHtml(str);\r\n}\n\nfunction createCatcher(eventsSpec) {\r\n    const n = Object.keys(eventsSpec).length;\r\n    class VCatcher {\r\n        constructor(child, handlers) {\r\n            this.handlerFns = [];\r\n            this.afterNode = null;\r\n            this.child = child;\r\n            this.handlerData = handlers;\r\n        }\r\n        mount(parent, afterNode) {\r\n            this.parentEl = parent;\r\n            this.child.mount(parent, afterNode);\r\n            this.afterNode = document.createTextNode(\"\");\r\n            parent.insertBefore(this.afterNode, afterNode);\r\n            this.wrapHandlerData();\r\n            for (let name in eventsSpec) {\r\n                const index = eventsSpec[name];\r\n                const handler = createEventHandler(name);\r\n                this.handlerFns[index] = handler;\r\n                handler.setup.call(parent, this.handlerData[index]);\r\n            }\r\n        }\r\n        wrapHandlerData() {\r\n            for (let i = 0; i < n; i++) {\r\n                let handler = this.handlerData[i];\r\n                // handler = [...mods, fn, comp], so we need to replace second to last elem\r\n                let idx = handler.length - 2;\r\n                let origFn = handler[idx];\r\n                const self = this;\r\n                handler[idx] = function (ev) {\r\n                    const target = ev.target;\r\n                    let currentNode = self.child.firstNode();\r\n                    const afterNode = self.afterNode;\r\n                    while (currentNode && currentNode !== afterNode) {\r\n                        if (currentNode.contains(target)) {\r\n                            return origFn.call(this, ev);\r\n                        }\r\n                        currentNode = currentNode.nextSibling;\r\n                    }\r\n                };\r\n            }\r\n        }\r\n        moveBeforeDOMNode(node, parent = this.parentEl) {\r\n            this.parentEl = parent;\r\n            this.child.moveBeforeDOMNode(node, parent);\r\n            parent.insertBefore(this.afterNode, node);\r\n        }\r\n        moveBeforeVNode(other, afterNode) {\r\n            if (other) {\r\n                // check this with @ged-odoo for use in foreach\r\n                afterNode = other.firstNode() || afterNode;\r\n            }\r\n            this.child.moveBeforeVNode(other ? other.child : null, afterNode);\r\n            this.parentEl.insertBefore(this.afterNode, afterNode);\r\n        }\r\n        patch(other, withBeforeRemove) {\r\n            if (this === other) {\r\n                return;\r\n            }\r\n            this.handlerData = other.handlerData;\r\n            this.wrapHandlerData();\r\n            for (let i = 0; i < n; i++) {\r\n                this.handlerFns[i].update.call(this.parentEl, this.handlerData[i]);\r\n            }\r\n            this.child.patch(other.child, withBeforeRemove);\r\n        }\r\n        beforeRemove() {\r\n            this.child.beforeRemove();\r\n        }\r\n        remove() {\r\n            for (let i = 0; i < n; i++) {\r\n                this.handlerFns[i].remove.call(this.parentEl);\r\n            }\r\n            this.child.remove();\r\n            this.afterNode.remove();\r\n        }\r\n        firstNode() {\r\n            return this.child.firstNode();\r\n        }\r\n        toString() {\r\n            return this.child.toString();\r\n        }\r\n    }\r\n    return function (child, handlers) {\r\n        return new VCatcher(child, handlers);\r\n    };\r\n}\n\nfunction mount$1(vnode, fixture, afterNode = null) {\r\n    vnode.mount(fixture, afterNode);\r\n}\r\nfunction patch(vnode1, vnode2, withBeforeRemove = false) {\r\n    vnode1.patch(vnode2, withBeforeRemove);\r\n}\r\nfunction remove(vnode, withBeforeRemove = false) {\r\n    if (withBeforeRemove) {\r\n        vnode.beforeRemove();\r\n    }\r\n    vnode.remove();\r\n}\n\n// Maps fibers to thrown errors\r\nconst fibersInError = new WeakMap();\r\nconst nodeErrorHandlers = new WeakMap();\r\nfunction _handleError(node, error) {\r\n    if (!node) {\r\n        return false;\r\n    }\r\n    const fiber = node.fiber;\r\n    if (fiber) {\r\n        fibersInError.set(fiber, error);\r\n    }\r\n    const errorHandlers = nodeErrorHandlers.get(node);\r\n    if (errorHandlers) {\r\n        let handled = false;\r\n        // execute in the opposite order\r\n        for (let i = errorHandlers.length - 1; i >= 0; i--) {\r\n            try {\r\n                errorHandlers[i](error);\r\n                handled = true;\r\n                break;\r\n            }\r\n            catch (e) {\r\n                error = e;\r\n            }\r\n        }\r\n        if (handled) {\r\n            return true;\r\n        }\r\n    }\r\n    return _handleError(node.parent, error);\r\n}\r\nfunction handleError(params) {\r\n    let { error } = params;\r\n    // Wrap error if it wasn't wrapped by wrapError (ie when not in dev mode)\r\n    if (!(error instanceof OwlError)) {\r\n        error = Object.assign(new OwlError(`An error occured in the owl lifecycle (see this Error's \"cause\" property)`), { cause: error });\r\n    }\r\n    const node = \"node\" in params ? params.node : params.fiber.node;\r\n    const fiber = \"fiber\" in params ? params.fiber : node.fiber;\r\n    if (fiber) {\r\n        // resets the fibers on components if possible. This is important so that\r\n        // new renderings can be properly included in the initial one, if any.\r\n        let current = fiber;\r\n        do {\r\n            current.node.fiber = current;\r\n            current = current.parent;\r\n        } while (current);\r\n        fibersInError.set(fiber.root, error);\r\n    }\r\n    const handled = _handleError(node, error);\r\n    if (!handled) {\r\n        console.warn(`[Owl] Unhandled error. Destroying the root component`);\r\n        try {\r\n            node.app.destroy();\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n        throw error;\r\n    }\r\n}\n\nfunction makeChildFiber(node, parent) {\r\n    let current = node.fiber;\r\n    if (current) {\r\n        cancelFibers(current.children);\r\n        current.root = null;\r\n    }\r\n    return new Fiber(node, parent);\r\n}\r\nfunction makeRootFiber(node) {\r\n    let current = node.fiber;\r\n    if (current) {\r\n        let root = current.root;\r\n        // lock root fiber because canceling children fibers may destroy components,\r\n        // which means any arbitrary code can be run in onWillDestroy, which may\r\n        // trigger new renderings\r\n        root.locked = true;\r\n        root.setCounter(root.counter + 1 - cancelFibers(current.children));\r\n        root.locked = false;\r\n        current.children = [];\r\n        current.childrenMap = {};\r\n        current.bdom = null;\r\n        if (fibersInError.has(current)) {\r\n            fibersInError.delete(current);\r\n            fibersInError.delete(root);\r\n            current.appliedToDom = false;\r\n        }\r\n        return current;\r\n    }\r\n    const fiber = new RootFiber(node, null);\r\n    if (node.willPatch.length) {\r\n        fiber.willPatch.push(fiber);\r\n    }\r\n    if (node.patched.length) {\r\n        fiber.patched.push(fiber);\r\n    }\r\n    return fiber;\r\n}\r\nfunction throwOnRender() {\r\n    throw new OwlError(\"Attempted to render cancelled fiber\");\r\n}\r\n/**\r\n * @returns number of not-yet rendered fibers cancelled\r\n */\r\nfunction cancelFibers(fibers) {\r\n    let result = 0;\r\n    for (let fiber of fibers) {\r\n        let node = fiber.node;\r\n        fiber.render = throwOnRender;\r\n        if (node.status === 0 /* NEW */) {\r\n            node.cancel();\r\n        }\r\n        node.fiber = null;\r\n        if (fiber.bdom) {\r\n            // if fiber has been rendered, this means that the component props have\r\n            // been updated. however, this fiber will not be patched to the dom, so\r\n            // it could happen that the next render compare the current props with\r\n            // the same props, and skip the render completely. With the next line,\r\n            // we kindly request the component code to force a render, so it works as\r\n            // expected.\r\n            node.forceNextRender = true;\r\n        }\r\n        else {\r\n            result++;\r\n        }\r\n        result += cancelFibers(fiber.children);\r\n    }\r\n    return result;\r\n}\r\nclass Fiber {\r\n    constructor(node, parent) {\r\n        this.bdom = null;\r\n        this.children = [];\r\n        this.appliedToDom = false;\r\n        this.deep = false;\r\n        this.childrenMap = {};\r\n        this.node = node;\r\n        this.parent = parent;\r\n        if (parent) {\r\n            this.deep = parent.deep;\r\n            const root = parent.root;\r\n            root.setCounter(root.counter + 1);\r\n            this.root = root;\r\n            parent.children.push(this);\r\n        }\r\n        else {\r\n            this.root = this;\r\n        }\r\n    }\r\n    render() {\r\n        // if some parent has a fiber => register in followup\r\n        let prev = this.root.node;\r\n        let scheduler = prev.app.scheduler;\r\n        let current = prev.parent;\r\n        while (current) {\r\n            if (current.fiber) {\r\n                let root = current.fiber.root;\r\n                if (root.counter === 0 && prev.parentKey in current.fiber.childrenMap) {\r\n                    current = root.node;\r\n                }\r\n                else {\r\n                    scheduler.delayedRenders.push(this);\r\n                    return;\r\n                }\r\n            }\r\n            prev = current;\r\n            current = current.parent;\r\n        }\r\n        // there are no current rendering from above => we can render\r\n        this._render();\r\n    }\r\n    _render() {\r\n        const node = this.node;\r\n        const root = this.root;\r\n        if (root) {\r\n            try {\r\n                this.bdom = true;\r\n                this.bdom = node.renderFn();\r\n            }\r\n            catch (e) {\r\n                node.app.handleError({ node, error: e });\r\n            }\r\n            root.setCounter(root.counter - 1);\r\n        }\r\n    }\r\n}\r\nclass RootFiber extends Fiber {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.counter = 1;\r\n        // only add stuff in this if they have registered some hooks\r\n        this.willPatch = [];\r\n        this.patched = [];\r\n        this.mounted = [];\r\n        // A fiber is typically locked when it is completing and the patch has not, or is being applied.\r\n        // i.e.: render triggered in onWillUnmount or in willPatch will be delayed\r\n        this.locked = false;\r\n    }\r\n    complete() {\r\n        const node = this.node;\r\n        this.locked = true;\r\n        let current = undefined;\r\n        try {\r\n            // Step 1: calling all willPatch lifecycle hooks\r\n            for (current of this.willPatch) {\r\n                // because of the asynchronous nature of the rendering, some parts of the\r\n                // UI may have been rendered, then deleted in a followup rendering, and we\r\n                // do not want to call onWillPatch in that case.\r\n                let node = current.node;\r\n                if (node.fiber === current) {\r\n                    const component = node.component;\r\n                    for (let cb of node.willPatch) {\r\n                        cb.call(component);\r\n                    }\r\n                }\r\n            }\r\n            current = undefined;\r\n            // Step 2: patching the dom\r\n            node._patch();\r\n            this.locked = false;\r\n            // Step 4: calling all mounted lifecycle hooks\r\n            let mountedFibers = this.mounted;\r\n            while ((current = mountedFibers.pop())) {\r\n                current = current;\r\n                if (current.appliedToDom) {\r\n                    for (let cb of current.node.mounted) {\r\n                        cb();\r\n                    }\r\n                }\r\n            }\r\n            // Step 5: calling all patched hooks\r\n            let patchedFibers = this.patched;\r\n            while ((current = patchedFibers.pop())) {\r\n                current = current;\r\n                if (current.appliedToDom) {\r\n                    for (let cb of current.node.patched) {\r\n                        cb();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.locked = false;\r\n            node.app.handleError({ fiber: current || this, error: e });\r\n        }\r\n    }\r\n    setCounter(newValue) {\r\n        this.counter = newValue;\r\n        if (newValue === 0) {\r\n            this.node.app.scheduler.flush();\r\n        }\r\n    }\r\n}\r\nclass MountFiber extends RootFiber {\r\n    constructor(node, target, options = {}) {\r\n        super(node, null);\r\n        this.target = target;\r\n        this.position = options.position || \"last-child\";\r\n    }\r\n    complete() {\r\n        let current = this;\r\n        try {\r\n            const node = this.node;\r\n            node.children = this.childrenMap;\r\n            node.app.constructor.validateTarget(this.target);\r\n            if (node.bdom) {\r\n                // this is a complicated situation: if we mount a fiber with an existing\r\n                // bdom, this means that this same fiber was already completed, mounted,\r\n                // but a crash occurred in some mounted hook. Then, it was handled and\r\n                // the new rendering is being applied.\r\n                node.updateDom();\r\n            }\r\n            else {\r\n                node.bdom = this.bdom;\r\n                if (this.position === \"last-child\" || this.target.childNodes.length === 0) {\r\n                    mount$1(node.bdom, this.target);\r\n                }\r\n                else {\r\n                    const firstChild = this.target.childNodes[0];\r\n                    mount$1(node.bdom, this.target, firstChild);\r\n                }\r\n            }\r\n            // unregistering the fiber before mounted since it can do another render\r\n            // and that the current rendering is obviously completed\r\n            node.fiber = null;\r\n            node.status = 1 /* MOUNTED */;\r\n            this.appliedToDom = true;\r\n            let mountedFibers = this.mounted;\r\n            while ((current = mountedFibers.pop())) {\r\n                if (current.appliedToDom) {\r\n                    for (let cb of current.node.mounted) {\r\n                        cb();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.node.app.handleError({ fiber: current, error: e });\r\n        }\r\n    }\r\n}\n\n// Special key to subscribe to, to be notified of key creation/deletion\r\nconst KEYCHANGES = Symbol(\"Key changes\");\r\n// Used to specify the absence of a callback, can be used as WeakMap key but\r\n// should only be used as a sentinel value and never called.\r\nconst NO_CALLBACK = () => {\r\n    throw new Error(\"Called NO_CALLBACK. Owl is broken, please report this to the maintainers.\");\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst objectHasOwnProperty = Object.prototype.hasOwnProperty;\r\n// Use arrays because Array.includes is faster than Set.has for small arrays\r\nconst SUPPORTED_RAW_TYPES = [\"Object\", \"Array\", \"Set\", \"Map\", \"WeakMap\"];\r\nconst COLLECTION_RAW_TYPES = [\"Set\", \"Map\", \"WeakMap\"];\r\n/**\r\n * extract \"RawType\" from strings like \"[object RawType]\" => this lets us ignore\r\n * many native objects such as Promise (whose toString is [object Promise])\r\n * or Date ([object Date]), while also supporting collections without using\r\n * instanceof in a loop\r\n *\r\n * @param obj the object to check\r\n * @returns the raw type of the object\r\n */\r\nfunction rawType(obj) {\r\n    return objectToString.call(toRaw(obj)).slice(8, -1);\r\n}\r\n/**\r\n * Checks whether a given value can be made into a reactive object.\r\n *\r\n * @param value the value to check\r\n * @returns whether the value can be made reactive\r\n */\r\nfunction canBeMadeReactive(value) {\r\n    if (typeof value !== \"object\") {\r\n        return false;\r\n    }\r\n    return SUPPORTED_RAW_TYPES.includes(rawType(value));\r\n}\r\n/**\r\n * Creates a reactive from the given object/callback if possible and returns it,\r\n * returns the original object otherwise.\r\n *\r\n * @param value the value make reactive\r\n * @returns a reactive for the given object when possible, the original otherwise\r\n */\r\nfunction possiblyReactive(val, cb) {\r\n    return canBeMadeReactive(val) ? reactive(val, cb) : val;\r\n}\r\nconst skipped = new WeakSet();\r\n/**\r\n * Mark an object or array so that it is ignored by the reactivity system\r\n *\r\n * @param value the value to mark\r\n * @returns the object itself\r\n */\r\nfunction markRaw(value) {\r\n    skipped.add(value);\r\n    return value;\r\n}\r\n/**\r\n * Given a reactive objet, return the raw (non reactive) underlying object\r\n *\r\n * @param value a reactive value\r\n * @returns the underlying value\r\n */\r\nfunction toRaw(value) {\r\n    return targets.has(value) ? targets.get(value) : value;\r\n}\r\nconst targetToKeysToCallbacks = new WeakMap();\r\n/**\r\n * Observes a given key on a target with an callback. The callback will be\r\n * called when the given key changes on the target.\r\n *\r\n * @param target the target whose key should be observed\r\n * @param key the key to observe (or Symbol(KEYCHANGES) for key creation\r\n *  or deletion)\r\n * @param callback the function to call when the key changes\r\n */\r\nfunction observeTargetKey(target, key, callback) {\r\n    if (callback === NO_CALLBACK) {\r\n        return;\r\n    }\r\n    if (!targetToKeysToCallbacks.get(target)) {\r\n        targetToKeysToCallbacks.set(target, new Map());\r\n    }\r\n    const keyToCallbacks = targetToKeysToCallbacks.get(target);\r\n    if (!keyToCallbacks.get(key)) {\r\n        keyToCallbacks.set(key, new Set());\r\n    }\r\n    keyToCallbacks.get(key).add(callback);\r\n    if (!callbacksToTargets.has(callback)) {\r\n        callbacksToTargets.set(callback, new Set());\r\n    }\r\n    callbacksToTargets.get(callback).add(target);\r\n}\r\n/**\r\n * Notify Reactives that are observing a given target that a key has changed on\r\n * the target.\r\n *\r\n * @param target target whose Reactives should be notified that the target was\r\n *  changed.\r\n * @param key the key that changed (or Symbol `KEYCHANGES` if a key was created\r\n *   or deleted)\r\n */\r\nfunction notifyReactives(target, key) {\r\n    const keyToCallbacks = targetToKeysToCallbacks.get(target);\r\n    if (!keyToCallbacks) {\r\n        return;\r\n    }\r\n    const callbacks = keyToCallbacks.get(key);\r\n    if (!callbacks) {\r\n        return;\r\n    }\r\n    // Loop on copy because clearReactivesForCallback will modify the set in place\r\n    for (const callback of [...callbacks]) {\r\n        clearReactivesForCallback(callback);\r\n        callback();\r\n    }\r\n}\r\nconst callbacksToTargets = new WeakMap();\r\n/**\r\n * Clears all subscriptions of the Reactives associated with a given callback.\r\n *\r\n * @param callback the callback for which the reactives need to be cleared\r\n */\r\nfunction clearReactivesForCallback(callback) {\r\n    const targetsToClear = callbacksToTargets.get(callback);\r\n    if (!targetsToClear) {\r\n        return;\r\n    }\r\n    for (const target of targetsToClear) {\r\n        const observedKeys = targetToKeysToCallbacks.get(target);\r\n        if (!observedKeys) {\r\n            continue;\r\n        }\r\n        for (const [key, callbacks] of observedKeys.entries()) {\r\n            callbacks.delete(callback);\r\n            if (!callbacks.size) {\r\n                observedKeys.delete(key);\r\n            }\r\n        }\r\n    }\r\n    targetsToClear.clear();\r\n}\r\nfunction getSubscriptions(callback) {\r\n    const targets = callbacksToTargets.get(callback) || [];\r\n    return [...targets].map((target) => {\r\n        const keysToCallbacks = targetToKeysToCallbacks.get(target);\r\n        let keys = [];\r\n        if (keysToCallbacks) {\r\n            for (const [key, cbs] of keysToCallbacks) {\r\n                if (cbs.has(callback)) {\r\n                    keys.push(key);\r\n                }\r\n            }\r\n        }\r\n        return { target, keys };\r\n    });\r\n}\r\n// Maps reactive objects to the underlying target\r\nconst targets = new WeakMap();\r\nconst reactiveCache = new WeakMap();\r\n/**\r\n * Creates a reactive proxy for an object. Reading data on the reactive object\r\n * subscribes to changes to the data. Writing data on the object will cause the\r\n * notify callback to be called if there are suscriptions to that data. Nested\r\n * objects and arrays are automatically made reactive as well.\r\n *\r\n * Whenever you are notified of a change, all subscriptions are cleared, and if\r\n * you would like to be notified of any further changes, you should go read\r\n * the underlying data again. We assume that if you don't go read it again after\r\n * being notified, it means that you are no longer interested in that data.\r\n *\r\n * Subscriptions:\r\n * + Reading a property on an object will subscribe you to changes in the value\r\n *    of that property.\r\n * + Accessing an object's keys (eg with Object.keys or with `for..in`) will\r\n *    subscribe you to the creation/deletion of keys. Checking the presence of a\r\n *    key on the object with 'in' has the same effect.\r\n * - getOwnPropertyDescriptor does not currently subscribe you to the property.\r\n *    This is a choice that was made because changing a key's value will trigger\r\n *    this trap and we do not want to subscribe by writes. This also means that\r\n *    Object.hasOwnProperty doesn't subscribe as it goes through this trap.\r\n *\r\n * @param target the object for which to create a reactive proxy\r\n * @param callback the function to call when an observed property of the\r\n *  reactive has changed\r\n * @returns a proxy that tracks changes to it\r\n */\r\nfunction reactive(target, callback = NO_CALLBACK) {\r\n    if (!canBeMadeReactive(target)) {\r\n        throw new OwlError(`Cannot make the given value reactive`);\r\n    }\r\n    if (skipped.has(target)) {\r\n        return target;\r\n    }\r\n    if (targets.has(target)) {\r\n        // target is reactive, create a reactive on the underlying object instead\r\n        return reactive(targets.get(target), callback);\r\n    }\r\n    if (!reactiveCache.has(target)) {\r\n        reactiveCache.set(target, new WeakMap());\r\n    }\r\n    const reactivesForTarget = reactiveCache.get(target);\r\n    if (!reactivesForTarget.has(callback)) {\r\n        const targetRawType = rawType(target);\r\n        const handler = COLLECTION_RAW_TYPES.includes(targetRawType)\r\n            ? collectionsProxyHandler(target, callback, targetRawType)\r\n            : basicProxyHandler(callback);\r\n        const proxy = new Proxy(target, handler);\r\n        reactivesForTarget.set(callback, proxy);\r\n        targets.set(proxy, target);\r\n    }\r\n    return reactivesForTarget.get(callback);\r\n}\r\n/**\r\n * Creates a basic proxy handler for regular objects and arrays.\r\n *\r\n * @param callback @see reactive\r\n * @returns a proxy handler object\r\n */\r\nfunction basicProxyHandler(callback) {\r\n    return {\r\n        get(target, key, receiver) {\r\n            // non-writable non-configurable properties cannot be made reactive\r\n            const desc = Object.getOwnPropertyDescriptor(target, key);\r\n            if (desc && !desc.writable && !desc.configurable) {\r\n                return Reflect.get(target, key, receiver);\r\n            }\r\n            observeTargetKey(target, key, callback);\r\n            return possiblyReactive(Reflect.get(target, key, receiver), callback);\r\n        },\r\n        set(target, key, value, receiver) {\r\n            const hadKey = objectHasOwnProperty.call(target, key);\r\n            const originalValue = Reflect.get(target, key, receiver);\r\n            const ret = Reflect.set(target, key, toRaw(value), receiver);\r\n            if (!hadKey && objectHasOwnProperty.call(target, key)) {\r\n                notifyReactives(target, KEYCHANGES);\r\n            }\r\n            // While Array length may trigger the set trap, it's not actually set by this\r\n            // method but is updated behind the scenes, and the trap is not called with the\r\n            // new value. We disable the \"same-value-optimization\" for it because of that.\r\n            if (originalValue !== Reflect.get(target, key, receiver) ||\r\n                (key === \"length\" && Array.isArray(target))) {\r\n                notifyReactives(target, key);\r\n            }\r\n            return ret;\r\n        },\r\n        deleteProperty(target, key) {\r\n            const ret = Reflect.deleteProperty(target, key);\r\n            // TODO: only notify when something was actually deleted\r\n            notifyReactives(target, KEYCHANGES);\r\n            notifyReactives(target, key);\r\n            return ret;\r\n        },\r\n        ownKeys(target) {\r\n            observeTargetKey(target, KEYCHANGES, callback);\r\n            return Reflect.ownKeys(target);\r\n        },\r\n        has(target, key) {\r\n            // TODO: this observes all key changes instead of only the presence of the argument key\r\n            // observing the key itself would observe value changes instead of presence changes\r\n            // so we may need a finer grained system to distinguish observing value vs presence.\r\n            observeTargetKey(target, KEYCHANGES, callback);\r\n            return Reflect.has(target, key);\r\n        },\r\n    };\r\n}\r\n/**\r\n * Creates a function that will observe the key that is passed to it when called\r\n * and delegates to the underlying method.\r\n *\r\n * @param methodName name of the method to delegate to\r\n * @param target @see reactive\r\n * @param callback @see reactive\r\n */\r\nfunction makeKeyObserver(methodName, target, callback) {\r\n    return (key) => {\r\n        key = toRaw(key);\r\n        observeTargetKey(target, key, callback);\r\n        return possiblyReactive(target[methodName](key), callback);\r\n    };\r\n}\r\n/**\r\n * Creates an iterable that will delegate to the underlying iteration method and\r\n * observe keys as necessary.\r\n *\r\n * @param methodName name of the method to delegate to\r\n * @param target @see reactive\r\n * @param callback @see reactive\r\n */\r\nfunction makeIteratorObserver(methodName, target, callback) {\r\n    return function* () {\r\n        observeTargetKey(target, KEYCHANGES, callback);\r\n        const keys = target.keys();\r\n        for (const item of target[methodName]()) {\r\n            const key = keys.next().value;\r\n            observeTargetKey(target, key, callback);\r\n            yield possiblyReactive(item, callback);\r\n        }\r\n    };\r\n}\r\n/**\r\n * Creates a forEach function that will delegate to forEach on the underlying\r\n * collection while observing key changes, and keys as they're iterated over,\r\n * and making the passed keys/values reactive.\r\n *\r\n * @param target @see reactive\r\n * @param callback @see reactive\r\n */\r\nfunction makeForEachObserver(target, callback) {\r\n    return function forEach(forEachCb, thisArg) {\r\n        observeTargetKey(target, KEYCHANGES, callback);\r\n        target.forEach(function (val, key, targetObj) {\r\n            observeTargetKey(target, key, callback);\r\n            forEachCb.call(thisArg, possiblyReactive(val, callback), possiblyReactive(key, callback), possiblyReactive(targetObj, callback));\r\n        }, thisArg);\r\n    };\r\n}\r\n/**\r\n * Creates a function that will delegate to an underlying method, and check if\r\n * that method has modified the presence or value of a key, and notify the\r\n * reactives appropriately.\r\n *\r\n * @param setterName name of the method to delegate to\r\n * @param getterName name of the method which should be used to retrieve the\r\n *  value before calling the delegate method for comparison purposes\r\n * @param target @see reactive\r\n */\r\nfunction delegateAndNotify(setterName, getterName, target) {\r\n    return (key, value) => {\r\n        key = toRaw(key);\r\n        const hadKey = target.has(key);\r\n        const originalValue = target[getterName](key);\r\n        const ret = target[setterName](key, value);\r\n        const hasKey = target.has(key);\r\n        if (hadKey !== hasKey) {\r\n            notifyReactives(target, KEYCHANGES);\r\n        }\r\n        if (originalValue !== target[getterName](key)) {\r\n            notifyReactives(target, key);\r\n        }\r\n        return ret;\r\n    };\r\n}\r\n/**\r\n * Creates a function that will clear the underlying collection and notify that\r\n * the keys of the collection have changed.\r\n *\r\n * @param target @see reactive\r\n */\r\nfunction makeClearNotifier(target) {\r\n    return () => {\r\n        const allKeys = [...target.keys()];\r\n        target.clear();\r\n        notifyReactives(target, KEYCHANGES);\r\n        for (const key of allKeys) {\r\n            notifyReactives(target, key);\r\n        }\r\n    };\r\n}\r\n/**\r\n * Maps raw type of an object to an object containing functions that can be used\r\n * to build an appropritate proxy handler for that raw type. Eg: when making a\r\n * reactive set, calling the has method should mark the key that is being\r\n * retrieved as observed, and calling the add or delete method should notify the\r\n * reactives that the key which is being added or deleted has been modified.\r\n */\r\nconst rawTypeToFuncHandlers = {\r\n    Set: (target, callback) => ({\r\n        has: makeKeyObserver(\"has\", target, callback),\r\n        add: delegateAndNotify(\"add\", \"has\", target),\r\n        delete: delegateAndNotify(\"delete\", \"has\", target),\r\n        keys: makeIteratorObserver(\"keys\", target, callback),\r\n        values: makeIteratorObserver(\"values\", target, callback),\r\n        entries: makeIteratorObserver(\"entries\", target, callback),\r\n        [Symbol.iterator]: makeIteratorObserver(Symbol.iterator, target, callback),\r\n        forEach: makeForEachObserver(target, callback),\r\n        clear: makeClearNotifier(target),\r\n        get size() {\r\n            observeTargetKey(target, KEYCHANGES, callback);\r\n            return target.size;\r\n        },\r\n    }),\r\n    Map: (target, callback) => ({\r\n        has: makeKeyObserver(\"has\", target, callback),\r\n        get: makeKeyObserver(\"get\", target, callback),\r\n        set: delegateAndNotify(\"set\", \"get\", target),\r\n        delete: delegateAndNotify(\"delete\", \"has\", target),\r\n        keys: makeIteratorObserver(\"keys\", target, callback),\r\n        values: makeIteratorObserver(\"values\", target, callback),\r\n        entries: makeIteratorObserver(\"entries\", target, callback),\r\n        [Symbol.iterator]: makeIteratorObserver(Symbol.iterator, target, callback),\r\n        forEach: makeForEachObserver(target, callback),\r\n        clear: makeClearNotifier(target),\r\n        get size() {\r\n            observeTargetKey(target, KEYCHANGES, callback);\r\n            return target.size;\r\n        },\r\n    }),\r\n    WeakMap: (target, callback) => ({\r\n        has: makeKeyObserver(\"has\", target, callback),\r\n        get: makeKeyObserver(\"get\", target, callback),\r\n        set: delegateAndNotify(\"set\", \"get\", target),\r\n        delete: delegateAndNotify(\"delete\", \"has\", target),\r\n    }),\r\n};\r\n/**\r\n * Creates a proxy handler for collections (Set/Map/WeakMap)\r\n *\r\n * @param callback @see reactive\r\n * @param target @see reactive\r\n * @returns a proxy handler object\r\n */\r\nfunction collectionsProxyHandler(target, callback, targetRawType) {\r\n    // TODO: if performance is an issue we can create the special handlers lazily when each\r\n    // property is read.\r\n    const specialHandlers = rawTypeToFuncHandlers[targetRawType](target, callback);\r\n    return Object.assign(basicProxyHandler(callback), {\r\n        // FIXME: probably broken when part of prototype chain since we ignore the receiver\r\n        get(target, key) {\r\n            if (objectHasOwnProperty.call(specialHandlers, key)) {\r\n                return specialHandlers[key];\r\n            }\r\n            observeTargetKey(target, key, callback);\r\n            return possiblyReactive(target[key], callback);\r\n        },\r\n    });\r\n}\n\nlet currentNode = null;\r\nfunction getCurrent() {\r\n    if (!currentNode) {\r\n        throw new OwlError(\"No active component (a hook function should only be called in 'setup')\");\r\n    }\r\n    return currentNode;\r\n}\r\nfunction useComponent() {\r\n    return currentNode.component;\r\n}\r\n/**\r\n * Apply default props (only top level).\r\n */\r\nfunction applyDefaultProps(props, defaultProps) {\r\n    for (let propName in defaultProps) {\r\n        if (props[propName] === undefined) {\r\n            props[propName] = defaultProps[propName];\r\n        }\r\n    }\r\n}\r\n// -----------------------------------------------------------------------------\r\n// Integration with reactivity system (useState)\r\n// -----------------------------------------------------------------------------\r\nconst batchedRenderFunctions = new WeakMap();\r\n/**\r\n * Creates a reactive object that will be observed by the current component.\r\n * Reading data from the returned object (eg during rendering) will cause the\r\n * component to subscribe to that data and be rerendered when it changes.\r\n *\r\n * @param state the state to observe\r\n * @returns a reactive object that will cause the component to re-render on\r\n *  relevant changes\r\n * @see reactive\r\n */\r\nfunction useState(state) {\r\n    const node = getCurrent();\r\n    let render = batchedRenderFunctions.get(node);\r\n    if (!render) {\r\n        render = batched(node.render.bind(node, false));\r\n        batchedRenderFunctions.set(node, render);\r\n        // manual implementation of onWillDestroy to break cyclic dependency\r\n        node.willDestroy.push(clearReactivesForCallback.bind(null, render));\r\n    }\r\n    return reactive(state, render);\r\n}\r\nclass ComponentNode {\r\n    constructor(C, props, app, parent, parentKey) {\r\n        this.fiber = null;\r\n        this.bdom = null;\r\n        this.status = 0 /* NEW */;\r\n        this.forceNextRender = false;\r\n        this.nextProps = null;\r\n        this.children = Object.create(null);\r\n        this.refs = {};\r\n        this.willStart = [];\r\n        this.willUpdateProps = [];\r\n        this.willUnmount = [];\r\n        this.mounted = [];\r\n        this.willPatch = [];\r\n        this.patched = [];\r\n        this.willDestroy = [];\r\n        currentNode = this;\r\n        this.app = app;\r\n        this.parent = parent;\r\n        this.props = props;\r\n        this.parentKey = parentKey;\r\n        const defaultProps = C.defaultProps;\r\n        props = Object.assign({}, props);\r\n        if (defaultProps) {\r\n            applyDefaultProps(props, defaultProps);\r\n        }\r\n        const env = (parent && parent.childEnv) || app.env;\r\n        this.childEnv = env;\r\n        for (const key in props) {\r\n            const prop = props[key];\r\n            if (prop && typeof prop === \"object\" && targets.has(prop)) {\r\n                props[key] = useState(prop);\r\n            }\r\n        }\r\n        this.component = new C(props, env, this);\r\n        const ctx = Object.assign(Object.create(this.component), { this: this.component });\r\n        this.renderFn = app.getTemplate(C.template).bind(this.component, ctx, this);\r\n        this.component.setup();\r\n        currentNode = null;\r\n    }\r\n    mountComponent(target, options) {\r\n        const fiber = new MountFiber(this, target, options);\r\n        this.app.scheduler.addFiber(fiber);\r\n        this.initiateRender(fiber);\r\n    }\r\n    async initiateRender(fiber) {\r\n        this.fiber = fiber;\r\n        if (this.mounted.length) {\r\n            fiber.root.mounted.push(fiber);\r\n        }\r\n        const component = this.component;\r\n        try {\r\n            await Promise.all(this.willStart.map((f) => f.call(component)));\r\n        }\r\n        catch (e) {\r\n            this.app.handleError({ node: this, error: e });\r\n            return;\r\n        }\r\n        if (this.status === 0 /* NEW */ && this.fiber === fiber) {\r\n            fiber.render();\r\n        }\r\n    }\r\n    async render(deep) {\r\n        if (this.status >= 2 /* CANCELLED */) {\r\n            return;\r\n        }\r\n        let current = this.fiber;\r\n        if (current && (current.root.locked || current.bdom === true)) {\r\n            await Promise.resolve();\r\n            // situation may have changed after the microtask tick\r\n            current = this.fiber;\r\n        }\r\n        if (current) {\r\n            if (!current.bdom && !fibersInError.has(current)) {\r\n                if (deep) {\r\n                    // we want the render from this point on to be with deep=true\r\n                    current.deep = deep;\r\n                }\r\n                return;\r\n            }\r\n            // if current rendering was with deep=true, we want this one to be the same\r\n            deep = deep || current.deep;\r\n        }\r\n        else if (!this.bdom) {\r\n            return;\r\n        }\r\n        const fiber = makeRootFiber(this);\r\n        fiber.deep = deep;\r\n        this.fiber = fiber;\r\n        this.app.scheduler.addFiber(fiber);\r\n        await Promise.resolve();\r\n        if (this.status >= 2 /* CANCELLED */) {\r\n            return;\r\n        }\r\n        // We only want to actually render the component if the following two\r\n        // conditions are true:\r\n        // * this.fiber: it could be null, in which case the render has been cancelled\r\n        // * (current || !fiber.parent): if current is not null, this means that the\r\n        //   render function was called when a render was already occurring. In this\r\n        //   case, the pending rendering was cancelled, and the fiber needs to be\r\n        //   rendered to complete the work.  If current is null, we check that the\r\n        //   fiber has no parent.  If that is the case, the fiber was downgraded from\r\n        //   a root fiber to a child fiber in the previous microtick, because it was\r\n        //   embedded in a rendering coming from above, so the fiber will be rendered\r\n        //   in the next microtick anyway, so we should not render it again.\r\n        if (this.fiber === fiber && (current || !fiber.parent)) {\r\n            fiber.render();\r\n        }\r\n    }\r\n    cancel() {\r\n        this._cancel();\r\n        delete this.parent.children[this.parentKey];\r\n        this.app.scheduler.scheduleDestroy(this);\r\n    }\r\n    _cancel() {\r\n        this.status = 2 /* CANCELLED */;\r\n        const children = this.children;\r\n        for (let childKey in children) {\r\n            children[childKey]._cancel();\r\n        }\r\n    }\r\n    destroy() {\r\n        let shouldRemove = this.status === 1 /* MOUNTED */;\r\n        this._destroy();\r\n        if (shouldRemove) {\r\n            this.bdom.remove();\r\n        }\r\n    }\r\n    _destroy() {\r\n        const component = this.component;\r\n        if (this.status === 1 /* MOUNTED */) {\r\n            for (let cb of this.willUnmount) {\r\n                cb.call(component);\r\n            }\r\n        }\r\n        for (let child of Object.values(this.children)) {\r\n            child._destroy();\r\n        }\r\n        if (this.willDestroy.length) {\r\n            try {\r\n                for (let cb of this.willDestroy) {\r\n                    cb.call(component);\r\n                }\r\n            }\r\n            catch (e) {\r\n                this.app.handleError({ error: e, node: this });\r\n            }\r\n        }\r\n        this.status = 3 /* DESTROYED */;\r\n    }\r\n    async updateAndRender(props, parentFiber) {\r\n        this.nextProps = props;\r\n        props = Object.assign({}, props);\r\n        // update\r\n        const fiber = makeChildFiber(this, parentFiber);\r\n        this.fiber = fiber;\r\n        const component = this.component;\r\n        const defaultProps = component.constructor.defaultProps;\r\n        if (defaultProps) {\r\n            applyDefaultProps(props, defaultProps);\r\n        }\r\n        currentNode = this;\r\n        for (const key in props) {\r\n            const prop = props[key];\r\n            if (prop && typeof prop === \"object\" && targets.has(prop)) {\r\n                props[key] = useState(prop);\r\n            }\r\n        }\r\n        currentNode = null;\r\n        const prom = Promise.all(this.willUpdateProps.map((f) => f.call(component, props)));\r\n        await prom;\r\n        if (fiber !== this.fiber) {\r\n            return;\r\n        }\r\n        component.props = props;\r\n        fiber.render();\r\n        const parentRoot = parentFiber.root;\r\n        if (this.willPatch.length) {\r\n            parentRoot.willPatch.push(fiber);\r\n        }\r\n        if (this.patched.length) {\r\n            parentRoot.patched.push(fiber);\r\n        }\r\n    }\r\n    /**\r\n     * Finds a child that has dom that is not yet updated, and update it. This\r\n     * method is meant to be used only in the context of repatching the dom after\r\n     * a mounted hook failed and was handled.\r\n     */\r\n    updateDom() {\r\n        if (!this.fiber) {\r\n            return;\r\n        }\r\n        if (this.bdom === this.fiber.bdom) {\r\n            // If the error was handled by some child component, we need to find it to\r\n            // apply its change\r\n            for (let k in this.children) {\r\n                const child = this.children[k];\r\n                child.updateDom();\r\n            }\r\n        }\r\n        else {\r\n            // if we get here, this is the component that handled the error and rerendered\r\n            // itself, so we can simply patch the dom\r\n            this.bdom.patch(this.fiber.bdom, false);\r\n            this.fiber.appliedToDom = true;\r\n            this.fiber = null;\r\n        }\r\n    }\r\n    /**\r\n     * Sets a ref to a given HTMLElement.\r\n     *\r\n     * @param name the name of the ref to set\r\n     * @param el the HTMLElement to set the ref to. The ref is not set if the el\r\n     *  is null, but useRef will not return elements that are not in the DOM\r\n     */\r\n    setRef(name, el) {\r\n        if (el) {\r\n            this.refs[name] = el;\r\n        }\r\n    }\r\n    // ---------------------------------------------------------------------------\r\n    // Block DOM methods\r\n    // ---------------------------------------------------------------------------\r\n    firstNode() {\r\n        const bdom = this.bdom;\r\n        return bdom ? bdom.firstNode() : undefined;\r\n    }\r\n    mount(parent, anchor) {\r\n        const bdom = this.fiber.bdom;\r\n        this.bdom = bdom;\r\n        bdom.mount(parent, anchor);\r\n        this.status = 1 /* MOUNTED */;\r\n        this.fiber.appliedToDom = true;\r\n        this.children = this.fiber.childrenMap;\r\n        this.fiber = null;\r\n    }\r\n    moveBeforeDOMNode(node, parent) {\r\n        this.bdom.moveBeforeDOMNode(node, parent);\r\n    }\r\n    moveBeforeVNode(other, afterNode) {\r\n        this.bdom.moveBeforeVNode(other ? other.bdom : null, afterNode);\r\n    }\r\n    patch() {\r\n        if (this.fiber && this.fiber.parent) {\r\n            // we only patch here renderings coming from above. renderings initiated\r\n            // by the component will be patched independently in the appropriate\r\n            // fiber.complete\r\n            this._patch();\r\n            this.props = this.nextProps;\r\n        }\r\n    }\r\n    _patch() {\r\n        let hasChildren = false;\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        for (let _k in this.children) {\r\n            hasChildren = true;\r\n            break;\r\n        }\r\n        const fiber = this.fiber;\r\n        this.children = fiber.childrenMap;\r\n        this.bdom.patch(fiber.bdom, hasChildren);\r\n        fiber.appliedToDom = true;\r\n        this.fiber = null;\r\n    }\r\n    beforeRemove() {\r\n        this._destroy();\r\n    }\r\n    remove() {\r\n        this.bdom.remove();\r\n    }\r\n    // ---------------------------------------------------------------------------\r\n    // Some debug helpers\r\n    // ---------------------------------------------------------------------------\r\n    get name() {\r\n        return this.component.constructor.name;\r\n    }\r\n    get subscriptions() {\r\n        const render = batchedRenderFunctions.get(this);\r\n        return render ? getSubscriptions(render) : [];\r\n    }\r\n}\n\nconst TIMEOUT = Symbol(\"timeout\");\r\nfunction wrapError(fn, hookName) {\r\n    const error = new OwlError(`The following error occurred in ${hookName}: `);\r\n    const timeoutError = new OwlError(`${hookName}'s promise hasn't resolved after 3 seconds`);\r\n    const node = getCurrent();\r\n    return (...args) => {\r\n        const onError = (cause) => {\r\n            error.cause = cause;\r\n            if (cause instanceof Error) {\r\n                error.message += `\"${cause.message}\"`;\r\n            }\r\n            else {\r\n                error.message = `Something that is not an Error was thrown in ${hookName} (see this Error's \"cause\" property)`;\r\n            }\r\n            throw error;\r\n        };\r\n        try {\r\n            const result = fn(...args);\r\n            if (result instanceof Promise) {\r\n                if (hookName === \"onWillStart\" || hookName === \"onWillUpdateProps\") {\r\n                    const fiber = node.fiber;\r\n                    Promise.race([\r\n                        result.catch(() => { }),\r\n                        new Promise((resolve) => setTimeout(() => resolve(TIMEOUT), 3000)),\r\n                    ]).then((res) => {\r\n                        if (res === TIMEOUT && node.fiber === fiber && node.status <= 2) {\r\n                            console.warn(timeoutError);\r\n                        }\r\n                    });\r\n                }\r\n                return result.catch(onError);\r\n            }\r\n            return result;\r\n        }\r\n        catch (cause) {\r\n            onError(cause);\r\n        }\r\n    };\r\n}\r\n// -----------------------------------------------------------------------------\r\n//  hooks\r\n// -----------------------------------------------------------------------------\r\nfunction onWillStart(fn) {\r\n    const node = getCurrent();\r\n    const decorate = node.app.dev ? wrapError : (fn) => fn;\r\n    node.willStart.push(decorate(fn.bind(node.component), \"onWillStart\"));\r\n}\r\nfunction onWillUpdateProps(fn) {\r\n    const node = getCurrent();\r\n    const decorate = node.app.dev ? wrapError : (fn) => fn;\r\n    node.willUpdateProps.push(decorate(fn.bind(node.component), \"onWillUpdateProps\"));\r\n}\r\nfunction onMounted(fn) {\r\n    const node = getCurrent();\r\n    const decorate = node.app.dev ? wrapError : (fn) => fn;\r\n    node.mounted.push(decorate(fn.bind(node.component), \"onMounted\"));\r\n}\r\nfunction onWillPatch(fn) {\r\n    const node = getCurrent();\r\n    const decorate = node.app.dev ? wrapError : (fn) => fn;\r\n    node.willPatch.unshift(decorate(fn.bind(node.component), \"onWillPatch\"));\r\n}\r\nfunction onPatched(fn) {\r\n    const node = getCurrent();\r\n    const decorate = node.app.dev ? wrapError : (fn) => fn;\r\n    node.patched.push(decorate(fn.bind(node.component), \"onPatched\"));\r\n}\r\nfunction onWillUnmount(fn) {\r\n    const node = getCurrent();\r\n    const decorate = node.app.dev ? wrapError : (fn) => fn;\r\n    node.willUnmount.unshift(decorate(fn.bind(node.component), \"onWillUnmount\"));\r\n}\r\nfunction onWillDestroy(fn) {\r\n    const node = getCurrent();\r\n    const decorate = node.app.dev ? wrapError : (fn) => fn;\r\n    node.willDestroy.push(decorate(fn.bind(node.component), \"onWillDestroy\"));\r\n}\r\nfunction onWillRender(fn) {\r\n    const node = getCurrent();\r\n    const renderFn = node.renderFn;\r\n    const decorate = node.app.dev ? wrapError : (fn) => fn;\r\n    fn = decorate(fn.bind(node.component), \"onWillRender\");\r\n    node.renderFn = () => {\r\n        fn();\r\n        return renderFn();\r\n    };\r\n}\r\nfunction onRendered(fn) {\r\n    const node = getCurrent();\r\n    const renderFn = node.renderFn;\r\n    const decorate = node.app.dev ? wrapError : (fn) => fn;\r\n    fn = decorate(fn.bind(node.component), \"onRendered\");\r\n    node.renderFn = () => {\r\n        const result = renderFn();\r\n        fn();\r\n        return result;\r\n    };\r\n}\r\nfunction onError(callback) {\r\n    const node = getCurrent();\r\n    let handlers = nodeErrorHandlers.get(node);\r\n    if (!handlers) {\r\n        handlers = [];\r\n        nodeErrorHandlers.set(node, handlers);\r\n    }\r\n    handlers.push(callback.bind(node.component));\r\n}\n\nclass Component {\r\n    constructor(props, env, node) {\r\n        this.props = props;\r\n        this.env = env;\r\n        this.__owl__ = node;\r\n    }\r\n    setup() { }\r\n    render(deep = false) {\r\n        this.__owl__.render(deep === true);\r\n    }\r\n}\r\nComponent.template = \"\";\n\nconst VText = text(\"\").constructor;\r\nclass VPortal extends VText {\r\n    constructor(selector, content) {\r\n        super(\"\");\r\n        this.target = null;\r\n        this.selector = selector;\r\n        this.content = content;\r\n    }\r\n    mount(parent, anchor) {\r\n        super.mount(parent, anchor);\r\n        this.target = document.querySelector(this.selector);\r\n        if (this.target) {\r\n            this.content.mount(this.target, null);\r\n        }\r\n        else {\r\n            this.content.mount(parent, anchor);\r\n        }\r\n    }\r\n    beforeRemove() {\r\n        this.content.beforeRemove();\r\n    }\r\n    remove() {\r\n        if (this.content) {\r\n            super.remove();\r\n            this.content.remove();\r\n            this.content = null;\r\n        }\r\n    }\r\n    patch(other) {\r\n        super.patch(other);\r\n        if (this.content) {\r\n            this.content.patch(other.content, true);\r\n        }\r\n        else {\r\n            this.content = other.content;\r\n            this.content.mount(this.target, null);\r\n        }\r\n    }\r\n}\r\n/**\r\n * kind of similar to <t t-slot=\"default\"/>, but it wraps it around a VPortal\r\n */\r\nfunction portalTemplate(app, bdom, helpers) {\r\n    let { callSlot } = helpers;\r\n    return function template(ctx, node, key = \"\") {\r\n        return new VPortal(ctx.props.target, callSlot(ctx, node, key, \"default\", false, null));\r\n    };\r\n}\r\nclass Portal extends Component {\r\n    setup() {\r\n        const node = this.__owl__;\r\n        onMounted(() => {\r\n            const portal = node.bdom;\r\n            if (!portal.target) {\r\n                const target = document.querySelector(this.props.target);\r\n                if (target) {\r\n                    portal.content.moveBeforeDOMNode(target.firstChild, target);\r\n                }\r\n                else {\r\n                    throw new OwlError(\"invalid portal target\");\r\n                }\r\n            }\r\n        });\r\n        onWillUnmount(() => {\r\n            const portal = node.bdom;\r\n            portal.remove();\r\n        });\r\n    }\r\n}\r\nPortal.template = \"__portal__\";\r\nPortal.props = {\r\n    target: {\r\n        type: String,\r\n    },\r\n    slots: true,\r\n};\n\n// -----------------------------------------------------------------------------\r\n// helpers\r\n// -----------------------------------------------------------------------------\r\nconst isUnionType = (t) => Array.isArray(t);\r\nconst isBaseType = (t) => typeof t !== \"object\";\r\nconst isValueType = (t) => typeof t === \"object\" && t && \"value\" in t;\r\nfunction isOptional(t) {\r\n    return typeof t === \"object\" && \"optional\" in t ? t.optional || false : false;\r\n}\r\nfunction describeType(type) {\r\n    return type === \"*\" || type === true ? \"value\" : type.name.toLowerCase();\r\n}\r\nfunction describe(info) {\r\n    if (isBaseType(info)) {\r\n        return describeType(info);\r\n    }\r\n    else if (isUnionType(info)) {\r\n        return info.map(describe).join(\" or \");\r\n    }\r\n    else if (isValueType(info)) {\r\n        return String(info.value);\r\n    }\r\n    if (\"element\" in info) {\r\n        return `list of ${describe({ type: info.element, optional: false })}s`;\r\n    }\r\n    if (\"shape\" in info) {\r\n        return `object`;\r\n    }\r\n    return describe(info.type || \"*\");\r\n}\r\nfunction toSchema(spec) {\r\n    return Object.fromEntries(spec.map((e) => e.endsWith(\"?\") ? [e.slice(0, -1), { optional: true }] : [e, { type: \"*\", optional: false }]));\r\n}\r\n/**\r\n * Main validate function\r\n */\r\nfunction validate(obj, spec) {\r\n    let errors = validateSchema(obj, spec);\r\n    if (errors.length) {\r\n        throw new OwlError(\"Invalid object: \" + errors.join(\", \"));\r\n    }\r\n}\r\n/**\r\n * Helper validate function, to get the list of errors. useful if one want to\r\n * manipulate the errors without parsing an error object\r\n */\r\nfunction validateSchema(obj, schema) {\r\n    if (Array.isArray(schema)) {\r\n        schema = toSchema(schema);\r\n    }\r\n    obj = toRaw(obj);\r\n    let errors = [];\r\n    // check if each value in obj has correct shape\r\n    for (let key in obj) {\r\n        if (key in schema) {\r\n            let result = validateType(key, obj[key], schema[key]);\r\n            if (result) {\r\n                errors.push(result);\r\n            }\r\n        }\r\n        else if (!(\"*\" in schema)) {\r\n            errors.push(`unknown key '${key}'`);\r\n        }\r\n    }\r\n    // check that all specified keys are defined in obj\r\n    for (let key in schema) {\r\n        const spec = schema[key];\r\n        if (key !== \"*\" && !isOptional(spec) && !(key in obj)) {\r\n            const isObj = typeof spec === \"object\" && !Array.isArray(spec);\r\n            const isAny = spec === \"*\" || (isObj && \"type\" in spec ? spec.type === \"*\" : isObj);\r\n            let detail = isAny ? \"\" : ` (should be a ${describe(spec)})`;\r\n            errors.push(`'${key}' is missing${detail}`);\r\n        }\r\n    }\r\n    return errors;\r\n}\r\nfunction validateBaseType(key, value, type) {\r\n    if (typeof type === \"function\") {\r\n        if (typeof value === \"object\") {\r\n            if (!(value instanceof type)) {\r\n                return `'${key}' is not a ${describeType(type)}`;\r\n            }\r\n        }\r\n        else if (typeof value !== type.name.toLowerCase()) {\r\n            return `'${key}' is not a ${describeType(type)}`;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction validateArrayType(key, value, descr) {\r\n    if (!Array.isArray(value)) {\r\n        return `'${key}' is not a list of ${describe(descr)}s`;\r\n    }\r\n    for (let i = 0; i < value.length; i++) {\r\n        const error = validateType(`${key}[${i}]`, value[i], descr);\r\n        if (error) {\r\n            return error;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction validateType(key, value, descr) {\r\n    if (value === undefined) {\r\n        return isOptional(descr) ? null : `'${key}' is undefined (should be a ${describe(descr)})`;\r\n    }\r\n    else if (isBaseType(descr)) {\r\n        return validateBaseType(key, value, descr);\r\n    }\r\n    else if (isValueType(descr)) {\r\n        return value === descr.value ? null : `'${key}' is not equal to '${descr.value}'`;\r\n    }\r\n    else if (isUnionType(descr)) {\r\n        let validDescr = descr.find((p) => !validateType(key, value, p));\r\n        return validDescr ? null : `'${key}' is not a ${describe(descr)}`;\r\n    }\r\n    let result = null;\r\n    if (\"element\" in descr) {\r\n        result = validateArrayType(key, value, descr.element);\r\n    }\r\n    else if (\"shape\" in descr) {\r\n        if (typeof value !== \"object\" || Array.isArray(value)) {\r\n            result = `'${key}' is not an object`;\r\n        }\r\n        else {\r\n            const errors = validateSchema(value, descr.shape);\r\n            if (errors.length) {\r\n                result = `'${key}' doesn't have the correct shape (${errors.join(\", \")})`;\r\n            }\r\n        }\r\n    }\r\n    else if (\"values\" in descr) {\r\n        if (typeof value !== \"object\" || Array.isArray(value)) {\r\n            result = `'${key}' is not an object`;\r\n        }\r\n        else {\r\n            const errors = Object.entries(value)\r\n                .map(([key, value]) => validateType(key, value, descr.values))\r\n                .filter(Boolean);\r\n            if (errors.length) {\r\n                result = `some of the values in '${key}' are invalid (${errors.join(\", \")})`;\r\n            }\r\n        }\r\n    }\r\n    if (\"type\" in descr && !result) {\r\n        result = validateType(key, value, descr.type);\r\n    }\r\n    if (\"validate\" in descr && !result) {\r\n        result = !descr.validate(value) ? `'${key}' is not valid` : null;\r\n    }\r\n    return result;\r\n}\n\nconst ObjectCreate = Object.create;\r\n/**\r\n * This file contains utility functions that will be injected in each template,\r\n * to perform various useful tasks in the compiled code.\r\n */\r\nfunction withDefault(value, defaultValue) {\r\n    return value === undefined || value === null || value === false ? defaultValue : value;\r\n}\r\nfunction callSlot(ctx, parent, key, name, dynamic, extra, defaultContent) {\r\n    key = key + \"__slot_\" + name;\r\n    const slots = ctx.props.slots || {};\r\n    const { __render, __ctx, __scope } = slots[name] || {};\r\n    const slotScope = ObjectCreate(__ctx || {});\r\n    if (__scope) {\r\n        slotScope[__scope] = extra;\r\n    }\r\n    const slotBDom = __render ? __render(slotScope, parent, key) : null;\r\n    if (defaultContent) {\r\n        let child1 = undefined;\r\n        let child2 = undefined;\r\n        if (slotBDom) {\r\n            child1 = dynamic ? toggler(name, slotBDom) : slotBDom;\r\n        }\r\n        else {\r\n            child2 = defaultContent(ctx, parent, key);\r\n        }\r\n        return multi([child1, child2]);\r\n    }\r\n    return slotBDom || text(\"\");\r\n}\r\nfunction capture(ctx) {\r\n    const result = ObjectCreate(ctx);\r\n    for (let k in ctx) {\r\n        result[k] = ctx[k];\r\n    }\r\n    return result;\r\n}\r\nfunction withKey(elem, k) {\r\n    elem.key = k;\r\n    return elem;\r\n}\r\nfunction prepareList(collection) {\r\n    let keys;\r\n    let values;\r\n    if (Array.isArray(collection)) {\r\n        keys = collection;\r\n        values = collection;\r\n    }\r\n    else if (collection instanceof Map) {\r\n        keys = [...collection.keys()];\r\n        values = [...collection.values()];\r\n    }\r\n    else if (Symbol.iterator in Object(collection)) {\r\n        keys = [...collection];\r\n        values = keys;\r\n    }\r\n    else if (collection && typeof collection === \"object\") {\r\n        values = Object.values(collection);\r\n        keys = Object.keys(collection);\r\n    }\r\n    else {\r\n        throw new OwlError(`Invalid loop expression: \"${collection}\" is not iterable`);\r\n    }\r\n    const n = values.length;\r\n    return [keys, values, n, new Array(n)];\r\n}\r\nconst isBoundary = Symbol(\"isBoundary\");\r\nfunction setContextValue(ctx, key, value) {\r\n    const ctx0 = ctx;\r\n    while (!ctx.hasOwnProperty(key) && !ctx.hasOwnProperty(isBoundary)) {\r\n        const newCtx = ctx.__proto__;\r\n        if (!newCtx) {\r\n            ctx = ctx0;\r\n            break;\r\n        }\r\n        ctx = newCtx;\r\n    }\r\n    ctx[key] = value;\r\n}\r\nfunction toNumber(val) {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n}\r\nfunction shallowEqual(l1, l2) {\r\n    for (let i = 0, l = l1.length; i < l; i++) {\r\n        if (l1[i] !== l2[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nclass LazyValue {\r\n    constructor(fn, ctx, component, node, key) {\r\n        this.fn = fn;\r\n        this.ctx = capture(ctx);\r\n        this.component = component;\r\n        this.node = node;\r\n        this.key = key;\r\n    }\r\n    evaluate() {\r\n        return this.fn.call(this.component, this.ctx, this.node, this.key);\r\n    }\r\n    toString() {\r\n        return this.evaluate().toString();\r\n    }\r\n}\r\n/*\r\n * Safely outputs `value` as a block depending on the nature of `value`\r\n */\r\nfunction safeOutput(value, defaultValue) {\r\n    if (value === undefined || value === null) {\r\n        return defaultValue ? toggler(\"default\", defaultValue) : toggler(\"undefined\", text(\"\"));\r\n    }\r\n    let safeKey;\r\n    let block;\r\n    switch (typeof value) {\r\n        case \"object\":\r\n            if (value instanceof Markup) {\r\n                safeKey = `string_safe`;\r\n                block = html(value);\r\n            }\r\n            else if (value instanceof LazyValue) {\r\n                safeKey = `lazy_value`;\r\n                block = value.evaluate();\r\n            }\r\n            else if (value instanceof String) {\r\n                safeKey = \"string_unsafe\";\r\n                block = text(value);\r\n            }\r\n            else {\r\n                // Assuming it is a block\r\n                safeKey = \"block_safe\";\r\n                block = value;\r\n            }\r\n            break;\r\n        case \"string\":\r\n            safeKey = \"string_unsafe\";\r\n            block = text(value);\r\n            break;\r\n        default:\r\n            safeKey = \"string_unsafe\";\r\n            block = text(String(value));\r\n    }\r\n    return toggler(safeKey, block);\r\n}\r\n/**\r\n * Validate the component props (or next props) against the (static) props\r\n * description.  This is potentially an expensive operation: it may needs to\r\n * visit recursively the props and all the children to check if they are valid.\r\n * This is why it is only done in 'dev' mode.\r\n */\r\nfunction validateProps(name, props, comp) {\r\n    const ComponentClass = typeof name !== \"string\"\r\n        ? name\r\n        : comp.constructor.components[name];\r\n    if (!ComponentClass) {\r\n        // this is an error, wrong component. We silently return here instead so the\r\n        // error is triggered by the usual path ('component' function)\r\n        return;\r\n    }\r\n    const schema = ComponentClass.props;\r\n    if (!schema) {\r\n        if (comp.__owl__.app.warnIfNoStaticProps) {\r\n            console.warn(`Component '${ComponentClass.name}' does not have a static props description`);\r\n        }\r\n        return;\r\n    }\r\n    const defaultProps = ComponentClass.defaultProps;\r\n    if (defaultProps) {\r\n        let isMandatory = (name) => Array.isArray(schema)\r\n            ? schema.includes(name)\r\n            : name in schema && !(\"*\" in schema) && !isOptional(schema[name]);\r\n        for (let p in defaultProps) {\r\n            if (isMandatory(p)) {\r\n                throw new OwlError(`A default value cannot be defined for a mandatory prop (name: '${p}', component: ${ComponentClass.name})`);\r\n            }\r\n        }\r\n    }\r\n    const errors = validateSchema(props, schema);\r\n    if (errors.length) {\r\n        throw new OwlError(`Invalid props for component '${ComponentClass.name}': ` + errors.join(\", \"));\r\n    }\r\n}\r\nfunction makeRefWrapper(node) {\r\n    let refNames = new Set();\r\n    return (name, fn) => {\r\n        if (refNames.has(name)) {\r\n            throw new OwlError(`Cannot set the same ref more than once in the same component, ref \"${name}\" was set multiple times in ${node.name}`);\r\n        }\r\n        refNames.add(name);\r\n        return fn;\r\n    };\r\n}\r\nconst helpers = {\r\n    withDefault,\r\n    zero: Symbol(\"zero\"),\r\n    isBoundary,\r\n    callSlot,\r\n    capture,\r\n    withKey,\r\n    prepareList,\r\n    setContextValue,\r\n    shallowEqual,\r\n    toNumber,\r\n    validateProps,\r\n    LazyValue,\r\n    safeOutput,\r\n    createCatcher,\r\n    markRaw,\r\n    OwlError,\r\n    makeRefWrapper,\r\n};\n\n/**\r\n * Parses an XML string into an XML document, throwing errors on parser errors\r\n * instead of returning an XML document containing the parseerror.\r\n *\r\n * @param xml the string to parse\r\n * @returns an XML document corresponding to the content of the string\r\n */\r\nfunction parseXML(xml) {\r\n    const parser = new DOMParser();\r\n    const doc = parser.parseFromString(xml, \"text/xml\");\r\n    if (doc.getElementsByTagName(\"parsererror\").length) {\r\n        let msg = \"Invalid XML in template.\";\r\n        const parsererrorText = doc.getElementsByTagName(\"parsererror\")[0].textContent;\r\n        if (parsererrorText) {\r\n            msg += \"\\nThe parser has produced the following error message:\\n\" + parsererrorText;\r\n            const re = /\\d+/g;\r\n            const firstMatch = re.exec(parsererrorText);\r\n            if (firstMatch) {\r\n                const lineNumber = Number(firstMatch[0]);\r\n                const line = xml.split(\"\\n\")[lineNumber - 1];\r\n                const secondMatch = re.exec(parsererrorText);\r\n                if (line && secondMatch) {\r\n                    const columnIndex = Number(secondMatch[0]) - 1;\r\n                    if (line[columnIndex]) {\r\n                        msg +=\r\n                            `\\nThe error might be located at xml line ${lineNumber} column ${columnIndex}\\n` +\r\n                                `${line}\\n${\"-\".repeat(columnIndex - 1)}^`;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        throw new OwlError(msg);\r\n    }\r\n    return doc;\r\n}\n\nconst bdom = { text, createBlock, list, multi, html, toggler, comment };\r\nclass TemplateSet {\r\n    constructor(config = {}) {\r\n        this.rawTemplates = Object.create(globalTemplates);\r\n        this.templates = {};\r\n        this.Portal = Portal;\r\n        this.dev = config.dev || false;\r\n        this.translateFn = config.translateFn;\r\n        this.translatableAttributes = config.translatableAttributes;\r\n        if (config.templates) {\r\n            if (config.templates instanceof Document || typeof config.templates === \"string\") {\r\n                this.addTemplates(config.templates);\r\n            }\r\n            else {\r\n                for (const name in config.templates) {\r\n                    this.addTemplate(name, config.templates[name]);\r\n                }\r\n            }\r\n        }\r\n        this.getRawTemplate = config.getTemplate;\r\n    }\r\n    static registerTemplate(name, fn) {\r\n        globalTemplates[name] = fn;\r\n    }\r\n    addTemplate(name, template) {\r\n        if (name in this.rawTemplates) {\r\n            // this check can be expensive, just silently ignore double definitions outside dev mode\r\n            if (!this.dev) {\r\n                return;\r\n            }\r\n            const rawTemplate = this.rawTemplates[name];\r\n            const currentAsString = typeof rawTemplate === \"string\"\r\n                ? rawTemplate\r\n                : rawTemplate instanceof Element\r\n                    ? rawTemplate.outerHTML\r\n                    : rawTemplate.toString();\r\n            const newAsString = typeof template === \"string\" ? template : template.outerHTML;\r\n            if (currentAsString === newAsString) {\r\n                return;\r\n            }\r\n            throw new OwlError(`Template ${name} already defined with different content`);\r\n        }\r\n        this.rawTemplates[name] = template;\r\n    }\r\n    addTemplates(xml) {\r\n        if (!xml) {\r\n            // empty string\r\n            return;\r\n        }\r\n        xml = xml instanceof Document ? xml : parseXML(xml);\r\n        for (const template of xml.querySelectorAll(\"[t-name]\")) {\r\n            const name = template.getAttribute(\"t-name\");\r\n            this.addTemplate(name, template);\r\n        }\r\n    }\r\n    getTemplate(name) {\r\n        var _a;\r\n        if (!(name in this.templates)) {\r\n            const rawTemplate = ((_a = this.getRawTemplate) === null || _a === void 0 ? void 0 : _a.call(this, name)) || this.rawTemplates[name];\r\n            if (rawTemplate === undefined) {\r\n                let extraInfo = \"\";\r\n                try {\r\n                    const componentName = getCurrent().component.constructor.name;\r\n                    extraInfo = ` (for component \"${componentName}\")`;\r\n                }\r\n                catch { }\r\n                throw new OwlError(`Missing template: \"${name}\"${extraInfo}`);\r\n            }\r\n            const isFn = typeof rawTemplate === \"function\" && !(rawTemplate instanceof Element);\r\n            const templateFn = isFn ? rawTemplate : this._compileTemplate(name, rawTemplate);\r\n            // first add a function to lazily get the template, in case there is a\r\n            // recursive call to the template name\r\n            const templates = this.templates;\r\n            this.templates[name] = function (context, parent) {\r\n                return templates[name].call(this, context, parent);\r\n            };\r\n            const template = templateFn(this, bdom, helpers);\r\n            this.templates[name] = template;\r\n        }\r\n        return this.templates[name];\r\n    }\r\n    _compileTemplate(name, template) {\r\n        throw new OwlError(`Unable to compile a template. Please use owl full build instead`);\r\n    }\r\n    callTemplate(owner, subTemplate, ctx, parent, key) {\r\n        const template = this.getTemplate(subTemplate);\r\n        return toggler(subTemplate, template.call(owner, ctx, parent, key + subTemplate));\r\n    }\r\n}\r\n// -----------------------------------------------------------------------------\r\n//  xml tag helper\r\n// -----------------------------------------------------------------------------\r\nconst globalTemplates = {};\r\nfunction xml(...args) {\r\n    const name = `__template__${xml.nextId++}`;\r\n    const value = String.raw(...args);\r\n    globalTemplates[name] = value;\r\n    return name;\r\n}\r\nxml.nextId = 1;\r\nTemplateSet.registerTemplate(\"__portal__\", portalTemplate);\n\n/**\r\n * Owl QWeb Expression Parser\r\n *\r\n * Owl needs in various contexts to be able to understand the structure of a\r\n * string representing a javascript expression.  The usual goal is to be able\r\n * to rewrite some variables.  For example, if a template has\r\n *\r\n *  ```xml\r\n *  <t t-if=\"computeSomething({val: state.val})\">...</t>\r\n * ```\r\n *\r\n * this needs to be translated in something like this:\r\n *\r\n * ```js\r\n *   if (context[\"computeSomething\"]({val: context[\"state\"].val})) { ... }\r\n * ```\r\n *\r\n * This file contains the implementation of an extremely naive tokenizer/parser\r\n * and evaluator for javascript expressions.  The supported grammar is basically\r\n * only expressive enough to understand the shape of objects, of arrays, and\r\n * various operators.\r\n */\r\n//------------------------------------------------------------------------------\r\n// Misc types, constants and helpers\r\n//------------------------------------------------------------------------------\r\nconst RESERVED_WORDS = \"true,false,NaN,null,undefined,debugger,console,window,in,instanceof,new,function,return,eval,void,Math,RegExp,Array,Object,Date\".split(\",\");\r\nconst WORD_REPLACEMENT = Object.assign(Object.create(null), {\r\n    and: \"&&\",\r\n    or: \"||\",\r\n    gt: \">\",\r\n    gte: \">=\",\r\n    lt: \"<\",\r\n    lte: \"<=\",\r\n});\r\nconst STATIC_TOKEN_MAP = Object.assign(Object.create(null), {\r\n    \"{\": \"LEFT_BRACE\",\r\n    \"}\": \"RIGHT_BRACE\",\r\n    \"[\": \"LEFT_BRACKET\",\r\n    \"]\": \"RIGHT_BRACKET\",\r\n    \":\": \"COLON\",\r\n    \",\": \"COMMA\",\r\n    \"(\": \"LEFT_PAREN\",\r\n    \")\": \"RIGHT_PAREN\",\r\n});\r\n// note that the space after typeof is relevant. It makes sure that the formatted\r\n// expression has a space after typeof. Currently we don't support delete and void\r\nconst OPERATORS = \"...,.,===,==,+,!==,!=,!,||,&&,>=,>,<=,<,?,-,*,/,%,typeof ,=>,=,;,in ,new ,|,&,^,~\".split(\",\");\r\nlet tokenizeString = function (expr) {\r\n    let s = expr[0];\r\n    let start = s;\r\n    if (s !== \"'\" && s !== '\"' && s !== \"`\") {\r\n        return false;\r\n    }\r\n    let i = 1;\r\n    let cur;\r\n    while (expr[i] && expr[i] !== start) {\r\n        cur = expr[i];\r\n        s += cur;\r\n        if (cur === \"\\\\\") {\r\n            i++;\r\n            cur = expr[i];\r\n            if (!cur) {\r\n                throw new OwlError(\"Invalid expression\");\r\n            }\r\n            s += cur;\r\n        }\r\n        i++;\r\n    }\r\n    if (expr[i] !== start) {\r\n        throw new OwlError(\"Invalid expression\");\r\n    }\r\n    s += start;\r\n    if (start === \"`\") {\r\n        return {\r\n            type: \"TEMPLATE_STRING\",\r\n            value: s,\r\n            replace(replacer) {\r\n                return s.replace(/\\$\\{(.*?)\\}/g, (match, group) => {\r\n                    return \"${\" + replacer(group) + \"}\";\r\n                });\r\n            },\r\n        };\r\n    }\r\n    return { type: \"VALUE\", value: s };\r\n};\r\nlet tokenizeNumber = function (expr) {\r\n    let s = expr[0];\r\n    if (s && s.match(/[0-9]/)) {\r\n        let i = 1;\r\n        while (expr[i] && expr[i].match(/[0-9]|\\./)) {\r\n            s += expr[i];\r\n            i++;\r\n        }\r\n        return { type: \"VALUE\", value: s };\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n};\r\nlet tokenizeSymbol = function (expr) {\r\n    let s = expr[0];\r\n    if (s && s.match(/[a-zA-Z_\\$]/)) {\r\n        let i = 1;\r\n        while (expr[i] && expr[i].match(/\\w/)) {\r\n            s += expr[i];\r\n            i++;\r\n        }\r\n        if (s in WORD_REPLACEMENT) {\r\n            return { type: \"OPERATOR\", value: WORD_REPLACEMENT[s], size: s.length };\r\n        }\r\n        return { type: \"SYMBOL\", value: s };\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n};\r\nconst tokenizeStatic = function (expr) {\r\n    const char = expr[0];\r\n    if (char && char in STATIC_TOKEN_MAP) {\r\n        return { type: STATIC_TOKEN_MAP[char], value: char };\r\n    }\r\n    return false;\r\n};\r\nconst tokenizeOperator = function (expr) {\r\n    for (let op of OPERATORS) {\r\n        if (expr.startsWith(op)) {\r\n            return { type: \"OPERATOR\", value: op };\r\n        }\r\n    }\r\n    return false;\r\n};\r\nconst TOKENIZERS = [\r\n    tokenizeString,\r\n    tokenizeNumber,\r\n    tokenizeOperator,\r\n    tokenizeSymbol,\r\n    tokenizeStatic,\r\n];\r\n/**\r\n * Convert a javascript expression (as a string) into a list of tokens. For\r\n * example: `tokenize(\"1 + b\")` will return:\r\n * ```js\r\n *  [\r\n *   {type: \"VALUE\", value: \"1\"},\r\n *   {type: \"OPERATOR\", value: \"+\"},\r\n *   {type: \"SYMBOL\", value: \"b\"}\r\n * ]\r\n * ```\r\n */\r\nfunction tokenize(expr) {\r\n    const result = [];\r\n    let token = true;\r\n    let error;\r\n    let current = expr;\r\n    try {\r\n        while (token) {\r\n            current = current.trim();\r\n            if (current) {\r\n                for (let tokenizer of TOKENIZERS) {\r\n                    token = tokenizer(current);\r\n                    if (token) {\r\n                        result.push(token);\r\n                        current = current.slice(token.size || token.value.length);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                token = false;\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        error = e; // Silence all errors and throw a generic error below\r\n    }\r\n    if (current.length || error) {\r\n        throw new OwlError(`Tokenizer error: could not tokenize \\`${expr}\\``);\r\n    }\r\n    return result;\r\n}\r\n//------------------------------------------------------------------------------\r\n// Expression \"evaluator\"\r\n//------------------------------------------------------------------------------\r\nconst isLeftSeparator = (token) => token && (token.type === \"LEFT_BRACE\" || token.type === \"COMMA\");\r\nconst isRightSeparator = (token) => token && (token.type === \"RIGHT_BRACE\" || token.type === \"COMMA\");\r\n/**\r\n * This is the main function exported by this file. This is the code that will\r\n * process an expression (given as a string) and returns another expression with\r\n * proper lookups in the context.\r\n *\r\n * Usually, this kind of code would be very simple to do if we had an AST (so,\r\n * if we had a javascript parser), since then, we would only need to find the\r\n * variables and replace them.  However, a parser is more complicated, and there\r\n * are no standard builtin parser API.\r\n *\r\n * Since this method is applied to simple javasript expressions, and the work to\r\n * be done is actually quite simple, we actually can get away with not using a\r\n * parser, which helps with the code size.\r\n *\r\n * Here is the heuristic used by this method to determine if a token is a\r\n * variable:\r\n * - by default, all symbols are considered a variable\r\n * - unless the previous token is a dot (in that case, this is a property: `a.b`)\r\n * - or if the previous token is a left brace or a comma, and the next token is\r\n *   a colon (in that case, this is an object key: `{a: b}`)\r\n *\r\n * Some specific code is also required to support arrow functions. If we detect\r\n * the arrow operator, then we add the current (or some previous tokens) token to\r\n * the list of variables so it does not get replaced by a lookup in the context\r\n */\r\nfunction compileExprToArray(expr) {\r\n    const localVars = new Set();\r\n    const tokens = tokenize(expr);\r\n    let i = 0;\r\n    let stack = []; // to track last opening (, [ or {\r\n    while (i < tokens.length) {\r\n        let token = tokens[i];\r\n        let prevToken = tokens[i - 1];\r\n        let nextToken = tokens[i + 1];\r\n        let groupType = stack[stack.length - 1];\r\n        switch (token.type) {\r\n            case \"LEFT_BRACE\":\r\n            case \"LEFT_BRACKET\":\r\n            case \"LEFT_PAREN\":\r\n                stack.push(token.type);\r\n                break;\r\n            case \"RIGHT_BRACE\":\r\n            case \"RIGHT_BRACKET\":\r\n            case \"RIGHT_PAREN\":\r\n                stack.pop();\r\n        }\r\n        let isVar = token.type === \"SYMBOL\" && !RESERVED_WORDS.includes(token.value);\r\n        if (token.type === \"SYMBOL\" && !RESERVED_WORDS.includes(token.value)) {\r\n            if (prevToken) {\r\n                // normalize missing tokens: {a} should be equivalent to {a:a}\r\n                if (groupType === \"LEFT_BRACE\" &&\r\n                    isLeftSeparator(prevToken) &&\r\n                    isRightSeparator(nextToken)) {\r\n                    tokens.splice(i + 1, 0, { type: \"COLON\", value: \":\" }, { ...token });\r\n                    nextToken = tokens[i + 1];\r\n                }\r\n                if (prevToken.type === \"OPERATOR\" && prevToken.value === \".\") {\r\n                    isVar = false;\r\n                }\r\n                else if (prevToken.type === \"LEFT_BRACE\" || prevToken.type === \"COMMA\") {\r\n                    if (nextToken && nextToken.type === \"COLON\") {\r\n                        isVar = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (token.type === \"TEMPLATE_STRING\") {\r\n            token.value = token.replace((expr) => compileExpr(expr));\r\n        }\r\n        if (nextToken && nextToken.type === \"OPERATOR\" && nextToken.value === \"=>\") {\r\n            if (token.type === \"RIGHT_PAREN\") {\r\n                let j = i - 1;\r\n                while (j > 0 && tokens[j].type !== \"LEFT_PAREN\") {\r\n                    if (tokens[j].type === \"SYMBOL\" && tokens[j].originalValue) {\r\n                        tokens[j].value = tokens[j].originalValue;\r\n                        localVars.add(tokens[j].value); //] = { id: tokens[j].value, expr: tokens[j].value };\r\n                    }\r\n                    j--;\r\n                }\r\n            }\r\n            else {\r\n                localVars.add(token.value); //] = { id: token.value, expr: token.value };\r\n            }\r\n        }\r\n        if (isVar) {\r\n            token.varName = token.value;\r\n            if (!localVars.has(token.value)) {\r\n                token.originalValue = token.value;\r\n                token.value = `ctx['${token.value}']`;\r\n            }\r\n        }\r\n        i++;\r\n    }\r\n    // Mark all variables that have been used locally.\r\n    // This assumes the expression has only one scope (incorrect but \"good enough for now\")\r\n    for (const token of tokens) {\r\n        if (token.type === \"SYMBOL\" && token.varName && localVars.has(token.value)) {\r\n            token.originalValue = token.value;\r\n            token.value = `_${token.value}`;\r\n            token.isLocal = true;\r\n        }\r\n    }\r\n    return tokens;\r\n}\r\n// Leading spaces are trimmed during tokenization, so they need to be added back for some values\r\nconst paddedValues = new Map([[\"in \", \" in \"]]);\r\nfunction compileExpr(expr) {\r\n    return compileExprToArray(expr)\r\n        .map((t) => paddedValues.get(t.value) || t.value)\r\n        .join(\"\");\r\n}\r\nconst INTERP_REGEXP = /\\{\\{.*?\\}\\}|\\#\\{.*?\\}/g;\r\nfunction replaceDynamicParts(s, replacer) {\r\n    let matches = s.match(INTERP_REGEXP);\r\n    if (matches && matches[0].length === s.length) {\r\n        return `(${replacer(s.slice(2, matches[0][0] === \"{\" ? -2 : -1))})`;\r\n    }\r\n    let r = s.replace(INTERP_REGEXP, (s) => \"${\" + replacer(s.slice(2, s[0] === \"{\" ? -2 : -1)) + \"}\");\r\n    return \"`\" + r + \"`\";\r\n}\r\nfunction interpolate(s) {\r\n    return replaceDynamicParts(s, compileExpr);\r\n}\n\nconst whitespaceRE = /\\s+/g;\r\n// using a non-html document so that <inner/outer>HTML serializes as XML instead\r\n// of HTML (as we will parse it as xml later)\r\nconst xmlDoc = document.implementation.createDocument(null, null, null);\r\nconst MODS = new Set([\"stop\", \"capture\", \"prevent\", \"self\", \"synthetic\"]);\r\nlet nextDataIds = {};\r\nfunction generateId(prefix = \"\") {\r\n    nextDataIds[prefix] = (nextDataIds[prefix] || 0) + 1;\r\n    return prefix + nextDataIds[prefix];\r\n}\r\nfunction isProp(tag, key) {\r\n    switch (tag) {\r\n        case \"input\":\r\n            return (key === \"checked\" ||\r\n                key === \"indeterminate\" ||\r\n                key === \"value\" ||\r\n                key === \"readonly\" ||\r\n                key === \"readOnly\" ||\r\n                key === \"disabled\");\r\n        case \"option\":\r\n            return key === \"selected\" || key === \"disabled\";\r\n        case \"textarea\":\r\n            return key === \"value\" || key === \"readonly\" || key === \"readOnly\" || key === \"disabled\";\r\n        case \"select\":\r\n            return key === \"value\" || key === \"disabled\";\r\n        case \"button\":\r\n        case \"optgroup\":\r\n            return key === \"disabled\";\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Returns a template literal that evaluates to str. You can add interpolation\r\n * sigils into the string if required\r\n */\r\nfunction toStringExpression(str) {\r\n    return `\\`${str.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\").replace(/\\$\\{/, \"\\\\${\")}\\``;\r\n}\r\n// -----------------------------------------------------------------------------\r\n// BlockDescription\r\n// -----------------------------------------------------------------------------\r\nclass BlockDescription {\r\n    constructor(target, type) {\r\n        this.dynamicTagName = null;\r\n        this.isRoot = false;\r\n        this.hasDynamicChildren = false;\r\n        this.children = [];\r\n        this.data = [];\r\n        this.childNumber = 0;\r\n        this.parentVar = \"\";\r\n        this.id = BlockDescription.nextBlockId++;\r\n        this.varName = \"b\" + this.id;\r\n        this.blockName = \"block\" + this.id;\r\n        this.target = target;\r\n        this.type = type;\r\n    }\r\n    insertData(str, prefix = \"d\") {\r\n        const id = generateId(prefix);\r\n        this.target.addLine(`let ${id} = ${str};`);\r\n        return this.data.push(id) - 1;\r\n    }\r\n    insert(dom) {\r\n        if (this.currentDom) {\r\n            this.currentDom.appendChild(dom);\r\n        }\r\n        else {\r\n            this.dom = dom;\r\n        }\r\n    }\r\n    generateExpr(expr) {\r\n        if (this.type === \"block\") {\r\n            const hasChildren = this.children.length;\r\n            let params = this.data.length ? `[${this.data.join(\", \")}]` : hasChildren ? \"[]\" : \"\";\r\n            if (hasChildren) {\r\n                params += \", [\" + this.children.map((c) => c.varName).join(\", \") + \"]\";\r\n            }\r\n            if (this.dynamicTagName) {\r\n                return `toggler(${this.dynamicTagName}, ${this.blockName}(${this.dynamicTagName})(${params}))`;\r\n            }\r\n            return `${this.blockName}(${params})`;\r\n        }\r\n        else if (this.type === \"list\") {\r\n            return `list(c_block${this.id})`;\r\n        }\r\n        return expr;\r\n    }\r\n    asXmlString() {\r\n        // Can't use outerHTML on text/comment nodes\r\n        // append dom to any element and use innerHTML instead\r\n        const t = xmlDoc.createElement(\"t\");\r\n        t.appendChild(this.dom);\r\n        return t.innerHTML;\r\n    }\r\n}\r\nBlockDescription.nextBlockId = 1;\r\nfunction createContext(parentCtx, params) {\r\n    return Object.assign({\r\n        block: null,\r\n        index: 0,\r\n        forceNewBlock: true,\r\n        translate: parentCtx.translate,\r\n        tKeyExpr: null,\r\n        nameSpace: parentCtx.nameSpace,\r\n        tModelSelectedExpr: parentCtx.tModelSelectedExpr,\r\n    }, params);\r\n}\r\nclass CodeTarget {\r\n    constructor(name, on) {\r\n        this.indentLevel = 0;\r\n        this.loopLevel = 0;\r\n        this.code = [];\r\n        this.hasRoot = false;\r\n        this.hasCache = false;\r\n        this.shouldProtectScope = false;\r\n        this.hasRefWrapper = false;\r\n        this.name = name;\r\n        this.on = on || null;\r\n    }\r\n    addLine(line, idx) {\r\n        const prefix = new Array(this.indentLevel + 2).join(\"  \");\r\n        if (idx === undefined) {\r\n            this.code.push(prefix + line);\r\n        }\r\n        else {\r\n            this.code.splice(idx, 0, prefix + line);\r\n        }\r\n    }\r\n    generateCode() {\r\n        let result = [];\r\n        result.push(`function ${this.name}(ctx, node, key = \"\") {`);\r\n        if (this.shouldProtectScope) {\r\n            result.push(`  ctx = Object.create(ctx);`);\r\n            result.push(`  ctx[isBoundary] = 1`);\r\n        }\r\n        if (this.hasRefWrapper) {\r\n            result.push(`  let refWrapper = makeRefWrapper(this.__owl__);`);\r\n        }\r\n        if (this.hasCache) {\r\n            result.push(`  let cache = ctx.cache || {};`);\r\n            result.push(`  let nextCache = ctx.cache = {};`);\r\n        }\r\n        for (let line of this.code) {\r\n            result.push(line);\r\n        }\r\n        if (!this.hasRoot) {\r\n            result.push(`return text('');`);\r\n        }\r\n        result.push(`}`);\r\n        return result.join(\"\\n  \");\r\n    }\r\n    currentKey(ctx) {\r\n        let key = this.loopLevel ? `key${this.loopLevel}` : \"key\";\r\n        if (ctx.tKeyExpr) {\r\n            key = `${ctx.tKeyExpr} + ${key}`;\r\n        }\r\n        return key;\r\n    }\r\n}\r\nconst TRANSLATABLE_ATTRS = [\"label\", \"title\", \"placeholder\", \"alt\"];\r\nconst translationRE = /^(\\s*)([\\s\\S]+?)(\\s*)$/;\r\nclass CodeGenerator {\r\n    constructor(ast, options) {\r\n        this.blocks = [];\r\n        this.nextBlockId = 1;\r\n        this.isDebug = false;\r\n        this.targets = [];\r\n        this.target = new CodeTarget(\"template\");\r\n        this.translatableAttributes = TRANSLATABLE_ATTRS;\r\n        this.staticDefs = [];\r\n        this.slotNames = new Set();\r\n        this.helpers = new Set();\r\n        this.translateFn = options.translateFn || ((s) => s);\r\n        if (options.translatableAttributes) {\r\n            const attrs = new Set(TRANSLATABLE_ATTRS);\r\n            for (let attr of options.translatableAttributes) {\r\n                if (attr.startsWith(\"-\")) {\r\n                    attrs.delete(attr.slice(1));\r\n                }\r\n                else {\r\n                    attrs.add(attr);\r\n                }\r\n            }\r\n            this.translatableAttributes = [...attrs];\r\n        }\r\n        this.hasSafeContext = options.hasSafeContext || false;\r\n        this.dev = options.dev || false;\r\n        this.ast = ast;\r\n        this.templateName = options.name;\r\n    }\r\n    generateCode() {\r\n        const ast = this.ast;\r\n        this.isDebug = ast.type === 12 /* TDebug */;\r\n        BlockDescription.nextBlockId = 1;\r\n        nextDataIds = {};\r\n        this.compileAST(ast, {\r\n            block: null,\r\n            index: 0,\r\n            forceNewBlock: false,\r\n            isLast: true,\r\n            translate: true,\r\n            tKeyExpr: null,\r\n        });\r\n        // define blocks and utility functions\r\n        let mainCode = [`  let { text, createBlock, list, multi, html, toggler, comment } = bdom;`];\r\n        if (this.helpers.size) {\r\n            mainCode.push(`let { ${[...this.helpers].join(\", \")} } = helpers;`);\r\n        }\r\n        if (this.templateName) {\r\n            mainCode.push(`// Template name: \"${this.templateName}\"`);\r\n        }\r\n        for (let { id, expr } of this.staticDefs) {\r\n            mainCode.push(`const ${id} = ${expr};`);\r\n        }\r\n        // define all blocks\r\n        if (this.blocks.length) {\r\n            mainCode.push(``);\r\n            for (let block of this.blocks) {\r\n                if (block.dom) {\r\n                    let xmlString = toStringExpression(block.asXmlString());\r\n                    if (block.dynamicTagName) {\r\n                        xmlString = xmlString.replace(/^`<\\w+/, `\\`<\\${tag || '${block.dom.nodeName}'}`);\r\n                        xmlString = xmlString.replace(/\\w+>`$/, `\\${tag || '${block.dom.nodeName}'}>\\``);\r\n                        mainCode.push(`let ${block.blockName} = tag => createBlock(${xmlString});`);\r\n                    }\r\n                    else {\r\n                        mainCode.push(`let ${block.blockName} = createBlock(${xmlString});`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // define all slots/defaultcontent function\r\n        if (this.targets.length) {\r\n            for (let fn of this.targets) {\r\n                mainCode.push(\"\");\r\n                mainCode = mainCode.concat(fn.generateCode());\r\n            }\r\n        }\r\n        // generate main code\r\n        mainCode.push(\"\");\r\n        mainCode = mainCode.concat(\"return \" + this.target.generateCode());\r\n        const code = mainCode.join(\"\\n  \");\r\n        if (this.isDebug) {\r\n            const msg = `[Owl Debug]\\n${code}`;\r\n            console.log(msg);\r\n        }\r\n        return code;\r\n    }\r\n    compileInNewTarget(prefix, ast, ctx, on) {\r\n        const name = generateId(prefix);\r\n        const initialTarget = this.target;\r\n        const target = new CodeTarget(name, on);\r\n        this.targets.push(target);\r\n        this.target = target;\r\n        this.compileAST(ast, createContext(ctx));\r\n        this.target = initialTarget;\r\n        return name;\r\n    }\r\n    addLine(line, idx) {\r\n        this.target.addLine(line, idx);\r\n    }\r\n    define(varName, expr) {\r\n        this.addLine(`const ${varName} = ${expr};`);\r\n    }\r\n    insertAnchor(block, index = block.children.length) {\r\n        const tag = `block-child-${index}`;\r\n        const anchor = xmlDoc.createElement(tag);\r\n        block.insert(anchor);\r\n    }\r\n    createBlock(parentBlock, type, ctx) {\r\n        const hasRoot = this.target.hasRoot;\r\n        const block = new BlockDescription(this.target, type);\r\n        if (!hasRoot) {\r\n            this.target.hasRoot = true;\r\n            block.isRoot = true;\r\n        }\r\n        if (parentBlock) {\r\n            parentBlock.children.push(block);\r\n            if (parentBlock.type === \"list\") {\r\n                block.parentVar = `c_block${parentBlock.id}`;\r\n            }\r\n        }\r\n        return block;\r\n    }\r\n    insertBlock(expression, block, ctx) {\r\n        let blockExpr = block.generateExpr(expression);\r\n        if (block.parentVar) {\r\n            let key = this.target.currentKey(ctx);\r\n            this.helpers.add(\"withKey\");\r\n            this.addLine(`${block.parentVar}[${ctx.index}] = withKey(${blockExpr}, ${key});`);\r\n            return;\r\n        }\r\n        if (ctx.tKeyExpr) {\r\n            blockExpr = `toggler(${ctx.tKeyExpr}, ${blockExpr})`;\r\n        }\r\n        if (block.isRoot) {\r\n            if (this.target.on) {\r\n                blockExpr = this.wrapWithEventCatcher(blockExpr, this.target.on);\r\n            }\r\n            this.addLine(`return ${blockExpr};`);\r\n        }\r\n        else {\r\n            this.define(block.varName, blockExpr);\r\n        }\r\n    }\r\n    /**\r\n     * Captures variables that are used inside of an expression. This is useful\r\n     * because in compiled code, almost all variables are accessed through the ctx\r\n     * object. In the case of functions, that lookup in the context can be delayed\r\n     * which can cause issues if the value has changed since the function was\r\n     * defined.\r\n     *\r\n     * @param expr the expression to capture\r\n     * @param forceCapture whether the expression should capture its scope even if\r\n     *  it doesn't contain a function. Useful when the expression will be used as\r\n     *  a function body.\r\n     * @returns a new expression that uses the captured values\r\n     */\r\n    captureExpression(expr, forceCapture = false) {\r\n        if (!forceCapture && !expr.includes(\"=>\")) {\r\n            return compileExpr(expr);\r\n        }\r\n        const tokens = compileExprToArray(expr);\r\n        const mapping = new Map();\r\n        return tokens\r\n            .map((tok) => {\r\n            if (tok.varName && !tok.isLocal) {\r\n                if (!mapping.has(tok.varName)) {\r\n                    const varId = generateId(\"v\");\r\n                    mapping.set(tok.varName, varId);\r\n                    this.define(varId, tok.value);\r\n                }\r\n                tok.value = mapping.get(tok.varName);\r\n            }\r\n            return tok.value;\r\n        })\r\n            .join(\"\");\r\n    }\r\n    translate(str) {\r\n        const match = translationRE.exec(str);\r\n        return match[1] + this.translateFn(match[2]) + match[3];\r\n    }\r\n    /**\r\n     * @returns the newly created block name, if any\r\n     */\r\n    compileAST(ast, ctx) {\r\n        switch (ast.type) {\r\n            case 1 /* Comment */:\r\n                return this.compileComment(ast, ctx);\r\n            case 0 /* Text */:\r\n                return this.compileText(ast, ctx);\r\n            case 2 /* DomNode */:\r\n                return this.compileTDomNode(ast, ctx);\r\n            case 4 /* TEsc */:\r\n                return this.compileTEsc(ast, ctx);\r\n            case 8 /* TOut */:\r\n                return this.compileTOut(ast, ctx);\r\n            case 5 /* TIf */:\r\n                return this.compileTIf(ast, ctx);\r\n            case 9 /* TForEach */:\r\n                return this.compileTForeach(ast, ctx);\r\n            case 10 /* TKey */:\r\n                return this.compileTKey(ast, ctx);\r\n            case 3 /* Multi */:\r\n                return this.compileMulti(ast, ctx);\r\n            case 7 /* TCall */:\r\n                return this.compileTCall(ast, ctx);\r\n            case 15 /* TCallBlock */:\r\n                return this.compileTCallBlock(ast, ctx);\r\n            case 6 /* TSet */:\r\n                return this.compileTSet(ast, ctx);\r\n            case 11 /* TComponent */:\r\n                return this.compileComponent(ast, ctx);\r\n            case 12 /* TDebug */:\r\n                return this.compileDebug(ast, ctx);\r\n            case 13 /* TLog */:\r\n                return this.compileLog(ast, ctx);\r\n            case 14 /* TSlot */:\r\n                return this.compileTSlot(ast, ctx);\r\n            case 16 /* TTranslation */:\r\n                return this.compileTTranslation(ast, ctx);\r\n            case 17 /* TPortal */:\r\n                return this.compileTPortal(ast, ctx);\r\n        }\r\n    }\r\n    compileDebug(ast, ctx) {\r\n        this.addLine(`debugger;`);\r\n        if (ast.content) {\r\n            return this.compileAST(ast.content, ctx);\r\n        }\r\n        return null;\r\n    }\r\n    compileLog(ast, ctx) {\r\n        this.addLine(`console.log(${compileExpr(ast.expr)});`);\r\n        if (ast.content) {\r\n            return this.compileAST(ast.content, ctx);\r\n        }\r\n        return null;\r\n    }\r\n    compileComment(ast, ctx) {\r\n        let { block, forceNewBlock } = ctx;\r\n        const isNewBlock = !block || forceNewBlock;\r\n        if (isNewBlock) {\r\n            block = this.createBlock(block, \"comment\", ctx);\r\n            this.insertBlock(`comment(${toStringExpression(ast.value)})`, block, {\r\n                ...ctx,\r\n                forceNewBlock: forceNewBlock && !block,\r\n            });\r\n        }\r\n        else {\r\n            const text = xmlDoc.createComment(ast.value);\r\n            block.insert(text);\r\n        }\r\n        return block.varName;\r\n    }\r\n    compileText(ast, ctx) {\r\n        let { block, forceNewBlock } = ctx;\r\n        let value = ast.value;\r\n        if (value && ctx.translate !== false) {\r\n            value = this.translate(value);\r\n        }\r\n        if (!ctx.inPreTag) {\r\n            value = value.replace(whitespaceRE, \" \");\r\n        }\r\n        if (!block || forceNewBlock) {\r\n            block = this.createBlock(block, \"text\", ctx);\r\n            this.insertBlock(`text(${toStringExpression(value)})`, block, {\r\n                ...ctx,\r\n                forceNewBlock: forceNewBlock && !block,\r\n            });\r\n        }\r\n        else {\r\n            const createFn = ast.type === 0 /* Text */ ? xmlDoc.createTextNode : xmlDoc.createComment;\r\n            block.insert(createFn.call(xmlDoc, value));\r\n        }\r\n        return block.varName;\r\n    }\r\n    generateHandlerCode(rawEvent, handler) {\r\n        const modifiers = rawEvent\r\n            .split(\".\")\r\n            .slice(1)\r\n            .map((m) => {\r\n            if (!MODS.has(m)) {\r\n                throw new OwlError(`Unknown event modifier: '${m}'`);\r\n            }\r\n            return `\"${m}\"`;\r\n        });\r\n        let modifiersCode = \"\";\r\n        if (modifiers.length) {\r\n            modifiersCode = `${modifiers.join(\",\")}, `;\r\n        }\r\n        return `[${modifiersCode}${this.captureExpression(handler)}, ctx]`;\r\n    }\r\n    compileTDomNode(ast, ctx) {\r\n        let { block, forceNewBlock } = ctx;\r\n        const isNewBlock = !block || forceNewBlock || ast.dynamicTag !== null || ast.ns;\r\n        let codeIdx = this.target.code.length;\r\n        if (isNewBlock) {\r\n            if ((ast.dynamicTag || ctx.tKeyExpr || ast.ns) && ctx.block) {\r\n                this.insertAnchor(ctx.block);\r\n            }\r\n            block = this.createBlock(block, \"block\", ctx);\r\n            this.blocks.push(block);\r\n            if (ast.dynamicTag) {\r\n                const tagExpr = generateId(\"tag\");\r\n                this.define(tagExpr, compileExpr(ast.dynamicTag));\r\n                block.dynamicTagName = tagExpr;\r\n            }\r\n        }\r\n        // attributes\r\n        const attrs = {};\r\n        for (let key in ast.attrs) {\r\n            let expr, attrName;\r\n            if (key.startsWith(\"t-attf\")) {\r\n                expr = interpolate(ast.attrs[key]);\r\n                const idx = block.insertData(expr, \"attr\");\r\n                attrName = key.slice(7);\r\n                attrs[\"block-attribute-\" + idx] = attrName;\r\n            }\r\n            else if (key.startsWith(\"t-att\")) {\r\n                attrName = key === \"t-att\" ? null : key.slice(6);\r\n                expr = compileExpr(ast.attrs[key]);\r\n                if (attrName && isProp(ast.tag, attrName)) {\r\n                    if (attrName === \"readonly\") {\r\n                        // the property has a different name than the attribute\r\n                        attrName = \"readOnly\";\r\n                    }\r\n                    // we force a new string or new boolean to bypass the equality check in blockdom when patching same value\r\n                    if (attrName === \"value\") {\r\n                        // When the expression is falsy (except 0), fall back to an empty string\r\n                        expr = `new String((${expr}) === 0 ? 0 : ((${expr}) || \"\"))`;\r\n                    }\r\n                    else {\r\n                        expr = `new Boolean(${expr})`;\r\n                    }\r\n                    const idx = block.insertData(expr, \"prop\");\r\n                    attrs[`block-property-${idx}`] = attrName;\r\n                }\r\n                else {\r\n                    const idx = block.insertData(expr, \"attr\");\r\n                    if (key === \"t-att\") {\r\n                        attrs[`block-attributes`] = String(idx);\r\n                    }\r\n                    else {\r\n                        attrs[`block-attribute-${idx}`] = attrName;\r\n                    }\r\n                }\r\n            }\r\n            else if (this.translatableAttributes.includes(key)) {\r\n                attrs[key] = this.translateFn(ast.attrs[key]);\r\n            }\r\n            else {\r\n                expr = `\"${ast.attrs[key]}\"`;\r\n                attrName = key;\r\n                attrs[key] = ast.attrs[key];\r\n            }\r\n            if (attrName === \"value\" && ctx.tModelSelectedExpr) {\r\n                let selectedId = block.insertData(`${ctx.tModelSelectedExpr} === ${expr}`, \"attr\");\r\n                attrs[`block-attribute-${selectedId}`] = \"selected\";\r\n            }\r\n        }\r\n        // t-model\r\n        let tModelSelectedExpr;\r\n        if (ast.model) {\r\n            const { hasDynamicChildren, baseExpr, expr, eventType, shouldNumberize, shouldTrim, targetAttr, specialInitTargetAttr, } = ast.model;\r\n            const baseExpression = compileExpr(baseExpr);\r\n            const bExprId = generateId(\"bExpr\");\r\n            this.define(bExprId, baseExpression);\r\n            const expression = compileExpr(expr);\r\n            const exprId = generateId(\"expr\");\r\n            this.define(exprId, expression);\r\n            const fullExpression = `${bExprId}[${exprId}]`;\r\n            let idx;\r\n            if (specialInitTargetAttr) {\r\n                let targetExpr = targetAttr in attrs && `'${attrs[targetAttr]}'`;\r\n                if (!targetExpr && ast.attrs) {\r\n                    // look at the dynamic attribute counterpart\r\n                    const dynamicTgExpr = ast.attrs[`t-att-${targetAttr}`];\r\n                    if (dynamicTgExpr) {\r\n                        targetExpr = compileExpr(dynamicTgExpr);\r\n                    }\r\n                }\r\n                idx = block.insertData(`${fullExpression} === ${targetExpr}`, \"prop\");\r\n                attrs[`block-property-${idx}`] = specialInitTargetAttr;\r\n            }\r\n            else if (hasDynamicChildren) {\r\n                const bValueId = generateId(\"bValue\");\r\n                tModelSelectedExpr = `${bValueId}`;\r\n                this.define(tModelSelectedExpr, fullExpression);\r\n            }\r\n            else {\r\n                idx = block.insertData(`${fullExpression}`, \"prop\");\r\n                attrs[`block-property-${idx}`] = targetAttr;\r\n            }\r\n            this.helpers.add(\"toNumber\");\r\n            let valueCode = `ev.target.${targetAttr}`;\r\n            valueCode = shouldTrim ? `${valueCode}.trim()` : valueCode;\r\n            valueCode = shouldNumberize ? `toNumber(${valueCode})` : valueCode;\r\n            const handler = `[(ev) => { ${fullExpression} = ${valueCode}; }]`;\r\n            idx = block.insertData(handler, \"hdlr\");\r\n            attrs[`block-handler-${idx}`] = eventType;\r\n        }\r\n        // event handlers\r\n        for (let ev in ast.on) {\r\n            const name = this.generateHandlerCode(ev, ast.on[ev]);\r\n            const idx = block.insertData(name, \"hdlr\");\r\n            attrs[`block-handler-${idx}`] = ev;\r\n        }\r\n        // t-ref\r\n        if (ast.ref) {\r\n            if (this.dev) {\r\n                this.helpers.add(\"makeRefWrapper\");\r\n                this.target.hasRefWrapper = true;\r\n            }\r\n            const isDynamic = INTERP_REGEXP.test(ast.ref);\r\n            let name = `\\`${ast.ref}\\``;\r\n            if (isDynamic) {\r\n                name = replaceDynamicParts(ast.ref, (expr) => this.captureExpression(expr, true));\r\n            }\r\n            let setRefStr = `(el) => this.__owl__.setRef((${name}), el)`;\r\n            if (this.dev) {\r\n                setRefStr = `refWrapper(${name}, ${setRefStr})`;\r\n            }\r\n            const idx = block.insertData(setRefStr, \"ref\");\r\n            attrs[\"block-ref\"] = String(idx);\r\n        }\r\n        const nameSpace = ast.ns || ctx.nameSpace;\r\n        const dom = nameSpace\r\n            ? xmlDoc.createElementNS(nameSpace, ast.tag)\r\n            : xmlDoc.createElement(ast.tag);\r\n        for (const [attr, val] of Object.entries(attrs)) {\r\n            if (!(attr === \"class\" && val === \"\")) {\r\n                dom.setAttribute(attr, val);\r\n            }\r\n        }\r\n        block.insert(dom);\r\n        if (ast.content.length) {\r\n            const initialDom = block.currentDom;\r\n            block.currentDom = dom;\r\n            const children = ast.content;\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = ast.content[i];\r\n                const subCtx = createContext(ctx, {\r\n                    block,\r\n                    index: block.childNumber,\r\n                    forceNewBlock: false,\r\n                    isLast: ctx.isLast && i === children.length - 1,\r\n                    tKeyExpr: ctx.tKeyExpr,\r\n                    nameSpace,\r\n                    tModelSelectedExpr,\r\n                    inPreTag: ctx.inPreTag || ast.tag === \"pre\",\r\n                });\r\n                this.compileAST(child, subCtx);\r\n            }\r\n            block.currentDom = initialDom;\r\n        }\r\n        if (isNewBlock) {\r\n            this.insertBlock(`${block.blockName}(ddd)`, block, ctx);\r\n            // may need to rewrite code!\r\n            if (block.children.length && block.hasDynamicChildren) {\r\n                const code = this.target.code;\r\n                const children = block.children.slice();\r\n                let current = children.shift();\r\n                for (let i = codeIdx; i < code.length; i++) {\r\n                    if (code[i].trimStart().startsWith(`const ${current.varName} `)) {\r\n                        code[i] = code[i].replace(`const ${current.varName}`, current.varName);\r\n                        current = children.shift();\r\n                        if (!current)\r\n                            break;\r\n                    }\r\n                }\r\n                this.addLine(`let ${block.children.map((c) => c.varName).join(\", \")};`, codeIdx);\r\n            }\r\n        }\r\n        return block.varName;\r\n    }\r\n    compileTEsc(ast, ctx) {\r\n        let { block, forceNewBlock } = ctx;\r\n        let expr;\r\n        if (ast.expr === \"0\") {\r\n            this.helpers.add(\"zero\");\r\n            expr = `ctx[zero]`;\r\n        }\r\n        else {\r\n            expr = compileExpr(ast.expr);\r\n            if (ast.defaultValue) {\r\n                this.helpers.add(\"withDefault\");\r\n                // FIXME: defaultValue is not translated\r\n                expr = `withDefault(${expr}, ${toStringExpression(ast.defaultValue)})`;\r\n            }\r\n        }\r\n        if (!block || forceNewBlock) {\r\n            block = this.createBlock(block, \"text\", ctx);\r\n            this.insertBlock(`text(${expr})`, block, { ...ctx, forceNewBlock: forceNewBlock && !block });\r\n        }\r\n        else {\r\n            const idx = block.insertData(expr, \"txt\");\r\n            const text = xmlDoc.createElement(`block-text-${idx}`);\r\n            block.insert(text);\r\n        }\r\n        return block.varName;\r\n    }\r\n    compileTOut(ast, ctx) {\r\n        let { block } = ctx;\r\n        if (block) {\r\n            this.insertAnchor(block);\r\n        }\r\n        block = this.createBlock(block, \"html\", ctx);\r\n        let blockStr;\r\n        if (ast.expr === \"0\") {\r\n            this.helpers.add(\"zero\");\r\n            blockStr = `ctx[zero]`;\r\n        }\r\n        else if (ast.body) {\r\n            let bodyValue = null;\r\n            bodyValue = BlockDescription.nextBlockId;\r\n            const subCtx = createContext(ctx);\r\n            this.compileAST({ type: 3 /* Multi */, content: ast.body }, subCtx);\r\n            this.helpers.add(\"safeOutput\");\r\n            blockStr = `safeOutput(${compileExpr(ast.expr)}, b${bodyValue})`;\r\n        }\r\n        else {\r\n            this.helpers.add(\"safeOutput\");\r\n            blockStr = `safeOutput(${compileExpr(ast.expr)})`;\r\n        }\r\n        this.insertBlock(blockStr, block, ctx);\r\n        return block.varName;\r\n    }\r\n    compileTIfBranch(content, block, ctx) {\r\n        this.target.indentLevel++;\r\n        let childN = block.children.length;\r\n        this.compileAST(content, createContext(ctx, { block, index: ctx.index }));\r\n        if (block.children.length > childN) {\r\n            // we have some content => need to insert an anchor at correct index\r\n            this.insertAnchor(block, childN);\r\n        }\r\n        this.target.indentLevel--;\r\n    }\r\n    compileTIf(ast, ctx, nextNode) {\r\n        let { block, forceNewBlock } = ctx;\r\n        const codeIdx = this.target.code.length;\r\n        const isNewBlock = !block || (block.type !== \"multi\" && forceNewBlock);\r\n        if (block) {\r\n            block.hasDynamicChildren = true;\r\n        }\r\n        if (!block || (block.type !== \"multi\" && forceNewBlock)) {\r\n            block = this.createBlock(block, \"multi\", ctx);\r\n        }\r\n        this.addLine(`if (${compileExpr(ast.condition)}) {`);\r\n        this.compileTIfBranch(ast.content, block, ctx);\r\n        if (ast.tElif) {\r\n            for (let clause of ast.tElif) {\r\n                this.addLine(`} else if (${compileExpr(clause.condition)}) {`);\r\n                this.compileTIfBranch(clause.content, block, ctx);\r\n            }\r\n        }\r\n        if (ast.tElse) {\r\n            this.addLine(`} else {`);\r\n            this.compileTIfBranch(ast.tElse, block, ctx);\r\n        }\r\n        this.addLine(\"}\");\r\n        if (isNewBlock) {\r\n            // note: this part is duplicated from end of compiledomnode:\r\n            if (block.children.length) {\r\n                const code = this.target.code;\r\n                const children = block.children.slice();\r\n                let current = children.shift();\r\n                for (let i = codeIdx; i < code.length; i++) {\r\n                    if (code[i].trimStart().startsWith(`const ${current.varName} `)) {\r\n                        code[i] = code[i].replace(`const ${current.varName}`, current.varName);\r\n                        current = children.shift();\r\n                        if (!current)\r\n                            break;\r\n                    }\r\n                }\r\n                this.addLine(`let ${block.children.map((c) => c.varName).join(\", \")};`, codeIdx);\r\n            }\r\n            // note: this part is duplicated from end of compilemulti:\r\n            const args = block.children.map((c) => c.varName).join(\", \");\r\n            this.insertBlock(`multi([${args}])`, block, ctx);\r\n        }\r\n        return block.varName;\r\n    }\r\n    compileTForeach(ast, ctx) {\r\n        let { block } = ctx;\r\n        if (block) {\r\n            this.insertAnchor(block);\r\n        }\r\n        block = this.createBlock(block, \"list\", ctx);\r\n        this.target.loopLevel++;\r\n        const loopVar = `i${this.target.loopLevel}`;\r\n        this.addLine(`ctx = Object.create(ctx);`);\r\n        const vals = `v_block${block.id}`;\r\n        const keys = `k_block${block.id}`;\r\n        const l = `l_block${block.id}`;\r\n        const c = `c_block${block.id}`;\r\n        this.helpers.add(\"prepareList\");\r\n        this.define(`[${keys}, ${vals}, ${l}, ${c}]`, `prepareList(${compileExpr(ast.collection)});`);\r\n        // Throw errors on duplicate keys in dev mode\r\n        if (this.dev) {\r\n            this.define(`keys${block.id}`, `new Set()`);\r\n        }\r\n        this.addLine(`for (let ${loopVar} = 0; ${loopVar} < ${l}; ${loopVar}++) {`);\r\n        this.target.indentLevel++;\r\n        this.addLine(`ctx[\\`${ast.elem}\\`] = ${keys}[${loopVar}];`);\r\n        if (!ast.hasNoFirst) {\r\n            this.addLine(`ctx[\\`${ast.elem}_first\\`] = ${loopVar} === 0;`);\r\n        }\r\n        if (!ast.hasNoLast) {\r\n            this.addLine(`ctx[\\`${ast.elem}_last\\`] = ${loopVar} === ${keys}.length - 1;`);\r\n        }\r\n        if (!ast.hasNoIndex) {\r\n            this.addLine(`ctx[\\`${ast.elem}_index\\`] = ${loopVar};`);\r\n        }\r\n        if (!ast.hasNoValue) {\r\n            this.addLine(`ctx[\\`${ast.elem}_value\\`] = ${vals}[${loopVar}];`);\r\n        }\r\n        this.define(`key${this.target.loopLevel}`, ast.key ? compileExpr(ast.key) : loopVar);\r\n        if (this.dev) {\r\n            // Throw error on duplicate keys in dev mode\r\n            this.helpers.add(\"OwlError\");\r\n            this.addLine(`if (keys${block.id}.has(String(key${this.target.loopLevel}))) { throw new OwlError(\\`Got duplicate key in t-foreach: \\${key${this.target.loopLevel}}\\`)}`);\r\n            this.addLine(`keys${block.id}.add(String(key${this.target.loopLevel}));`);\r\n        }\r\n        let id;\r\n        if (ast.memo) {\r\n            this.target.hasCache = true;\r\n            id = generateId();\r\n            this.define(`memo${id}`, compileExpr(ast.memo));\r\n            this.define(`vnode${id}`, `cache[key${this.target.loopLevel}];`);\r\n            this.addLine(`if (vnode${id}) {`);\r\n            this.target.indentLevel++;\r\n            this.addLine(`if (shallowEqual(vnode${id}.memo, memo${id})) {`);\r\n            this.target.indentLevel++;\r\n            this.addLine(`${c}[${loopVar}] = vnode${id};`);\r\n            this.addLine(`nextCache[key${this.target.loopLevel}] = vnode${id};`);\r\n            this.addLine(`continue;`);\r\n            this.target.indentLevel--;\r\n            this.addLine(\"}\");\r\n            this.target.indentLevel--;\r\n            this.addLine(\"}\");\r\n        }\r\n        const subCtx = createContext(ctx, { block, index: loopVar });\r\n        this.compileAST(ast.body, subCtx);\r\n        if (ast.memo) {\r\n            this.addLine(`nextCache[key${this.target.loopLevel}] = Object.assign(${c}[${loopVar}], {memo: memo${id}});`);\r\n        }\r\n        this.target.indentLevel--;\r\n        this.target.loopLevel--;\r\n        this.addLine(`}`);\r\n        if (!ctx.isLast) {\r\n            this.addLine(`ctx = ctx.__proto__;`);\r\n        }\r\n        this.insertBlock(\"l\", block, ctx);\r\n        return block.varName;\r\n    }\r\n    compileTKey(ast, ctx) {\r\n        const tKeyExpr = generateId(\"tKey_\");\r\n        this.define(tKeyExpr, compileExpr(ast.expr));\r\n        ctx = createContext(ctx, {\r\n            tKeyExpr,\r\n            block: ctx.block,\r\n            index: ctx.index,\r\n        });\r\n        return this.compileAST(ast.content, ctx);\r\n    }\r\n    compileMulti(ast, ctx) {\r\n        let { block, forceNewBlock } = ctx;\r\n        const isNewBlock = !block || forceNewBlock;\r\n        let codeIdx = this.target.code.length;\r\n        if (isNewBlock) {\r\n            const n = ast.content.filter((c) => c.type !== 6 /* TSet */).length;\r\n            let result = null;\r\n            if (n <= 1) {\r\n                for (let child of ast.content) {\r\n                    const blockName = this.compileAST(child, ctx);\r\n                    result = result || blockName;\r\n                }\r\n                return result;\r\n            }\r\n            block = this.createBlock(block, \"multi\", ctx);\r\n        }\r\n        let index = 0;\r\n        for (let i = 0, l = ast.content.length; i < l; i++) {\r\n            const child = ast.content[i];\r\n            const isTSet = child.type === 6 /* TSet */;\r\n            const subCtx = createContext(ctx, {\r\n                block,\r\n                index,\r\n                forceNewBlock: !isTSet,\r\n                isLast: ctx.isLast && i === l - 1,\r\n            });\r\n            this.compileAST(child, subCtx);\r\n            if (!isTSet) {\r\n                index++;\r\n            }\r\n        }\r\n        if (isNewBlock) {\r\n            if (block.hasDynamicChildren && block.children.length) {\r\n                const code = this.target.code;\r\n                const children = block.children.slice();\r\n                let current = children.shift();\r\n                for (let i = codeIdx; i < code.length; i++) {\r\n                    if (code[i].trimStart().startsWith(`const ${current.varName} `)) {\r\n                        code[i] = code[i].replace(`const ${current.varName}`, current.varName);\r\n                        current = children.shift();\r\n                        if (!current)\r\n                            break;\r\n                    }\r\n                }\r\n                this.addLine(`let ${block.children.map((c) => c.varName).join(\", \")};`, codeIdx);\r\n            }\r\n            const args = block.children.map((c) => c.varName).join(\", \");\r\n            this.insertBlock(`multi([${args}])`, block, ctx);\r\n        }\r\n        return block.varName;\r\n    }\r\n    compileTCall(ast, ctx) {\r\n        let { block, forceNewBlock } = ctx;\r\n        let ctxVar = ctx.ctxVar || \"ctx\";\r\n        if (ast.context) {\r\n            ctxVar = generateId(\"ctx\");\r\n            this.addLine(`let ${ctxVar} = ${compileExpr(ast.context)};`);\r\n        }\r\n        const isDynamic = INTERP_REGEXP.test(ast.name);\r\n        const subTemplate = isDynamic ? interpolate(ast.name) : \"`\" + ast.name + \"`\";\r\n        if (block && !forceNewBlock) {\r\n            this.insertAnchor(block);\r\n        }\r\n        block = this.createBlock(block, \"multi\", ctx);\r\n        if (ast.body) {\r\n            this.addLine(`${ctxVar} = Object.create(${ctxVar});`);\r\n            this.addLine(`${ctxVar}[isBoundary] = 1;`);\r\n            this.helpers.add(\"isBoundary\");\r\n            const subCtx = createContext(ctx, { ctxVar });\r\n            const bl = this.compileMulti({ type: 3 /* Multi */, content: ast.body }, subCtx);\r\n            if (bl) {\r\n                this.helpers.add(\"zero\");\r\n                this.addLine(`${ctxVar}[zero] = ${bl};`);\r\n            }\r\n        }\r\n        const key = this.generateComponentKey();\r\n        if (isDynamic) {\r\n            const templateVar = generateId(\"template\");\r\n            if (!this.staticDefs.find((d) => d.id === \"call\")) {\r\n                this.staticDefs.push({ id: \"call\", expr: `app.callTemplate.bind(app)` });\r\n            }\r\n            this.define(templateVar, subTemplate);\r\n            this.insertBlock(`call(this, ${templateVar}, ${ctxVar}, node, ${key})`, block, {\r\n                ...ctx,\r\n                forceNewBlock: !block,\r\n            });\r\n        }\r\n        else {\r\n            const id = generateId(`callTemplate_`);\r\n            this.staticDefs.push({ id, expr: `app.getTemplate(${subTemplate})` });\r\n            this.insertBlock(`${id}.call(this, ${ctxVar}, node, ${key})`, block, {\r\n                ...ctx,\r\n                forceNewBlock: !block,\r\n            });\r\n        }\r\n        if (ast.body && !ctx.isLast) {\r\n            this.addLine(`${ctxVar} = ${ctxVar}.__proto__;`);\r\n        }\r\n        return block.varName;\r\n    }\r\n    compileTCallBlock(ast, ctx) {\r\n        let { block, forceNewBlock } = ctx;\r\n        if (block) {\r\n            if (!forceNewBlock) {\r\n                this.insertAnchor(block);\r\n            }\r\n        }\r\n        block = this.createBlock(block, \"multi\", ctx);\r\n        this.insertBlock(compileExpr(ast.name), block, { ...ctx, forceNewBlock: !block });\r\n        return block.varName;\r\n    }\r\n    compileTSet(ast, ctx) {\r\n        this.target.shouldProtectScope = true;\r\n        this.helpers.add(\"isBoundary\").add(\"withDefault\");\r\n        const expr = ast.value ? compileExpr(ast.value || \"\") : \"null\";\r\n        if (ast.body) {\r\n            this.helpers.add(\"LazyValue\");\r\n            const bodyAst = { type: 3 /* Multi */, content: ast.body };\r\n            const name = this.compileInNewTarget(\"value\", bodyAst, ctx);\r\n            let key = this.target.currentKey(ctx);\r\n            let value = `new LazyValue(${name}, ctx, this, node, ${key})`;\r\n            value = ast.value ? (value ? `withDefault(${expr}, ${value})` : expr) : value;\r\n            this.addLine(`ctx[\\`${ast.name}\\`] = ${value};`);\r\n        }\r\n        else {\r\n            let value;\r\n            if (ast.defaultValue) {\r\n                const defaultValue = toStringExpression(ctx.translate ? this.translate(ast.defaultValue) : ast.defaultValue);\r\n                if (ast.value) {\r\n                    value = `withDefault(${expr}, ${defaultValue})`;\r\n                }\r\n                else {\r\n                    value = defaultValue;\r\n                }\r\n            }\r\n            else {\r\n                value = expr;\r\n            }\r\n            this.helpers.add(\"setContextValue\");\r\n            this.addLine(`setContextValue(${ctx.ctxVar || \"ctx\"}, \"${ast.name}\", ${value});`);\r\n        }\r\n        return null;\r\n    }\r\n    generateComponentKey(currentKey = \"key\") {\r\n        const parts = [generateId(\"__\")];\r\n        for (let i = 0; i < this.target.loopLevel; i++) {\r\n            parts.push(`\\${key${i + 1}}`);\r\n        }\r\n        return `${currentKey} + \\`${parts.join(\"__\")}\\``;\r\n    }\r\n    /**\r\n     * Formats a prop name and value into a string suitable to be inserted in the\r\n     * generated code. For example:\r\n     *\r\n     * Name              Value            Result\r\n     * ---------------------------------------------------------\r\n     * \"number\"          \"state\"          \"number: ctx['state']\"\r\n     * \"something\"       \"\"               \"something: undefined\"\r\n     * \"some-prop\"       \"state\"          \"'some-prop': ctx['state']\"\r\n     * \"onClick.bind\"    \"onClick\"        \"onClick: bind(ctx, ctx['onClick'])\"\r\n     */\r\n    formatProp(name, value) {\r\n        if (name.endsWith(\".translate\")) {\r\n            value = toStringExpression(this.translateFn(value));\r\n        }\r\n        else {\r\n            value = this.captureExpression(value);\r\n        }\r\n        if (name.includes(\".\")) {\r\n            let [_name, suffix] = name.split(\".\");\r\n            name = _name;\r\n            switch (suffix) {\r\n                case \"bind\":\r\n                    value = `(${value}).bind(this)`;\r\n                    break;\r\n                case \"alike\":\r\n                case \"translate\":\r\n                    break;\r\n                default:\r\n                    throw new OwlError(\"Invalid prop suffix\");\r\n            }\r\n        }\r\n        name = /^[a-z_]+$/i.test(name) ? name : `'${name}'`;\r\n        return `${name}: ${value || undefined}`;\r\n    }\r\n    formatPropObject(obj) {\r\n        return Object.entries(obj).map(([k, v]) => this.formatProp(k, v));\r\n    }\r\n    getPropString(props, dynProps) {\r\n        let propString = `{${props.join(\",\")}}`;\r\n        if (dynProps) {\r\n            propString = `Object.assign({}, ${compileExpr(dynProps)}${props.length ? \", \" + propString : \"\"})`;\r\n        }\r\n        return propString;\r\n    }\r\n    compileComponent(ast, ctx) {\r\n        let { block } = ctx;\r\n        // props\r\n        const hasSlotsProp = \"slots\" in (ast.props || {});\r\n        const props = ast.props ? this.formatPropObject(ast.props) : [];\r\n        // slots\r\n        let slotDef = \"\";\r\n        if (ast.slots) {\r\n            let ctxStr = \"ctx\";\r\n            if (this.target.loopLevel || !this.hasSafeContext) {\r\n                ctxStr = generateId(\"ctx\");\r\n                this.helpers.add(\"capture\");\r\n                this.define(ctxStr, `capture(ctx)`);\r\n            }\r\n            let slotStr = [];\r\n            for (let slotName in ast.slots) {\r\n                const slotAst = ast.slots[slotName];\r\n                const params = [];\r\n                if (slotAst.content) {\r\n                    const name = this.compileInNewTarget(\"slot\", slotAst.content, ctx, slotAst.on);\r\n                    params.push(`__render: ${name}.bind(this), __ctx: ${ctxStr}`);\r\n                }\r\n                const scope = ast.slots[slotName].scope;\r\n                if (scope) {\r\n                    params.push(`__scope: \"${scope}\"`);\r\n                }\r\n                if (ast.slots[slotName].attrs) {\r\n                    params.push(...this.formatPropObject(ast.slots[slotName].attrs));\r\n                }\r\n                const slotInfo = `{${params.join(\", \")}}`;\r\n                slotStr.push(`'${slotName}': ${slotInfo}`);\r\n            }\r\n            slotDef = `{${slotStr.join(\", \")}}`;\r\n        }\r\n        if (slotDef && !(ast.dynamicProps || hasSlotsProp)) {\r\n            this.helpers.add(\"markRaw\");\r\n            props.push(`slots: markRaw(${slotDef})`);\r\n        }\r\n        let propString = this.getPropString(props, ast.dynamicProps);\r\n        let propVar;\r\n        if ((slotDef && (ast.dynamicProps || hasSlotsProp)) || this.dev) {\r\n            propVar = generateId(\"props\");\r\n            this.define(propVar, propString);\r\n            propString = propVar;\r\n        }\r\n        if (slotDef && (ast.dynamicProps || hasSlotsProp)) {\r\n            this.helpers.add(\"markRaw\");\r\n            this.addLine(`${propVar}.slots = markRaw(Object.assign(${slotDef}, ${propVar}.slots))`);\r\n        }\r\n        // cmap key\r\n        let expr;\r\n        if (ast.isDynamic) {\r\n            expr = generateId(\"Comp\");\r\n            this.define(expr, compileExpr(ast.name));\r\n        }\r\n        else {\r\n            expr = `\\`${ast.name}\\``;\r\n        }\r\n        if (this.dev) {\r\n            this.addLine(`helpers.validateProps(${expr}, ${propVar}, this);`);\r\n        }\r\n        if (block && (ctx.forceNewBlock === false || ctx.tKeyExpr)) {\r\n            // todo: check the forcenewblock condition\r\n            this.insertAnchor(block);\r\n        }\r\n        let keyArg = this.generateComponentKey();\r\n        if (ctx.tKeyExpr) {\r\n            keyArg = `${ctx.tKeyExpr} + ${keyArg}`;\r\n        }\r\n        let id = generateId(\"comp\");\r\n        const propList = [];\r\n        for (let p in ast.props || {}) {\r\n            let [name, suffix] = p.split(\".\");\r\n            if (!suffix) {\r\n                propList.push(`\"${name}\"`);\r\n            }\r\n        }\r\n        this.staticDefs.push({\r\n            id,\r\n            expr: `app.createComponent(${ast.isDynamic ? null : expr}, ${!ast.isDynamic}, ${!!ast.slots}, ${!!ast.dynamicProps}, [${propList}])`,\r\n        });\r\n        if (ast.isDynamic) {\r\n            // If the component class changes, this can cause delayed renders to go\r\n            // through if the key doesn't change. Use the component name for now.\r\n            // This means that two component classes with the same name isn't supported\r\n            // in t-component. We can generate a unique id per class later if needed.\r\n            keyArg = `(${expr}).name + ${keyArg}`;\r\n        }\r\n        let blockExpr = `${id}(${propString}, ${keyArg}, node, this, ${ast.isDynamic ? expr : null})`;\r\n        if (ast.isDynamic) {\r\n            blockExpr = `toggler(${expr}, ${blockExpr})`;\r\n        }\r\n        // event handling\r\n        if (ast.on) {\r\n            blockExpr = this.wrapWithEventCatcher(blockExpr, ast.on);\r\n        }\r\n        block = this.createBlock(block, \"multi\", ctx);\r\n        this.insertBlock(blockExpr, block, ctx);\r\n        return block.varName;\r\n    }\r\n    wrapWithEventCatcher(expr, on) {\r\n        this.helpers.add(\"createCatcher\");\r\n        let name = generateId(\"catcher\");\r\n        let spec = {};\r\n        let handlers = [];\r\n        for (let ev in on) {\r\n            let handlerId = generateId(\"hdlr\");\r\n            let idx = handlers.push(handlerId) - 1;\r\n            spec[ev] = idx;\r\n            const handler = this.generateHandlerCode(ev, on[ev]);\r\n            this.define(handlerId, handler);\r\n        }\r\n        this.staticDefs.push({ id: name, expr: `createCatcher(${JSON.stringify(spec)})` });\r\n        return `${name}(${expr}, [${handlers.join(\",\")}])`;\r\n    }\r\n    compileTSlot(ast, ctx) {\r\n        this.helpers.add(\"callSlot\");\r\n        let { block } = ctx;\r\n        let blockString;\r\n        let slotName;\r\n        let dynamic = false;\r\n        let isMultiple = false;\r\n        if (ast.name.match(INTERP_REGEXP)) {\r\n            dynamic = true;\r\n            isMultiple = true;\r\n            slotName = interpolate(ast.name);\r\n        }\r\n        else {\r\n            slotName = \"'\" + ast.name + \"'\";\r\n            isMultiple = isMultiple || this.slotNames.has(ast.name);\r\n            this.slotNames.add(ast.name);\r\n        }\r\n        const dynProps = ast.attrs ? ast.attrs[\"t-props\"] : null;\r\n        if (ast.attrs) {\r\n            delete ast.attrs[\"t-props\"];\r\n        }\r\n        let key = this.target.loopLevel ? `key${this.target.loopLevel}` : \"key\";\r\n        if (isMultiple) {\r\n            key = this.generateComponentKey(key);\r\n        }\r\n        const props = ast.attrs ? this.formatPropObject(ast.attrs) : [];\r\n        const scope = this.getPropString(props, dynProps);\r\n        if (ast.defaultContent) {\r\n            const name = this.compileInNewTarget(\"defaultContent\", ast.defaultContent, ctx);\r\n            blockString = `callSlot(ctx, node, ${key}, ${slotName}, ${dynamic}, ${scope}, ${name}.bind(this))`;\r\n        }\r\n        else {\r\n            if (dynamic) {\r\n                let name = generateId(\"slot\");\r\n                this.define(name, slotName);\r\n                blockString = `toggler(${name}, callSlot(ctx, node, ${key}, ${name}, ${dynamic}, ${scope}))`;\r\n            }\r\n            else {\r\n                blockString = `callSlot(ctx, node, ${key}, ${slotName}, ${dynamic}, ${scope})`;\r\n            }\r\n        }\r\n        // event handling\r\n        if (ast.on) {\r\n            blockString = this.wrapWithEventCatcher(blockString, ast.on);\r\n        }\r\n        if (block) {\r\n            this.insertAnchor(block);\r\n        }\r\n        block = this.createBlock(block, \"multi\", ctx);\r\n        this.insertBlock(blockString, block, { ...ctx, forceNewBlock: false });\r\n        return block.varName;\r\n    }\r\n    compileTTranslation(ast, ctx) {\r\n        if (ast.content) {\r\n            return this.compileAST(ast.content, Object.assign({}, ctx, { translate: false }));\r\n        }\r\n        return null;\r\n    }\r\n    compileTPortal(ast, ctx) {\r\n        if (!this.staticDefs.find((d) => d.id === \"Portal\")) {\r\n            this.staticDefs.push({ id: \"Portal\", expr: `app.Portal` });\r\n        }\r\n        let { block } = ctx;\r\n        const name = this.compileInNewTarget(\"slot\", ast.content, ctx);\r\n        let ctxStr = \"ctx\";\r\n        if (this.target.loopLevel || !this.hasSafeContext) {\r\n            ctxStr = generateId(\"ctx\");\r\n            this.helpers.add(\"capture\");\r\n            this.define(ctxStr, `capture(ctx)`);\r\n        }\r\n        let id = generateId(\"comp\");\r\n        this.staticDefs.push({\r\n            id,\r\n            expr: `app.createComponent(null, false, true, false, false)`,\r\n        });\r\n        const target = compileExpr(ast.target);\r\n        const key = this.generateComponentKey();\r\n        const blockString = `${id}({target: ${target},slots: {'default': {__render: ${name}.bind(this), __ctx: ${ctxStr}}}}, ${key}, node, ctx, Portal)`;\r\n        if (block) {\r\n            this.insertAnchor(block);\r\n        }\r\n        block = this.createBlock(block, \"multi\", ctx);\r\n        this.insertBlock(blockString, block, { ...ctx, forceNewBlock: false });\r\n        return block.varName;\r\n    }\r\n}\n\n// -----------------------------------------------------------------------------\r\n// Parser\r\n// -----------------------------------------------------------------------------\r\nconst cache = new WeakMap();\r\nfunction parse(xml) {\r\n    if (typeof xml === \"string\") {\r\n        const elem = parseXML(`<t>${xml}</t>`).firstChild;\r\n        return _parse(elem);\r\n    }\r\n    let ast = cache.get(xml);\r\n    if (!ast) {\r\n        // we clone here the xml to prevent modifying it in place\r\n        ast = _parse(xml.cloneNode(true));\r\n        cache.set(xml, ast);\r\n    }\r\n    return ast;\r\n}\r\nfunction _parse(xml) {\r\n    normalizeXML(xml);\r\n    const ctx = { inPreTag: false };\r\n    return parseNode(xml, ctx) || { type: 0 /* Text */, value: \"\" };\r\n}\r\nfunction parseNode(node, ctx) {\r\n    if (!(node instanceof Element)) {\r\n        return parseTextCommentNode(node, ctx);\r\n    }\r\n    return (parseTDebugLog(node, ctx) ||\r\n        parseTForEach(node, ctx) ||\r\n        parseTIf(node, ctx) ||\r\n        parseTPortal(node, ctx) ||\r\n        parseTCall(node, ctx) ||\r\n        parseTCallBlock(node) ||\r\n        parseTEscNode(node, ctx) ||\r\n        parseTOutNode(node, ctx) ||\r\n        parseTKey(node, ctx) ||\r\n        parseTTranslation(node, ctx) ||\r\n        parseTSlot(node, ctx) ||\r\n        parseComponent(node, ctx) ||\r\n        parseDOMNode(node, ctx) ||\r\n        parseTSetNode(node, ctx) ||\r\n        parseTNode(node, ctx));\r\n}\r\n// -----------------------------------------------------------------------------\r\n// <t /> tag\r\n// -----------------------------------------------------------------------------\r\nfunction parseTNode(node, ctx) {\r\n    if (node.tagName !== \"t\") {\r\n        return null;\r\n    }\r\n    return parseChildNodes(node, ctx);\r\n}\r\n// -----------------------------------------------------------------------------\r\n// Text and Comment Nodes\r\n// -----------------------------------------------------------------------------\r\nconst lineBreakRE = /[\\r\\n]/;\r\nfunction parseTextCommentNode(node, ctx) {\r\n    if (node.nodeType === Node.TEXT_NODE) {\r\n        let value = node.textContent || \"\";\r\n        if (!ctx.inPreTag && lineBreakRE.test(value) && !value.trim()) {\r\n            return null;\r\n        }\r\n        return { type: 0 /* Text */, value };\r\n    }\r\n    else if (node.nodeType === Node.COMMENT_NODE) {\r\n        return { type: 1 /* Comment */, value: node.textContent || \"\" };\r\n    }\r\n    return null;\r\n}\r\n// -----------------------------------------------------------------------------\r\n// debugging\r\n// -----------------------------------------------------------------------------\r\nfunction parseTDebugLog(node, ctx) {\r\n    if (node.hasAttribute(\"t-debug\")) {\r\n        node.removeAttribute(\"t-debug\");\r\n        return {\r\n            type: 12 /* TDebug */,\r\n            content: parseNode(node, ctx),\r\n        };\r\n    }\r\n    if (node.hasAttribute(\"t-log\")) {\r\n        const expr = node.getAttribute(\"t-log\");\r\n        node.removeAttribute(\"t-log\");\r\n        return {\r\n            type: 13 /* TLog */,\r\n            expr,\r\n            content: parseNode(node, ctx),\r\n        };\r\n    }\r\n    return null;\r\n}\r\n// -----------------------------------------------------------------------------\r\n// Regular dom node\r\n// -----------------------------------------------------------------------------\r\nconst hasDotAtTheEnd = /\\.[\\w_]+\\s*$/;\r\nconst hasBracketsAtTheEnd = /\\[[^\\[]+\\]\\s*$/;\r\nconst ROOT_SVG_TAGS = new Set([\"svg\", \"g\", \"path\"]);\r\nfunction parseDOMNode(node, ctx) {\r\n    const { tagName } = node;\r\n    const dynamicTag = node.getAttribute(\"t-tag\");\r\n    node.removeAttribute(\"t-tag\");\r\n    if (tagName === \"t\" && !dynamicTag) {\r\n        return null;\r\n    }\r\n    if (tagName.startsWith(\"block-\")) {\r\n        throw new OwlError(`Invalid tag name: '${tagName}'`);\r\n    }\r\n    ctx = Object.assign({}, ctx);\r\n    if (tagName === \"pre\") {\r\n        ctx.inPreTag = true;\r\n    }\r\n    let ns = !ctx.nameSpace && ROOT_SVG_TAGS.has(tagName) ? \"http://www.w3.org/2000/svg\" : null;\r\n    const ref = node.getAttribute(\"t-ref\");\r\n    node.removeAttribute(\"t-ref\");\r\n    const nodeAttrsNames = node.getAttributeNames();\r\n    let attrs = null;\r\n    let on = null;\r\n    let model = null;\r\n    for (let attr of nodeAttrsNames) {\r\n        const value = node.getAttribute(attr);\r\n        if (attr === \"t-on\" || attr === \"t-on-\") {\r\n            throw new OwlError(\"Missing event name with t-on directive\");\r\n        }\r\n        if (attr.startsWith(\"t-on-\")) {\r\n            on = on || {};\r\n            on[attr.slice(5)] = value;\r\n        }\r\n        else if (attr.startsWith(\"t-model\")) {\r\n            if (![\"input\", \"select\", \"textarea\"].includes(tagName)) {\r\n                throw new OwlError(\"The t-model directive only works with <input>, <textarea> and <select>\");\r\n            }\r\n            let baseExpr, expr;\r\n            if (hasDotAtTheEnd.test(value)) {\r\n                const index = value.lastIndexOf(\".\");\r\n                baseExpr = value.slice(0, index);\r\n                expr = `'${value.slice(index + 1)}'`;\r\n            }\r\n            else if (hasBracketsAtTheEnd.test(value)) {\r\n                const index = value.lastIndexOf(\"[\");\r\n                baseExpr = value.slice(0, index);\r\n                expr = value.slice(index + 1, -1);\r\n            }\r\n            else {\r\n                throw new OwlError(`Invalid t-model expression: \"${value}\" (it should be assignable)`);\r\n            }\r\n            const typeAttr = node.getAttribute(\"type\");\r\n            const isInput = tagName === \"input\";\r\n            const isSelect = tagName === \"select\";\r\n            const isCheckboxInput = isInput && typeAttr === \"checkbox\";\r\n            const isRadioInput = isInput && typeAttr === \"radio\";\r\n            const hasTrimMod = attr.includes(\".trim\");\r\n            const hasLazyMod = hasTrimMod || attr.includes(\".lazy\");\r\n            const hasNumberMod = attr.includes(\".number\");\r\n            const eventType = isRadioInput ? \"click\" : isSelect || hasLazyMod ? \"change\" : \"input\";\r\n            model = {\r\n                baseExpr,\r\n                expr,\r\n                targetAttr: isCheckboxInput ? \"checked\" : \"value\",\r\n                specialInitTargetAttr: isRadioInput ? \"checked\" : null,\r\n                eventType,\r\n                hasDynamicChildren: false,\r\n                shouldTrim: hasTrimMod,\r\n                shouldNumberize: hasNumberMod,\r\n            };\r\n            if (isSelect) {\r\n                // don't pollute the original ctx\r\n                ctx = Object.assign({}, ctx);\r\n                ctx.tModelInfo = model;\r\n            }\r\n        }\r\n        else if (attr.startsWith(\"block-\")) {\r\n            throw new OwlError(`Invalid attribute: '${attr}'`);\r\n        }\r\n        else if (attr === \"xmlns\") {\r\n            ns = value;\r\n        }\r\n        else if (attr !== \"t-name\") {\r\n            if (attr.startsWith(\"t-\") && !attr.startsWith(\"t-att\")) {\r\n                throw new OwlError(`Unknown QWeb directive: '${attr}'`);\r\n            }\r\n            const tModel = ctx.tModelInfo;\r\n            if (tModel && [\"t-att-value\", \"t-attf-value\"].includes(attr)) {\r\n                tModel.hasDynamicChildren = true;\r\n            }\r\n            attrs = attrs || {};\r\n            attrs[attr] = value;\r\n        }\r\n    }\r\n    if (ns) {\r\n        ctx.nameSpace = ns;\r\n    }\r\n    const children = parseChildren(node, ctx);\r\n    return {\r\n        type: 2 /* DomNode */,\r\n        tag: tagName,\r\n        dynamicTag,\r\n        attrs,\r\n        on,\r\n        ref,\r\n        content: children,\r\n        model,\r\n        ns,\r\n    };\r\n}\r\n// -----------------------------------------------------------------------------\r\n// t-esc\r\n// -----------------------------------------------------------------------------\r\nfunction parseTEscNode(node, ctx) {\r\n    if (!node.hasAttribute(\"t-esc\")) {\r\n        return null;\r\n    }\r\n    const escValue = node.getAttribute(\"t-esc\");\r\n    node.removeAttribute(\"t-esc\");\r\n    const tesc = {\r\n        type: 4 /* TEsc */,\r\n        expr: escValue,\r\n        defaultValue: node.textContent || \"\",\r\n    };\r\n    let ref = node.getAttribute(\"t-ref\");\r\n    node.removeAttribute(\"t-ref\");\r\n    const ast = parseNode(node, ctx);\r\n    if (!ast) {\r\n        return tesc;\r\n    }\r\n    if (ast.type === 2 /* DomNode */) {\r\n        return {\r\n            ...ast,\r\n            ref,\r\n            content: [tesc],\r\n        };\r\n    }\r\n    return tesc;\r\n}\r\n// -----------------------------------------------------------------------------\r\n// t-out\r\n// -----------------------------------------------------------------------------\r\nfunction parseTOutNode(node, ctx) {\r\n    if (!node.hasAttribute(\"t-out\") && !node.hasAttribute(\"t-raw\")) {\r\n        return null;\r\n    }\r\n    if (node.hasAttribute(\"t-raw\")) {\r\n        console.warn(`t-raw has been deprecated in favor of t-out. If the value to render is not wrapped by the \"markup\" function, it will be escaped`);\r\n    }\r\n    const expr = (node.getAttribute(\"t-out\") || node.getAttribute(\"t-raw\"));\r\n    node.removeAttribute(\"t-out\");\r\n    node.removeAttribute(\"t-raw\");\r\n    const tOut = { type: 8 /* TOut */, expr, body: null };\r\n    const ref = node.getAttribute(\"t-ref\");\r\n    node.removeAttribute(\"t-ref\");\r\n    const ast = parseNode(node, ctx);\r\n    if (!ast) {\r\n        return tOut;\r\n    }\r\n    if (ast.type === 2 /* DomNode */) {\r\n        tOut.body = ast.content.length ? ast.content : null;\r\n        return {\r\n            ...ast,\r\n            ref,\r\n            content: [tOut],\r\n        };\r\n    }\r\n    return tOut;\r\n}\r\n// -----------------------------------------------------------------------------\r\n// t-foreach and t-key\r\n// -----------------------------------------------------------------------------\r\nfunction parseTForEach(node, ctx) {\r\n    if (!node.hasAttribute(\"t-foreach\")) {\r\n        return null;\r\n    }\r\n    const html = node.outerHTML;\r\n    const collection = node.getAttribute(\"t-foreach\");\r\n    node.removeAttribute(\"t-foreach\");\r\n    const elem = node.getAttribute(\"t-as\") || \"\";\r\n    node.removeAttribute(\"t-as\");\r\n    const key = node.getAttribute(\"t-key\");\r\n    if (!key) {\r\n        throw new OwlError(`\"Directive t-foreach should always be used with a t-key!\" (expression: t-foreach=\"${collection}\" t-as=\"${elem}\")`);\r\n    }\r\n    node.removeAttribute(\"t-key\");\r\n    const memo = node.getAttribute(\"t-memo\") || \"\";\r\n    node.removeAttribute(\"t-memo\");\r\n    const body = parseNode(node, ctx);\r\n    if (!body) {\r\n        return null;\r\n    }\r\n    const hasNoTCall = !html.includes(\"t-call\");\r\n    const hasNoFirst = hasNoTCall && !html.includes(`${elem}_first`);\r\n    const hasNoLast = hasNoTCall && !html.includes(`${elem}_last`);\r\n    const hasNoIndex = hasNoTCall && !html.includes(`${elem}_index`);\r\n    const hasNoValue = hasNoTCall && !html.includes(`${elem}_value`);\r\n    return {\r\n        type: 9 /* TForEach */,\r\n        collection,\r\n        elem,\r\n        body,\r\n        memo,\r\n        key,\r\n        hasNoFirst,\r\n        hasNoLast,\r\n        hasNoIndex,\r\n        hasNoValue,\r\n    };\r\n}\r\nfunction parseTKey(node, ctx) {\r\n    if (!node.hasAttribute(\"t-key\")) {\r\n        return null;\r\n    }\r\n    const key = node.getAttribute(\"t-key\");\r\n    node.removeAttribute(\"t-key\");\r\n    const body = parseNode(node, ctx);\r\n    if (!body) {\r\n        return null;\r\n    }\r\n    return { type: 10 /* TKey */, expr: key, content: body };\r\n}\r\n// -----------------------------------------------------------------------------\r\n// t-call\r\n// -----------------------------------------------------------------------------\r\nfunction parseTCall(node, ctx) {\r\n    if (!node.hasAttribute(\"t-call\")) {\r\n        return null;\r\n    }\r\n    const subTemplate = node.getAttribute(\"t-call\");\r\n    const context = node.getAttribute(\"t-call-context\");\r\n    node.removeAttribute(\"t-call\");\r\n    node.removeAttribute(\"t-call-context\");\r\n    if (node.tagName !== \"t\") {\r\n        const ast = parseNode(node, ctx);\r\n        const tcall = { type: 7 /* TCall */, name: subTemplate, body: null, context };\r\n        if (ast && ast.type === 2 /* DomNode */) {\r\n            ast.content = [tcall];\r\n            return ast;\r\n        }\r\n        if (ast && ast.type === 11 /* TComponent */) {\r\n            return {\r\n                ...ast,\r\n                slots: { default: { content: tcall, scope: null, on: null, attrs: null } },\r\n            };\r\n        }\r\n    }\r\n    const body = parseChildren(node, ctx);\r\n    return {\r\n        type: 7 /* TCall */,\r\n        name: subTemplate,\r\n        body: body.length ? body : null,\r\n        context,\r\n    };\r\n}\r\n// -----------------------------------------------------------------------------\r\n// t-call-block\r\n// -----------------------------------------------------------------------------\r\nfunction parseTCallBlock(node, ctx) {\r\n    if (!node.hasAttribute(\"t-call-block\")) {\r\n        return null;\r\n    }\r\n    const name = node.getAttribute(\"t-call-block\");\r\n    return {\r\n        type: 15 /* TCallBlock */,\r\n        name,\r\n    };\r\n}\r\n// -----------------------------------------------------------------------------\r\n// t-if\r\n// -----------------------------------------------------------------------------\r\nfunction parseTIf(node, ctx) {\r\n    if (!node.hasAttribute(\"t-if\")) {\r\n        return null;\r\n    }\r\n    const condition = node.getAttribute(\"t-if\");\r\n    node.removeAttribute(\"t-if\");\r\n    const content = parseNode(node, ctx) || { type: 0 /* Text */, value: \"\" };\r\n    let nextElement = node.nextElementSibling;\r\n    // t-elifs\r\n    const tElifs = [];\r\n    while (nextElement && nextElement.hasAttribute(\"t-elif\")) {\r\n        const condition = nextElement.getAttribute(\"t-elif\");\r\n        nextElement.removeAttribute(\"t-elif\");\r\n        const tElif = parseNode(nextElement, ctx);\r\n        const next = nextElement.nextElementSibling;\r\n        nextElement.remove();\r\n        nextElement = next;\r\n        if (tElif) {\r\n            tElifs.push({ condition, content: tElif });\r\n        }\r\n    }\r\n    // t-else\r\n    let tElse = null;\r\n    if (nextElement && nextElement.hasAttribute(\"t-else\")) {\r\n        nextElement.removeAttribute(\"t-else\");\r\n        tElse = parseNode(nextElement, ctx);\r\n        nextElement.remove();\r\n    }\r\n    return {\r\n        type: 5 /* TIf */,\r\n        condition,\r\n        content,\r\n        tElif: tElifs.length ? tElifs : null,\r\n        tElse,\r\n    };\r\n}\r\n// -----------------------------------------------------------------------------\r\n// t-set directive\r\n// -----------------------------------------------------------------------------\r\nfunction parseTSetNode(node, ctx) {\r\n    if (!node.hasAttribute(\"t-set\")) {\r\n        return null;\r\n    }\r\n    const name = node.getAttribute(\"t-set\");\r\n    const value = node.getAttribute(\"t-value\") || null;\r\n    const defaultValue = node.innerHTML === node.textContent ? node.textContent || null : null;\r\n    let body = null;\r\n    if (node.textContent !== node.innerHTML) {\r\n        body = parseChildren(node, ctx);\r\n    }\r\n    return { type: 6 /* TSet */, name, value, defaultValue, body };\r\n}\r\n// -----------------------------------------------------------------------------\r\n// Components\r\n// -----------------------------------------------------------------------------\r\n// Error messages when trying to use an unsupported directive on a component\r\nconst directiveErrorMap = new Map([\r\n    [\r\n        \"t-ref\",\r\n        \"t-ref is no longer supported on components. Consider exposing only the public part of the component's API through a callback prop.\",\r\n    ],\r\n    [\"t-att\", \"t-att makes no sense on component: props are already treated as expressions\"],\r\n    [\r\n        \"t-attf\",\r\n        \"t-attf is not supported on components: use template strings for string interpolation in props\",\r\n    ],\r\n]);\r\nfunction parseComponent(node, ctx) {\r\n    let name = node.tagName;\r\n    const firstLetter = name[0];\r\n    let isDynamic = node.hasAttribute(\"t-component\");\r\n    if (isDynamic && name !== \"t\") {\r\n        throw new OwlError(`Directive 't-component' can only be used on <t> nodes (used on a <${name}>)`);\r\n    }\r\n    if (!(firstLetter === firstLetter.toUpperCase() || isDynamic)) {\r\n        return null;\r\n    }\r\n    if (isDynamic) {\r\n        name = node.getAttribute(\"t-component\");\r\n        node.removeAttribute(\"t-component\");\r\n    }\r\n    const dynamicProps = node.getAttribute(\"t-props\");\r\n    node.removeAttribute(\"t-props\");\r\n    const defaultSlotScope = node.getAttribute(\"t-slot-scope\");\r\n    node.removeAttribute(\"t-slot-scope\");\r\n    let on = null;\r\n    let props = null;\r\n    for (let name of node.getAttributeNames()) {\r\n        const value = node.getAttribute(name);\r\n        if (name.startsWith(\"t-\")) {\r\n            if (name.startsWith(\"t-on-\")) {\r\n                on = on || {};\r\n                on[name.slice(5)] = value;\r\n            }\r\n            else {\r\n                const message = directiveErrorMap.get(name.split(\"-\").slice(0, 2).join(\"-\"));\r\n                throw new OwlError(message || `unsupported directive on Component: ${name}`);\r\n            }\r\n        }\r\n        else {\r\n            props = props || {};\r\n            props[name] = value;\r\n        }\r\n    }\r\n    let slots = null;\r\n    if (node.hasChildNodes()) {\r\n        const clone = node.cloneNode(true);\r\n        // named slots\r\n        const slotNodes = Array.from(clone.querySelectorAll(\"[t-set-slot]\"));\r\n        for (let slotNode of slotNodes) {\r\n            if (slotNode.tagName !== \"t\") {\r\n                throw new OwlError(`Directive 't-set-slot' can only be used on <t> nodes (used on a <${slotNode.tagName}>)`);\r\n            }\r\n            const name = slotNode.getAttribute(\"t-set-slot\");\r\n            // check if this is defined in a sub component (in which case it should\r\n            // be ignored)\r\n            let el = slotNode.parentElement;\r\n            let isInSubComponent = false;\r\n            while (el && el !== clone) {\r\n                if (el.hasAttribute(\"t-component\") || el.tagName[0] === el.tagName[0].toUpperCase()) {\r\n                    isInSubComponent = true;\r\n                    break;\r\n                }\r\n                el = el.parentElement;\r\n            }\r\n            if (isInSubComponent || !el) {\r\n                continue;\r\n            }\r\n            slotNode.removeAttribute(\"t-set-slot\");\r\n            slotNode.remove();\r\n            const slotAst = parseNode(slotNode, ctx);\r\n            let on = null;\r\n            let attrs = null;\r\n            let scope = null;\r\n            for (let attributeName of slotNode.getAttributeNames()) {\r\n                const value = slotNode.getAttribute(attributeName);\r\n                if (attributeName === \"t-slot-scope\") {\r\n                    scope = value;\r\n                    continue;\r\n                }\r\n                else if (attributeName.startsWith(\"t-on-\")) {\r\n                    on = on || {};\r\n                    on[attributeName.slice(5)] = value;\r\n                }\r\n                else {\r\n                    attrs = attrs || {};\r\n                    attrs[attributeName] = value;\r\n                }\r\n            }\r\n            slots = slots || {};\r\n            slots[name] = { content: slotAst, on, attrs, scope };\r\n        }\r\n        // default slot\r\n        const defaultContent = parseChildNodes(clone, ctx);\r\n        slots = slots || {};\r\n        // t-set-slot=\"default\" has priority over content\r\n        if (defaultContent && !slots.default) {\r\n            slots.default = { content: defaultContent, on, attrs: null, scope: defaultSlotScope };\r\n        }\r\n    }\r\n    return { type: 11 /* TComponent */, name, isDynamic, dynamicProps, props, slots, on };\r\n}\r\n// -----------------------------------------------------------------------------\r\n// Slots\r\n// -----------------------------------------------------------------------------\r\nfunction parseTSlot(node, ctx) {\r\n    if (!node.hasAttribute(\"t-slot\")) {\r\n        return null;\r\n    }\r\n    const name = node.getAttribute(\"t-slot\");\r\n    node.removeAttribute(\"t-slot\");\r\n    let attrs = null;\r\n    let on = null;\r\n    for (let attributeName of node.getAttributeNames()) {\r\n        const value = node.getAttribute(attributeName);\r\n        if (attributeName.startsWith(\"t-on-\")) {\r\n            on = on || {};\r\n            on[attributeName.slice(5)] = value;\r\n        }\r\n        else {\r\n            attrs = attrs || {};\r\n            attrs[attributeName] = value;\r\n        }\r\n    }\r\n    return {\r\n        type: 14 /* TSlot */,\r\n        name,\r\n        attrs,\r\n        on,\r\n        defaultContent: parseChildNodes(node, ctx),\r\n    };\r\n}\r\nfunction parseTTranslation(node, ctx) {\r\n    if (node.getAttribute(\"t-translation\") !== \"off\") {\r\n        return null;\r\n    }\r\n    node.removeAttribute(\"t-translation\");\r\n    return {\r\n        type: 16 /* TTranslation */,\r\n        content: parseNode(node, ctx),\r\n    };\r\n}\r\n// -----------------------------------------------------------------------------\r\n// Portal\r\n// -----------------------------------------------------------------------------\r\nfunction parseTPortal(node, ctx) {\r\n    if (!node.hasAttribute(\"t-portal\")) {\r\n        return null;\r\n    }\r\n    const target = node.getAttribute(\"t-portal\");\r\n    node.removeAttribute(\"t-portal\");\r\n    const content = parseNode(node, ctx);\r\n    if (!content) {\r\n        return {\r\n            type: 0 /* Text */,\r\n            value: \"\",\r\n        };\r\n    }\r\n    return {\r\n        type: 17 /* TPortal */,\r\n        target,\r\n        content,\r\n    };\r\n}\r\n// -----------------------------------------------------------------------------\r\n// helpers\r\n// -----------------------------------------------------------------------------\r\n/**\r\n * Parse all the child nodes of a given node and return a list of ast elements\r\n */\r\nfunction parseChildren(node, ctx) {\r\n    const children = [];\r\n    for (let child of node.childNodes) {\r\n        const childAst = parseNode(child, ctx);\r\n        if (childAst) {\r\n            if (childAst.type === 3 /* Multi */) {\r\n                children.push(...childAst.content);\r\n            }\r\n            else {\r\n                children.push(childAst);\r\n            }\r\n        }\r\n    }\r\n    return children;\r\n}\r\n/**\r\n * Parse all the child nodes of a given node and return an ast if possible.\r\n * In the case there are multiple children, they are wrapped in a astmulti.\r\n */\r\nfunction parseChildNodes(node, ctx) {\r\n    const children = parseChildren(node, ctx);\r\n    switch (children.length) {\r\n        case 0:\r\n            return null;\r\n        case 1:\r\n            return children[0];\r\n        default:\r\n            return { type: 3 /* Multi */, content: children };\r\n    }\r\n}\r\n/**\r\n * Normalizes the content of an Element so that t-if/t-elif/t-else directives\r\n * immediately follow one another (by removing empty text nodes or comments).\r\n * Throws an error when a conditional branching statement is malformed. This\r\n * function modifies the Element in place.\r\n *\r\n * @param el the element containing the tree that should be normalized\r\n */\r\nfunction normalizeTIf(el) {\r\n    let tbranch = el.querySelectorAll(\"[t-elif], [t-else]\");\r\n    for (let i = 0, ilen = tbranch.length; i < ilen; i++) {\r\n        let node = tbranch[i];\r\n        let prevElem = node.previousElementSibling;\r\n        let pattr = (name) => prevElem.getAttribute(name);\r\n        let nattr = (name) => +!!node.getAttribute(name);\r\n        if (prevElem && (pattr(\"t-if\") || pattr(\"t-elif\"))) {\r\n            if (pattr(\"t-foreach\")) {\r\n                throw new OwlError(\"t-if cannot stay at the same level as t-foreach when using t-elif or t-else\");\r\n            }\r\n            if ([\"t-if\", \"t-elif\", \"t-else\"].map(nattr).reduce(function (a, b) {\r\n                return a + b;\r\n            }) > 1) {\r\n                throw new OwlError(\"Only one conditional branching directive is allowed per node\");\r\n            }\r\n            // All text (with only spaces) and comment nodes (nodeType 8) between\r\n            // branch nodes are removed\r\n            let textNode;\r\n            while ((textNode = node.previousSibling) !== prevElem) {\r\n                if (textNode.nodeValue.trim().length && textNode.nodeType !== 8) {\r\n                    throw new OwlError(\"text is not allowed between branching directives\");\r\n                }\r\n                textNode.remove();\r\n            }\r\n        }\r\n        else {\r\n            throw new OwlError(\"t-elif and t-else directives must be preceded by a t-if or t-elif directive\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Normalizes the content of an Element so that t-esc directives on components\r\n * are removed and instead places a <t t-esc=\"\"> as the default slot of the\r\n * component. Also throws if the component already has content. This function\r\n * modifies the Element in place.\r\n *\r\n * @param el the element containing the tree that should be normalized\r\n */\r\nfunction normalizeTEscTOut(el) {\r\n    for (const d of [\"t-esc\", \"t-out\"]) {\r\n        const elements = [...el.querySelectorAll(`[${d}]`)].filter((el) => el.tagName[0] === el.tagName[0].toUpperCase() || el.hasAttribute(\"t-component\"));\r\n        for (const el of elements) {\r\n            if (el.childNodes.length) {\r\n                throw new OwlError(`Cannot have ${d} on a component that already has content`);\r\n            }\r\n            const value = el.getAttribute(d);\r\n            el.removeAttribute(d);\r\n            const t = el.ownerDocument.createElement(\"t\");\r\n            if (value != null) {\r\n                t.setAttribute(d, value);\r\n            }\r\n            el.appendChild(t);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Normalizes the tree inside a given element and do some preliminary validation\r\n * on it. This function modifies the Element in place.\r\n *\r\n * @param el the element containing the tree that should be normalized\r\n */\r\nfunction normalizeXML(el) {\r\n    normalizeTIf(el);\r\n    normalizeTEscTOut(el);\r\n}\n\nfunction compile(template, options = {}) {\r\n    // parsing\r\n    const ast = parse(template);\r\n    // some work\r\n    const hasSafeContext = template instanceof Node\r\n        ? !(template instanceof Element) || template.querySelector(\"[t-set], [t-call]\") === null\r\n        : !template.includes(\"t-set\") && !template.includes(\"t-call\");\r\n    // code generation\r\n    const codeGenerator = new CodeGenerator(ast, { ...options, hasSafeContext });\r\n    const code = codeGenerator.generateCode();\r\n    // template function\r\n    try {\r\n        return new Function(\"app, bdom, helpers\", code);\r\n    }\r\n    catch (originalError) {\r\n        const { name } = options;\r\n        const nameStr = name ? `template \"${name}\"` : \"anonymous template\";\r\n        const err = new OwlError(`Failed to compile ${nameStr}: ${originalError.message}\\n\\ngenerated code:\\nfunction(app, bdom, helpers) {\\n${code}\\n}`);\r\n        err.cause = originalError;\r\n        throw err;\r\n    }\r\n}\n\n// do not modify manually. This file is generated by the release script.\r\nconst version = \"2.3.0\";\n\n// -----------------------------------------------------------------------------\r\n//  Scheduler\r\n// -----------------------------------------------------------------------------\r\nclass Scheduler {\r\n    constructor() {\r\n        this.tasks = new Set();\r\n        this.frame = 0;\r\n        this.delayedRenders = [];\r\n        this.cancelledNodes = new Set();\r\n        this.requestAnimationFrame = Scheduler.requestAnimationFrame;\r\n    }\r\n    addFiber(fiber) {\r\n        this.tasks.add(fiber.root);\r\n    }\r\n    scheduleDestroy(node) {\r\n        this.cancelledNodes.add(node);\r\n        if (this.frame === 0) {\r\n            this.frame = this.requestAnimationFrame(() => this.processTasks());\r\n        }\r\n    }\r\n    /**\r\n     * Process all current tasks. This only applies to the fibers that are ready.\r\n     * Other tasks are left unchanged.\r\n     */\r\n    flush() {\r\n        if (this.delayedRenders.length) {\r\n            let renders = this.delayedRenders;\r\n            this.delayedRenders = [];\r\n            for (let f of renders) {\r\n                if (f.root && f.node.status !== 3 /* DESTROYED */ && f.node.fiber === f) {\r\n                    f.render();\r\n                }\r\n            }\r\n        }\r\n        if (this.frame === 0) {\r\n            this.frame = this.requestAnimationFrame(() => this.processTasks());\r\n        }\r\n    }\r\n    processTasks() {\r\n        this.frame = 0;\r\n        for (let node of this.cancelledNodes) {\r\n            node._destroy();\r\n        }\r\n        this.cancelledNodes.clear();\r\n        for (let task of this.tasks) {\r\n            this.processFiber(task);\r\n        }\r\n        for (let task of this.tasks) {\r\n            if (task.node.status === 3 /* DESTROYED */) {\r\n                this.tasks.delete(task);\r\n            }\r\n        }\r\n    }\r\n    processFiber(fiber) {\r\n        if (fiber.root !== fiber) {\r\n            this.tasks.delete(fiber);\r\n            return;\r\n        }\r\n        const hasError = fibersInError.has(fiber);\r\n        if (hasError && fiber.counter !== 0) {\r\n            this.tasks.delete(fiber);\r\n            return;\r\n        }\r\n        if (fiber.node.status === 3 /* DESTROYED */) {\r\n            this.tasks.delete(fiber);\r\n            return;\r\n        }\r\n        if (fiber.counter === 0) {\r\n            if (!hasError) {\r\n                fiber.complete();\r\n            }\r\n            this.tasks.delete(fiber);\r\n        }\r\n    }\r\n}\r\n// capture the value of requestAnimationFrame as soon as possible, to avoid\r\n// interactions with other code, such as test frameworks that override them\r\nScheduler.requestAnimationFrame = window.requestAnimationFrame.bind(window);\n\nlet hasBeenLogged = false;\r\nconst DEV_MSG = () => {\r\n    const hash = window.owl ? window.owl.__info__.hash : \"master\";\r\n    return `Owl is running in 'dev' mode.\n\nThis is not suitable for production use.\nSee https://github.com/odoo/owl/blob/${hash}/doc/reference/app.md#configuration for more information.`;\r\n};\r\nconst apps = new Set();\r\nwindow.__OWL_DEVTOOLS__ || (window.__OWL_DEVTOOLS__ = { apps, Fiber, RootFiber, toRaw, reactive });\r\nclass App extends TemplateSet {\r\n    constructor(Root, config = {}) {\r\n        super(config);\r\n        this.scheduler = new Scheduler();\r\n        this.root = null;\r\n        this.name = config.name || \"\";\r\n        this.Root = Root;\r\n        apps.add(this);\r\n        if (config.test) {\r\n            this.dev = true;\r\n        }\r\n        this.warnIfNoStaticProps = config.warnIfNoStaticProps || false;\r\n        if (this.dev && !config.test && !hasBeenLogged) {\r\n            console.info(DEV_MSG());\r\n            hasBeenLogged = true;\r\n        }\r\n        const env = config.env || {};\r\n        const descrs = Object.getOwnPropertyDescriptors(env);\r\n        this.env = Object.freeze(Object.create(Object.getPrototypeOf(env), descrs));\r\n        this.props = config.props || {};\r\n    }\r\n    mount(target, options) {\r\n        App.validateTarget(target);\r\n        if (this.dev) {\r\n            validateProps(this.Root, this.props, { __owl__: { app: this } });\r\n        }\r\n        const node = this.makeNode(this.Root, this.props);\r\n        const prom = this.mountNode(node, target, options);\r\n        this.root = node;\r\n        return prom;\r\n    }\r\n    makeNode(Component, props) {\r\n        return new ComponentNode(Component, props, this, null, null);\r\n    }\r\n    mountNode(node, target, options) {\r\n        const promise = new Promise((resolve, reject) => {\r\n            let isResolved = false;\r\n            // manually set a onMounted callback.\r\n            // that way, we are independant from the current node.\r\n            node.mounted.push(() => {\r\n                resolve(node.component);\r\n                isResolved = true;\r\n            });\r\n            // Manually add the last resort error handler on the node\r\n            let handlers = nodeErrorHandlers.get(node);\r\n            if (!handlers) {\r\n                handlers = [];\r\n                nodeErrorHandlers.set(node, handlers);\r\n            }\r\n            handlers.unshift((e) => {\r\n                if (!isResolved) {\r\n                    reject(e);\r\n                }\r\n                throw e;\r\n            });\r\n        });\r\n        node.mountComponent(target, options);\r\n        return promise;\r\n    }\r\n    destroy() {\r\n        if (this.root) {\r\n            this.root.destroy();\r\n            this.scheduler.processTasks();\r\n        }\r\n        apps.delete(this);\r\n    }\r\n    createComponent(name, isStatic, hasSlotsProp, hasDynamicPropList, propList) {\r\n        const isDynamic = !isStatic;\r\n        let arePropsDifferent;\r\n        const hasNoProp = propList.length === 0;\r\n        if (hasSlotsProp) {\r\n            arePropsDifferent = (_1, _2) => true;\r\n        }\r\n        else if (hasDynamicPropList) {\r\n            arePropsDifferent = function (props1, props2) {\r\n                for (let k in props1) {\r\n                    if (props1[k] !== props2[k]) {\r\n                        return true;\r\n                    }\r\n                }\r\n                return Object.keys(props1).length !== Object.keys(props2).length;\r\n            };\r\n        }\r\n        else if (hasNoProp) {\r\n            arePropsDifferent = (_1, _2) => false;\r\n        }\r\n        else {\r\n            arePropsDifferent = function (props1, props2) {\r\n                for (let p of propList) {\r\n                    if (props1[p] !== props2[p]) {\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            };\r\n        }\r\n        const updateAndRender = ComponentNode.prototype.updateAndRender;\r\n        const initiateRender = ComponentNode.prototype.initiateRender;\r\n        return (props, key, ctx, parent, C) => {\r\n            let children = ctx.children;\r\n            let node = children[key];\r\n            if (isDynamic && node && node.component.constructor !== C) {\r\n                node = undefined;\r\n            }\r\n            const parentFiber = ctx.fiber;\r\n            if (node) {\r\n                if (arePropsDifferent(node.props, props) || parentFiber.deep || node.forceNextRender) {\r\n                    node.forceNextRender = false;\r\n                    updateAndRender.call(node, props, parentFiber);\r\n                }\r\n            }\r\n            else {\r\n                // new component\r\n                if (isStatic) {\r\n                    const components = parent.constructor.components;\r\n                    if (!components) {\r\n                        throw new OwlError(`Cannot find the definition of component \"${name}\", missing static components key in parent`);\r\n                    }\r\n                    C = components[name];\r\n                    if (!C) {\r\n                        throw new OwlError(`Cannot find the definition of component \"${name}\"`);\r\n                    }\r\n                    else if (!(C.prototype instanceof Component)) {\r\n                        throw new OwlError(`\"${name}\" is not a Component. It must inherit from the Component class`);\r\n                    }\r\n                }\r\n                node = new ComponentNode(C, props, this, ctx, key);\r\n                children[key] = node;\r\n                initiateRender.call(node, new Fiber(node, parentFiber));\r\n            }\r\n            parentFiber.childrenMap[key] = node;\r\n            return node;\r\n        };\r\n    }\r\n    handleError(...args) {\r\n        return handleError(...args);\r\n    }\r\n}\r\nApp.validateTarget = validateTarget;\r\nApp.apps = apps;\r\nApp.version = version;\r\nasync function mount(C, target, config = {}) {\r\n    return new App(C, config).mount(target, config);\r\n}\n\nconst mainEventHandler = (data, ev, currentTarget) => {\r\n    const { data: _data, modifiers } = filterOutModifiersFromData(data);\r\n    data = _data;\r\n    let stopped = false;\r\n    if (modifiers.length) {\r\n        let selfMode = false;\r\n        const isSelf = ev.target === currentTarget;\r\n        for (const mod of modifiers) {\r\n            switch (mod) {\r\n                case \"self\":\r\n                    selfMode = true;\r\n                    if (isSelf) {\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        return stopped;\r\n                    }\r\n                case \"prevent\":\r\n                    if ((selfMode && isSelf) || !selfMode)\r\n                        ev.preventDefault();\r\n                    continue;\r\n                case \"stop\":\r\n                    if ((selfMode && isSelf) || !selfMode)\r\n                        ev.stopPropagation();\r\n                    stopped = true;\r\n                    continue;\r\n            }\r\n        }\r\n    }\r\n    // If handler is empty, the array slot 0 will also be empty, and data will not have the property 0\r\n    // We check this rather than data[0] being truthy (or typeof function) so that it crashes\r\n    // as expected when there is a handler expression that evaluates to a falsy value\r\n    if (Object.hasOwnProperty.call(data, 0)) {\r\n        const handler = data[0];\r\n        if (typeof handler !== \"function\") {\r\n            throw new OwlError(`Invalid handler (expected a function, received: '${handler}')`);\r\n        }\r\n        let node = data[1] ? data[1].__owl__ : null;\r\n        if (node ? node.status === 1 /* MOUNTED */ : true) {\r\n            handler.call(node ? node.component : null, ev);\r\n        }\r\n    }\r\n    return stopped;\r\n};\n\nfunction status(component) {\r\n    switch (component.__owl__.status) {\r\n        case 0 /* NEW */:\r\n            return \"new\";\r\n        case 2 /* CANCELLED */:\r\n            return \"cancelled\";\r\n        case 1 /* MOUNTED */:\r\n            return \"mounted\";\r\n        case 3 /* DESTROYED */:\r\n            return \"destroyed\";\r\n    }\r\n}\n\n// -----------------------------------------------------------------------------\r\n// useRef\r\n// -----------------------------------------------------------------------------\r\n/**\r\n * The purpose of this hook is to allow components to get a reference to a sub\r\n * html node or component.\r\n */\r\nfunction useRef(name) {\r\n    const node = getCurrent();\r\n    const refs = node.refs;\r\n    return {\r\n        get el() {\r\n            const el = refs[name];\r\n            return inOwnerDocument(el) ? el : null;\r\n        },\r\n    };\r\n}\r\n// -----------------------------------------------------------------------------\r\n// useEnv and useSubEnv\r\n// -----------------------------------------------------------------------------\r\n/**\r\n * This hook is useful as a building block for some customized hooks, that may\r\n * need a reference to the env of the component calling them.\r\n */\r\nfunction useEnv() {\r\n    return getCurrent().component.env;\r\n}\r\nfunction extendEnv(currentEnv, extension) {\r\n    const env = Object.create(currentEnv);\r\n    const descrs = Object.getOwnPropertyDescriptors(extension);\r\n    return Object.freeze(Object.defineProperties(env, descrs));\r\n}\r\n/**\r\n * This hook is a simple way to let components use a sub environment.  Note that\r\n * like for all hooks, it is important that this is only called in the\r\n * constructor method.\r\n */\r\nfunction useSubEnv(envExtension) {\r\n    const node = getCurrent();\r\n    node.component.env = extendEnv(node.component.env, envExtension);\r\n    useChildSubEnv(envExtension);\r\n}\r\nfunction useChildSubEnv(envExtension) {\r\n    const node = getCurrent();\r\n    node.childEnv = extendEnv(node.childEnv, envExtension);\r\n}\r\n/**\r\n * This hook will run a callback when a component is mounted and patched, and\r\n * will run a cleanup function before patching and before unmounting the\r\n * the component.\r\n *\r\n * @template T\r\n * @param {Effect<T>} effect the effect to run on component mount and/or patch\r\n * @param {()=>[...T]} [computeDependencies=()=>[NaN]] a callback to compute\r\n *      dependencies that will decide if the effect needs to be cleaned up and\r\n *      run again. If the dependencies did not change, the effect will not run\r\n *      again. The default value returns an array containing only NaN because\r\n *      NaN !== NaN, which will cause the effect to rerun on every patch.\r\n */\r\nfunction useEffect(effect, computeDependencies = () => [NaN]) {\r\n    let cleanup;\r\n    let dependencies;\r\n    onMounted(() => {\r\n        dependencies = computeDependencies();\r\n        cleanup = effect(...dependencies);\r\n    });\r\n    onPatched(() => {\r\n        const newDeps = computeDependencies();\r\n        const shouldReapply = newDeps.some((val, i) => val !== dependencies[i]);\r\n        if (shouldReapply) {\r\n            dependencies = newDeps;\r\n            if (cleanup) {\r\n                cleanup();\r\n            }\r\n            cleanup = effect(...dependencies);\r\n        }\r\n    });\r\n    onWillUnmount(() => cleanup && cleanup());\r\n}\r\n// -----------------------------------------------------------------------------\r\n// useExternalListener\r\n// -----------------------------------------------------------------------------\r\n/**\r\n * When a component needs to listen to DOM Events on element(s) that are not\r\n * part of his hierarchy, we can use the `useExternalListener` hook.\r\n * It will correctly add and remove the event listener, whenever the\r\n * component is mounted and unmounted.\r\n *\r\n * Example:\r\n *  a menu needs to listen to the click on window to be closed automatically\r\n *\r\n * Usage:\r\n *  in the constructor of the OWL component that needs to be notified,\r\n *  `useExternalListener(window, 'click', this._doSomething);`\r\n * */\r\nfunction useExternalListener(target, eventName, handler, eventParams) {\r\n    const node = getCurrent();\r\n    const boundHandler = handler.bind(node.component);\r\n    onMounted(() => target.addEventListener(eventName, boundHandler, eventParams));\r\n    onWillUnmount(() => target.removeEventListener(eventName, boundHandler, eventParams));\r\n}\n\nconfig.shouldNormalizeDom = false;\r\nconfig.mainEventHandler = mainEventHandler;\r\nconst blockDom = {\r\n    config,\r\n    // bdom entry points\r\n    mount: mount$1,\r\n    patch,\r\n    remove,\r\n    // bdom block types\r\n    list,\r\n    multi,\r\n    text,\r\n    toggler,\r\n    createBlock,\r\n    html,\r\n    comment,\r\n};\r\nconst __info__ = {\r\n    version: App.version,\r\n};\n\nTemplateSet.prototype._compileTemplate = function _compileTemplate(name, template) {\r\n    return compile(template, {\r\n        name,\r\n        dev: this.dev,\r\n        translateFn: this.translateFn,\r\n        translatableAttributes: this.translatableAttributes,\r\n    });\r\n};\n\nexport { App, Component, EventBus, OwlError, __info__, batched, blockDom, loadFile, markRaw, markup, mount, onError, onMounted, onPatched, onRendered, onWillDestroy, onWillPatch, onWillRender, onWillStart, onWillUnmount, onWillUpdateProps, reactive, status, toRaw, useChildSubEnv, useComponent, useEffect, useEnv, useExternalListener, useRef, useState, useSubEnv, validate, validateType, whenReady, xml };\n\n\n__info__.date = '2024-07-25T13:13:44.371Z';\n__info__.hash = '0cde4b8';\n__info__.url = 'https://github.com/odoo/owl';\n", "import { Component, xml } from \"@odoo/owl\";\n\nexport class Layout extends Component {\n  static template = xml`\n    <div class=\"h-100 d-flex flex-column\">\n      <div class=\"bg-primary text-white d-flex align-center space-between\" style=\"height:45px;\">\n        <t t-slot=\"navbar\"/>\n      </div>\n      <div class=\"overflow-y-auto\">\n        <t t-slot=\"default\"/>\n      </div>\n    </div>`;\n}\n", "import { Component, xml, useState } from \"@odoo/owl\";\nimport { ENEMIES, ENEMIES_MAP } from \"../data\";\nimport { Layout } from \"../shared/layout\";\n\nexport class AddEnemyScreen extends Component {\n  static template = xml`\n    <Layout>\n      <t t-set=\"navbar\">\n        <span class=\"p-2\" t-on-click=\"() => props.game.popScreen()\">Back</span>\n      </t>\n      <h2 class=\"p-2\">Add an Enemy</h2>\n      <div class=\"d-flex m-2 align-center\">\n        <div class=\"width-50px text-right\">Type </div>\n        <select class=\" mx-2 flex-grow\" t-model=\"state.type\">\n          <option value=\"\">Select a type</option>\n          <t t-foreach=\"enemies\" t-as=\"enemy\" t-key=\"enemy.id\">\n            <option t-att-value=\"enemy.id\"><t t-esc=\"enemy.name\"/><t t-if=\"enemy.boss\"> (BOSS)</t></option>\n          </t>\n        </select>\n      </div>\n      <div class=\"\" t-if=\"!isBoss()\">\n        <div class=\"d-flex m-2 align-center\">\n          <div class=\"width-50px text-right\">Id </div>\n          <input class=\"mx-2 width-50px\" type=\"number\" t-model.number=\"state.nbr\"/>\n        </div>\n        <div class=\"d-flex m-2 align-center\" >\n          <div class=\"width-50px text-right\">Elite </div>\n          <div class=\"width-50px\"><input type=\"checkbox\" t-model=\"state.elite\"/>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex flex-end\">\n        <div class=\"button p-2 m-1\" t-on-click=\"create\" t-att-class=\"{disabled: !state.type}\">\n          Add Enemy\n        </div>\n      </div>\n    </Layout>`;\n  static components = { Layout };\n\n  setup() {\n    this.state = useState({\n      type: \"\",\n      nbr: 0,\n      elite: false,\n    });\n    this.enemies = ENEMIES;\n  }\n\n  create() {\n    this.props.game.addEnemy(this.state.type, this.state.nbr, this.state.elite);\n    this.props.game.popScreen();\n  }\n\n  isBoss() {\n    if (!this.state.type) {\n      return false;\n    }\n    return !!ENEMIES_MAP[this.state.type].boss;\n  }\n}\n", "import { Component, useState, xml } from \"@odoo/owl\";\nimport { MAX_CARD_MAP, MAX_HP_MAP } from \"../data\";\nimport { Layout } from \"../shared/layout\";\n\nexport class CharacterEditor extends Component {\n  static template = xml`\n    <Layout>\n      <t t-set-slot=\"navbar\">\n        <span class=\"p-2\" t-on-click=\"() => props.game.popScreen()\">Back</span>\n      </t>\n      <h2 class=\"p-2\"><t t-if=\"activeHero\">Edit</t><t t-else=\"\">Create</t> your Hero</h2>\n      <div class=\"d-flex align-center mx-2 my-3\">\n        <div class=\"width-50px text-right\">Name </div>\n        <input class=\"mx-2 flex-grow\" t-model=\"state.name\" placeholder=\"Character name\"/>\n      </div>\n      <div class=\"d-flex align-center mx-2 my-3\">\n        <div class=\"width-50px text-right\">Class </div>\n        <select class=\"mx-2 flex-grow\" t-model=\"state.class\">\n          <option value=\"\">Select a class</option>\n          <option value=\"void_warden\">Gardienne du N\u00E9ant</option>\n          <option value=\"red_guard\">Garde Rouge</option>\n        </select>\n      </div>\n      <div class=\"d-flex mx-2 my-3 space-between\">\n        <div class=\"d-flex align-center\">\n          <div class=\"width-50px text-right\">Level </div>\n          <select class=\"mx-2\" t-model.number=\"state.level\">\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n            <option value=\"5\">5</option>\n            <option value=\"6\">6</option>\n            <option value=\"7\">7</option>\n            <option value=\"8\">8</option>\n            <option value=\"9\">9</option>\n          </select>\n        </div>\n        <div class=\"d-flex align-center\">\n          <div class=\"width-50px text-right\">XP </div>\n          <input class=\"mx-2 width-50px\" type=\"number\" t-model.number=\"state.xp\"/>\n        </div>\n        <div class=\"d-flex align-center\">\n          <div class=\"width-50px text-right\">Gold </div>\n          <input  class=\"mx-2 width-50px\" type=\"number\" t-model.number=\"state.gold\"/>\n        </div>\n      </div>\n      <div class=\"d-flex flex-end p-2\">\n        <div class=\"button p-2 m-2\" t-on-click=\"create\" t-att-class=\"{disabled: isDisabled}\">\n          <t t-if=\"activeHero\">Update</t><t t-else=\"\">Add</t> Hero\n        </div>\n      </div>\n    </Layout>`;\n  static components = { Layout };\n\n  setup() {\n    this.activeHero = this.props.game.state;\n    this.state = useState({\n      name: this.activeHero ? this.activeHero.name : \"\",\n      class: this.activeHero ? this.activeHero.class : \"\",\n      level: this.activeHero ? this.activeHero.level : 1,\n      gold: this.activeHero ? this.activeHero.gold : 0,\n      xp: this.activeHero ? this.activeHero.xp : 0,\n    });\n  }\n\n  get isDisabled() {\n    return !(this.state.name && this.state.class);\n  }\n\n  create() {\n    const maxHp = MAX_HP_MAP[this.state.class][this.state.level - 1];\n    const hero = {\n      name: this.state.name,\n      class: this.state.class,\n      level: this.state.level,\n      hp: maxHp,\n      maxHp: maxHp,\n      xp: this.state.xp || 0,\n      maxCard: MAX_CARD_MAP[this.state.class],\n      gold: this.state.gold || 0,\n    };\n    if (this.activeHero) {\n      Object.assign(this.activeHero, hero);\n    } else {\n      this.props.game.addHero({\n        ...hero,\n        status: {\n          poisoned: false,\n          wound: false,\n          confusion: false,\n          immobilisation: false,\n          stunned: false,\n          disarmed: false,\n          renforced: false,\n        },\n      });\n    }\n    this.props.game.popScreen();\n  }\n}\n", "import { Component, xml } from \"@odoo/owl\";\nimport { Layout } from \"../shared/layout\";\n\nexport class ConfigScreen extends Component {\n  static template = xml`\n    <Layout>\n      <t t-set-slot=\"navbar\">\n        <span class=\"p-2\" t-on-click=\"() => props.game.popScreen()\">Back</span>\n      </t>\n      <div>\n        <h2 class=\"p-2\">Settings</h2>\n        <div class=\"mx-2\">\n          Scenario\n          <select class=\"bg-white\" t-model.number=\"props.game.scenarioLevel\">\n            <option value=\"1\">Level 1</option>\n            <option value=\"2\">Level 2</option>\n            <option value=\"3\">Level 3</option>\n            <option value=\"4\">Level 4</option>\n            <option value=\"5\">Level 5</option>\n            <option value=\"6\">Level 6</option>\n            <option value=\"7\">Level 7</option>\n          </select>\n        </div>\n        <h2 class=\"p-2\">Features</h2>\n        <t t-set=\"config\" t-value=\"props.game.config\"/>\n        <div class=\"d-grid align-center\" style=\"grid-template-columns:50px 1fr;row-gap:10px\">\n          <input type=\"checkbox\" t-model=\"config.elements\" id=\"track_element\"/>\n          <label for=\"track_element\">Element Tracker</label>\n          <input type=\"checkbox\" t-model=\"config.turnTracker\" id=\"track_turns\"/>\n          <label for=\"track_turns\">Turn Tracker</label>\n          <input type=\"checkbox\" t-model=\"config.battleGoals\" id=\"track_battlegoals\"/>\n          <label for=\"track_battlegoals\">Battle Goals</label>\n          <input type=\"checkbox\" t-model=\"config.attackModifiers\" id=\"enemy_attack_modifiers\"/>\n          <label for=\"enemy_attack_modifiers\">Enemy Attack Modifiers</label>\n          <input type=\"checkbox\" t-model=\"config.enemyActions\" id=\"enemy_actions\"/>\n          <label for=\"enemy_actions\">Enemy Actions</label>\n        </div>\n        <hr/>\n        <h2 class=\"p-2 my-2\">Data</h2>\n        <div class=\"d-flex flex-column align-center\">\n            <div class=\"button p-2 mx-3 my-1 text-center\" style=\"width:200px;\" t-on-click=\"save\">\n                Save to local storage\n            </div>\n            <div class=\"button p-2 mx-3 my-1 text-center\" style=\"width:200px;\" t-on-click=\"restore\">\n                Restore from local storage\n            </div>\n        </div>\n\n      </div>\n    </Layout>`;\n  static components = { Layout };\n\n  save() {\n    this.props.game.save();\n    this.props.game.popScreen();\n    alert(\"Game saved!\");\n  }\n\n  restore() {\n    this.props.game.restore();\n    this.props.game.popScreen();\n  }\n}\n", "import { Component, xml } from \"@odoo/owl\";\n\nexport class ControlPanel extends Component {\n  static template = xml`\n        <div class=\"bg-white d-flex align-center border-bottom-gray space-between\" style=\"height:50px;\">\n          <t t-slot=\"default\"/>\n        </div>`;\n}\n", "import { Component, xml } from \"@odoo/owl\";\n\nexport function statusString(statusObj) {\n  const keys = [];\n  for (let k in statusObj) {\n    if (statusObj[k]) {\n      keys.push(k);\n    }\n  }\n  if (!keys.length) {\n    return \"\";\n  }\n  const mapping = {\n    poisoned: \"poison\",\n    wound: \"blessure\",\n    confusion: \"confusion\",\n    immobilisation: \"immobilisation\",\n    stunned: \"\u00E9tourdissement\",\n    renforced: \"renforcement\",\n    disarmed: \"d\u00E9sarm\u00E9\",\n  };\n\n  return keys.map((k) => mapping[k]).join(\", \");\n}\n\nexport class StatusEditor extends Component {\n  static template = xml`\n        <t t-set=\"status\" t-value=\"props.status\"/>\n        <div \n          class=\"border-radius-2 text-smallcaps text-center p-1 \" \n          t-att-class=\"{'bg-darker text-bold': status.poisoned}\"\n          t-on-click=\"() => status.poisoned = !status.poisoned\"\n        >\n          poison\n        </div>\n        <div\n          class=\"border-radius-2 text-smallcaps text-center p-1 \"\n          t-att-class=\"{'bg-darker text-bold': status.wound}\"\n          t-on-click=\"() => status.wound = !status.wound\"\n        >\n          blessure\n        </div>\n        <div\n          class=\"border-radius-2 text-smallcaps text-center p-1 \"\n          t-att-class=\"{'bg-darker text-bold': status.confusion}\"\n          t-on-click=\"() => this.toggleStatus('confusion')\"\n        >\n          confusion\n        </div>\n        <div\n          class=\"border-radius-2 text-smallcaps text-center p-1 \"\n          t-att-class=\"{'bg-darker text-bold': status.immobilisation}\"\n          t-on-click=\"() => this.toggleStatus('immobilisation')\"\n        >\n          immobilisation\n        </div>\n        <div\n          class=\"border-radius-2 text-smallcaps text-center p-1 \"\n          t-att-class=\"{'bg-darker text-bold': status.stunned}\"\n          t-on-click=\"() => this.toggleStatus('stunned')\"\n        >\n          \u00E9tourdissement\n        </div>\n        <div\n          class=\"border-radius-2 text-smallcaps text-center p-1 \"\n          t-att-class=\"{'bg-darker text-bold': status.disarmed}\"\n          t-on-click=\"() => this.toggleStatus('disarmed')\"\n        >\n          d\u00E9sarmement\n        </div>\n        <div\n          class=\"border-radius-2 text-smallcaps text-center p-1 \"\n          t-att-class=\"{'bg-darker text-bold': status.renforced}\"\n          t-on-click=\"() => this.toggleStatus('renforced')\"\n        >\n          renforcement\n        </div>`;\n\n  toggleStatus(effect) {\n    if (this.props.status[effect]) {\n      this.props.status[effect] = 0;\n    } else {\n      this.props.status[effect] = this.props.isActive ? 2 : 1;\n    }\n  }\n}\n", "import { Component, xml } from \"@odoo/owl\";\n\nexport class Counter extends Component {\n  static template = xml`\n        <div class=\"d-flex align-center p-1\">\n          <span class=\"button m-1 py-2 px-3\" t-on-click=\"props.dec\">-</span>\n          <t t-slot=\"default\"/>\n          <span class=\"button m-1 py-2 px-3\" t-on-click=\"props.inc\">+</span>\n        </div>`;\n}\n", "export const CARD = \"border-gray border-radius-4 m-1\";\n", "import { Component, xml, useState } from \"@odoo/owl\";\nimport { StatusEditor, statusString } from \"./status_editor\";\nimport { Counter } from \"./counter\";\nimport { CLASS_NAME } from \"../data\";\nimport { CARD } from \"./style\";\n\nexport class CharacterCard extends Component {\n  static template = xml`\n        <div class=\"${CARD} bg-lightgreen\" t-on-click=\"toggle\">\n        <div class=\"d-flex space-between px-2 py-1\">\n            <span class=\"text-bold\"><t t-esc=\"props.hero.name\"/></span>\n            <span class=\"\"><t t-esc=\"heroClass\"/> (level <t t-esc=\"props.hero.level\"/>)</span>\n          </div>\n          <div class=\"d-flex space-between px-2 py-1\">\n            <span t-att-class=\"{'text-red': props.hero.hp lt 1}\">HP: <span class=\"text-bold\" t-esc=\"props.hero.hp\"/> / <span class=\"text-bold\" t-esc=\"props.hero.maxHp\"/></span>\n            <span>XP: <span class=\"text-bold\" t-esc=\"props.hero.xp\"/></span>\n            <span>Gold: <span class=\"text-bold\" t-esc=\"props.hero.gold\"/></span>\n          </div>\n          <div class=\"d-flex space-between px-2 py-1\" t-if=\"statuses\">\n            <span>Status: <span class=\"text-bold\" t-esc=\"statuses\"/> </span>\n          </div>\n          <div t-if=\"state.isOpen\" t-on-click.stop=\"\" class=\"p-1  border-top-gray d-grid\" style=\"grid-template-columns: repeat(3, minmax(0, 1fr));\">\n            <Counter dec=\"() => props.hero.hp--\" inc=\"() => props.hero.hp++\">HP</Counter>\n            <Counter dec=\"() => props.hero.xp--\" inc=\"() => props.hero.xp++\">XP</Counter>\n            <Counter dec=\"() => props.hero.gold--\" inc=\"() => props.hero.gold++\">Gold</Counter>\n            <StatusEditor status=\"props.hero.status\" isActive=\"props.hero.id === props.game.activeEntity\" />\n          </div>\n        </div>`;\n  static components = { Counter, StatusEditor };\n\n  setup() {\n    this.state = useState({\n      isOpen: false,\n    });\n  }\n\n  get heroClass() {\n    return CLASS_NAME[this.props.hero.class];\n  }\n\n  toggle() {\n    this.state.isOpen = !this.state.isOpen;\n  }\n\n  get statuses() {\n    if (this.props.hero.hp <= 0) {\n      return \"\";\n    }\n    return statusString(this.props.hero.status);\n  }\n}\n", "import { Component, useState, xml } from \"@odoo/owl\";\nimport { ControlPanel } from \"../shared/control_panel\";\nimport { CharacterCard } from \"../shared/character_card\";\nimport { CARD } from \"../shared/style\";\nimport { BATTLE_GOALS, ENEMIES_MAP, MONSTER_MODIFIERS_DECK } from \"../data\";\nimport { shuffleArray } from \"../utils\";\nimport { StatusEditor, statusString } from \"../shared/status_editor\";\nimport { Counter } from \"../shared/counter\";\nimport { Layout } from \"../shared/layout\";\n\n// -----------------------------------------------------------------------------\n// MARK: EnemyAttackModifier\n// -----------------------------------------------------------------------------\nclass EnemyAttackModifiers extends Component {\n  static template = xml`\n        <div class=\"${CARD} bg-white\">\n          <div class=\"bg-gray p-1 d-flex space-between\"  t-on-click=\"toggle\">\n            <span>Enemy Attack Modifiers (<t t-esc=\"mods.deck.length\"/> cards)</span>\n          </div>\n          <div class=\"d-grid\" style=\"grid-template-columns: 90px 1fr 95px;\" t-if=\"state.open\">\n            <div class=\"d-flex flex-column\">\n              <div class=\"button mb-0\" t-on-click=\"() => this.dealCard(1)\">1 Card</div>\n              <div class=\"button\" t-on-click=\"() => this.dealCard(2)\">2 Cards</div>\n            </div>\n            <div class=\"d-flex py-1 flex-center\">\n              <!-- sadf -->\n              <t t-foreach=\"currentModifiers()\" t-as=\"mod\" t-key=\"mod.id\">\n                <div class=\"border-gray border-radius-4 p-2 mx-1 d-flex align-center flex-center\" t-attf-style=\"width:35px;position:relative;background-color:{{mod.color || 'white'}};\">\n                  <t t-if=\"mod.recycled\">\n                    <span class=\"text-bold\" style=\"position:absolute;bottom:0;right:0\">\u2672</span>\n                  </t>\n                  <t t-foreach=\"mod.effects\" t-as=\"effect\" t-key=\"effect_index\">\n                    <div class=\"text-bold text-larger\"><t t-esc=\"effect\"/></div>\n                  </t>\n                </div>\n              </t>\n            </div>\n            <div>\n              <div class=\"button mb-0\" t-on-click=\"addCurse\">+ Curse</div>\n              <div class=\"button\" t-on-click=\"addBlessing\">+ Blessing</div>\n            </div>\n          </div>\n        </div>`;\n\n  setup() {\n    this.mods = this.props.game.enemyModifiers;\n    this.state = useState({\n      open: true,\n    });\n  }\n\n  toggle() {\n    this.state.open = !this.state.open;\n  }\n\n  addCurse() {\n    this.props.game.addCurse();\n  }\n  addBlessing() {\n    this.props.game.addBlessing();\n  }\n\n  dealCard(n) {\n    this.mods.visible = n;\n    if (this.mods.deck.length < n) {\n      while (this.mods.discardPile.length) {\n        this.mods.deck.push(this.mods.discardPile.pop());\n      }\n    }\n    shuffleArray(this.mods.deck);\n    for (let i = 0; i < n; i++) {\n      this.mods.discardPile.unshift(this.mods.deck.pop());\n    }\n  }\n\n  currentModifiers() {\n    const n = this.mods.visible;\n    const ids = this.mods.discardPile.slice(0, n);\n    const cards = ids.map((id) => {\n      if (typeof id === \"string\") {\n        if (id.startsWith(\"curse\")) {\n          return {\n            id,\n            effects: [\" Cx0\"],\n            recycled: false,\n            color: \"#ffffd9\",\n          };\n        }\n        if (id.startsWith(\"blessing\")) {\n          return {\n            id,\n            effects: [\" Bx2\"],\n            recycled: false,\n            color: \"#ffc7ff\",\n          };\n        }\n      }\n      return MONSTER_MODIFIERS_DECK.find((m) => m.id === id);\n    });\n    console.log(cards);\n    return cards;\n  }\n}\n\n// -----------------------------------------------------------------------------\n// MARK: BattleGoalTracker\n// -----------------------------------------------------------------------------\nclass BattleGoal extends Component {\n  static template = xml`\n          <div class=\"mx-3 my-2 p-1 border-gray border-radius-4\" t-on-click=\"onClick\">\n            <div class=\"text-bold\"><t t-esc=\"goal.title\"/></div>\n            <div><t t-esc=\"goal.description\"/></div>\n          </div>`;\n\n  get goal() {\n    const goal = BATTLE_GOALS.find((g) => g.id === this.props.id);\n    return goal;\n  }\n\n  onClick() {\n    if (this.props.onClick) {\n      this.props.onClick();\n    }\n  }\n}\n\nclass BattleGoalTracker extends Component {\n  static template = xml`\n        <div class=\"${CARD} bg-white\">\n          <div class=\"d-flex space-between bg-gray p-1 align-center\">\n            <span>Battle Goals</span>\n            <span class=\"text-bold text-primary text-larger\" t-on-click=\"close\">\u00D7</span>\n          </div>\n          <div class=\"d-flex\">\n            <t t-foreach=\"props.game.heroes\" t-as=\"hero\" t-key=\"hero.id\">\n                  <div class=\"button\" t-on-click=\"() => this.toggleHero(hero)\" t-att-class=\"{'text-bold': state.hero and state.hero.id === hero.id}\">\n                    <t t-esc=\"hero.name\"/>\n                    <t t-if=\"props.game.battleGoals[hero.id]\"><span class=\"ms-1\">\u2713</span></t>\n                  </div>\n            </t>\n          </div>\n          <div t-if=\"state.hero\">\n                <t t-if=\"props.game.battleGoals[state.hero.id]\">\n                  <BattleGoal id=\"props.game.battleGoals[state.hero.id]\"/>\n                </t>\n                <t t-else=\"\">\n                  <t t-set=\"i\" t-value=\"getHeroIndex(state.hero.id)\"/>\n                  <BattleGoal id=\"goals[2*i]\" onClick=\"() => this.selectGoal(2*i)\"/>\n                  <BattleGoal id=\"goals[2*i+1]\" onClick=\"() => this.selectGoal(2*i+1)\"/>\n                </t>\n            <div>\n            </div>\n          </div>\n        </div>`;\n  static components = { BattleGoal };\n\n  setup() {\n    /** @type {{ hero: boolean | object }} */\n    this.state = useState({\n      hero: false,\n    });\n    this.goals = shuffleArray(BATTLE_GOALS.map((g) => g.id));\n  }\n\n  getHeroIndex(heroId) {\n    return this.props.game.heroes.findIndex((h) => h.id === heroId);\n  }\n\n  toggleHero(hero) {\n    if (this.state.hero === hero) {\n      this.state.hero = false;\n    } else {\n      this.state.hero = hero;\n    }\n  }\n\n  selectGoal(goalIndex) {\n    const heroId = this.state.hero.id;\n    this.props.game.battleGoals[heroId] = this.goals[goalIndex];\n    this.state.hero = false;\n  }\n\n  close() {\n    this.props.game.config.battleGoals = false;\n  }\n}\n\n// -----------------------------------------------------------------------------\n// MARK: Turn Tracker\n// -----------------------------------------------------------------------------\nclass TurnTracker extends Component {\n  static template = xml`\n        <div class=\"${CARD} bg-white\">\n          <div class=\"bg-gray p-1 d-flex space-between align-center\" t-on-click=\"toggle\">\n            <span t-if=\"game.activeEntity\">Current turn: <t t-esc=\"activeEntityName()\"/></span>\n            <span t-else=\"\">Turn Tracker</span>\n          </div>\n          <div class=\"p-1\" t-if=\"state.open\">\n            <div t-if=\"game.round === 1\">Select each hero/monster when its turn starts</div>\n            <div class=\"d-flex align-center flex-wrap\">\n              <t t-foreach=\"game.heroes\" t-as=\"hero\" t-key=\"hero.id\">\n                <t t-if=\"game.turnTracker[hero.id]\">\n                  <div class=\"button disabled\" t-att-class=\"{'text-bold': game.activeEntity===hero.id}\"><t t-esc=\"hero.name\"/></div>\n                </t>\n                <div t-else=\"\" class=\"button\" t-on-click=\"() => this.startTurn(hero.id)\">\n                  <t t-esc=\"hero.name\"/>\n                </div>\n              </t>\n              <t t-foreach=\"enemies()\" t-as=\"type\" t-key=\"type\">\n                <t t-set=\"initiative\" t-value=\"enemyInitiative(type)\"/>\n                <t t-if=\"game.turnTracker[type]\">\n                  <div class=\"button disabled\"  t-att-class=\"{'text-bold': game.activeEntity===type}\">\n                    <t t-if=\"initiative\">[<t t-esc=\"initiative\"/>] </t>\n                    <t t-esc=\"enemyName(type)\"/>\n                  </div>\n                </t>\n                <div t-else=\"\" class=\"button\" t-on-click=\"() => this.startTurn(type)\">\n                  <t t-if=\"initiative\">[<t t-esc=\"initiative\"/>] </t>\n                  <t t-esc=\"enemyName(type)\"/>\n                </div>\n              </t>\n            </div>\n          </div>\n        </div>\n      `;\n  setup() {\n    this.state = useState({ open: true });\n    this.game = this.props.game;\n  }\n\n  toggle() {\n    this.state.open = !this.state.open;\n  }\n\n  startTurn(entity) {\n    this.game.startTurn(entity);\n  }\n\n  enemyInitiative(type) {\n    return this.game.monsterActions[type].initiative;\n  }\n\n  enemyName(type) {\n    return ENEMIES_MAP[type].name;\n  }\n\n  activeEntityName() {\n    const entity = this.game.activeEntity;\n    if (typeof entity === \"number\") {\n      // hero\n      const hero = this.game.heroes.find((hero) => hero.id === entity);\n      return hero.name;\n    } else {\n      // enemy\n      return ENEMIES_MAP[entity].name;\n    }\n  }\n  enemies() {\n    const types = new Set();\n    for (let enemy of this.game.enemies) {\n      types.add(enemy.type);\n    }\n    return [...types];\n  }\n}\n\n// -----------------------------------------------------------------------------\n// MARK: Element Tracker\n// -----------------------------------------------------------------------------\nclass ElementTracker extends Component {\n  static template = xml`\n        <div class=\"${CARD} bg-white p-1\" style=\"display:grid;grid-template-columns:1fr 1fr 1fr;\">\n          <div class=\"element-card\" t-att-class=\"{'text-bold': game.fire > 1, 'text-gray': !game.fire}\" t-on-click=\"() => this.updateElement('fire')\">\n            Feu <t t-if=\"game.fire\" t-esc=\"game.fire\"/>\n          </div>\n          <div class=\"element-card\" t-att-class=\"{'text-bold': game.ice > 1, 'text-gray': !game.ice}\" t-on-click=\"() => this.updateElement('ice')\">\n            Glace <t t-if=\"game.ice\" t-esc=\"game.ice\"/>\n          </div>\n          <div class=\"element-card\" t-att-class=\"{'text-bold': game.air > 1, 'text-gray': !game.air}\" t-on-click=\"() => this.updateElement('air')\">\n            Air <t t-if=\"game.air\" t-esc=\"game.air\"/>\n          </div>\n          <div class=\"element-card\" t-att-class=\"{'text-bold': game.earth > 1, 'text-gray': !game.earth}\" t-on-click=\"() => this.updateElement('earth')\">\n            Terre <t t-if=\"game.earth\" t-esc=\"game.earth\"/>\n          </div>\n          <div class=\"element-card\" t-att-class=\"{'text-bold': game.light > 1, 'text-gray': !game.light}\" t-on-click=\"() => this.updateElement('light')\">\n            Lumi\u00E8re <t t-if=\"game.light\" t-esc=\"game.light\"/>\n          </div>\n          <div class=\"element-card\" t-att-class=\"{'text-bold': game.darkness > 1, 'text-gray': !game.darkness}\" t-on-click=\"() => this.updateElement('darkness')\">\n            Obscurit\u00E9 <t t-if=\"game.darkness\" t-esc=\"game.darkness\"/>\n          </div>\n        </div>\n    `;\n\n  setup() {\n    this.game = this.props.game;\n  }\n\n  updateElement(elem) {\n    this.game[elem] = this.game[elem] - 1;\n    if (this.game[elem] < 0) {\n      this.game[elem] = 2;\n    }\n  }\n}\n\n// -----------------------------------------------------------------------------\n// MARK: EnemyCard\n// -----------------------------------------------------------------------------\nclass EnemyCard extends Component {\n  static template = xml`\n        <div class=\"${CARD} bg-lightred py-1\" t-on-click=\"toggle\">\n          <div class=\"d-flex space-between px-2 align-center\">\n            <span class=\"text-bold\">\n              <span t-if=\"props.enemy.elite\" style=\"font-variant: smallcaps;\">Elite </span>\n              <t t-esc=\"props.enemy.name\"/>\n              <t t-if=\"props.enemy.boss\"> [BOSS]</t>\n              <t t-if=\"!props.enemy.boss and props.enemy.nbr\"> [<t t-esc=\"props.enemy.nbr\"/>]</t>\n            </span>\n            <span>Move: <span class=\"text-bold\" t-esc=\"props.enemy.move\"/></span>\n          </div>\n          <div class=\"d-flex space-between px-2  align-center\">\n            <span t-att-class=\"{'text-red': props.enemy.hp lt 1}\">\n              HP: <span class=\"text-bold\" t-esc=\"props.enemy.hp\"/> / <span class=\"text-bold\" t-esc=\"props.enemy.maxHp\"/>\n            </span>\n            <span>Attack: <span class=\"text-bold\" t-esc=\"props.enemy.attack\"/></span>\n          </div>\n          <div class=\"d-flex space-between px-2 \" t-if=\"statuses\">\n            <span>Status: <span class=\"text-bold\" t-esc=\"statuses\"/> </span>\n          </div>\n          <div class=\"d-flex px-2\" t-if=\"props.enemy.modifiers\">\n            <span class=\"me-1\">Modificateurs: </span> <span class=\"text-italic\"><t t-esc=\"props.enemy.modifiers\"/></span>\n          </div>\n          <div class=\"d-flex px-2 \" t-if=\"props.enemy.immunities\">\n            <span>Immunit\u00E9s: <span class=\"text-italic\" t-esc=\"props.enemy.immunities\"/></span>\n          </div>\n          <t t-if=\"props.enemy.boss\">\n            <div class=\"px-2 border-top-gray mt-1 pt-1 \">\n              <span class=\"text-bold\">Sp\u00E9cial 1</span> <span class=\"text-italic\"><t t-esc=\"props.enemy.special1\"/></span>\n            </div>\n            <div class=\"px-2\" t-if=\"props.enemy.boss\">\n              <span class=\"text-bold\">Sp\u00E9cial 2</span> <span class=\"text-italic\"><t t-esc=\"props.enemy.special2\"/></span>\n            </div>          \n          </t>\n          <div t-if=\"state.isOpen\" t-on-click.stop=\"\" class=\"p-1  border-top-gray\">\n            <div class=\"d-grid\" style=\"grid-template-columns: repeat(3, minmax(0, 1fr));\">\n              <StatusEditor status=\"props.enemy.status\"  isActive=\"props.enemy.type === props.game.activeEntity\"  />\n            </div>\n            <div class=\"d-flex space-between align-center\">\n              <Counter dec=\"() => props.enemy.hp--\" inc=\"() => props.enemy.hp++\">HP</Counter>\n              <div t-if=\"!props.enemy.boss\">\n                <span>ID </span>\n                <select t-model.number=\"props.enemy.nbr\">\n                  <option value=\"1\">1</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                  <option value=\"4\">4</option>\n                  <option value=\"5\">5</option>\n                  <option value=\"6\">6</option>\n                  <option value=\"7\">7</option>\n                  <option value=\"8\">8</option>\n                  <option value=\"9\">9</option>\n                </select>\n              </div>\n              <div><span class=\"button p-2\" t-on-click=\"remove\">Remove</span></div>\n            </div>\n          </div>\n  \n          <!-- <div class=\"d-flex space-between px-2 py-1\">\n            <span>XP: <span class=\"text-bold\" t-esc=\"props.hero.xp\"/></span>\n            <span>Gold: <span class=\"text-bold\" t-esc=\"props.hero.gold\"/></span>\n          </div>\n          <div class=\"d-flex space-between px-2 py-1\" t-if=\"statuses\">\n            <span>Status: <t t-esc=\"statuses\"/> </span>\n          </div> -->\n        </div>`;\n\n  static components = { StatusEditor, Counter };\n\n  setup() {\n    this.state = useState({\n      isOpen: false,\n    });\n  }\n\n  toggle() {\n    this.state.isOpen = !this.state.isOpen;\n  }\n\n  get statuses() {\n    if (this.props.enemy.hp <= 0) {\n      return \"\";\n    }\n    return statusString(this.props.enemy.status);\n  }\n\n  remove() {\n    if (confirm(\"Are you sure that you want to remove this enemy?\")) {\n      const index = this.props.game.enemies.findIndex(\n        (e) => e.id === this.props.enemy.id,\n      );\n      if (index >= 0) {\n        this.props.game.enemies.splice(index, 1);\n      }\n    }\n  }\n}\n\nclass EnemyActions extends Component {\n  static template = xml`\n      <div class=\"${CARD} bg-white\">\n        <t t-foreach=\"enemyTypes\" t-as=\"type\" t-key=\"type\">\n            <t t-set=\"actions\" t-value=\"enemyActions(type)\"/>\n            <div class=\"\">\n                <div class=\"p-2 d-flex space-between\" style=\"background-color: #eee;\">\n                    <span class=\"text-bold\"><t t-esc=\"enemyName(type)\"/></span>\n                    <span class=\"text-smaller\">deck: <t t-esc=\"actions.deck.length\"/> cartes</span>\n                </div>\n                <div class=\"d-flex flex-end\" t-if=\"actions.active === false\">\n                    <span class=\"button m-2 p-1\" t-on-click=\"() => this.selectAction(type)\">Choisir action</span>\n                </div>\n                <div t-if=\"actions.active\" class=\"p-1\" >\n                    <t t-set=\"action\" t-value=\"activeAction(type)\"/>\n                    <div class=\"d-flex align-center\">\n                        <span class=\"text-bold text-larger\"><t t-esc=\"action.initiative\"/></span>\n                        <span class=\"mx-1\"><t t-esc=\"action.name\"/><t t-if=\"action.recycled\"> <span class=\"text-bold\">\u2672</span></t></span>\n                    </div>\n                    <ul class=\"my-1 text-smaller text-italic\">\n                        <li t-foreach=\"action.effects\" t-as=\"effect\" t-key=\"effect\">\n                            <t t-esc=\"effect\"/>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </t>\n      </div>`;\n\n  get enemyTypes() {\n    const types = new Set();\n    for (let enemy of this.props.game.enemies) {\n      types.add(enemy.type);\n    }\n    return [...types];\n  }\n\n  enemyActions(type) {\n    return this.props.game.monsterActions[type];\n  }\n  enemyName(type) {\n    return ENEMIES_MAP[type].name;\n  }\n\n  selectAction(type) {\n    const monsterAction = this.enemyActions(type);\n    if (!monsterAction.deck.length) {\n      const deck = monsterAction.discardPile;\n      shuffleArray(deck);\n      monsterAction.discardPile = [];\n      monsterAction.deck = deck;\n    }\n    const action = monsterAction.deck.pop();\n    monsterAction.discardPile.unshift(action);\n    monsterAction.active = true;\n    const actionObj = this.activeAction(type);\n    monsterAction.initiative = actionObj.initiative;\n  }\n\n  activeAction(type) {\n    const actions = this.enemyActions(type);\n    if (actions.active === false) {\n      throw new Error(\"boom\");\n    }\n    const activeId = actions.discardPile[0];\n    const action = ENEMIES_MAP[type].actions.find((a) => a.id === activeId);\n    console.log(action);\n    return action;\n  }\n}\n\nexport class MainScreen extends Component {\n  static template = xml`\n    <t t-set=\"game\" t-value=\"props.game\"/>\n    <t t-set=\"ui\" t-value=\"props.ui\"/>\n    <Layout>\n      <t t-set-slot=\"navbar\">\n        <span class=\"mx-2\"><t t-if=\"game.round\">Round <t t-esc=\"game.round\"/></t></span>\n        <div class=\"m-3 text-bold text-larger\" t-on-click=\"() => game.pushScreen('CONFIG')\">\u2699</div>\n      </t>\n      <ControlPanel>\n        <div class=\"button ms-1\" t-on-click=\"() => game.pushScreen('ADD_ENEMY')\">Add Enemy</div>\n        <div class=\"button ms-1\" t-on-click=\"goToNextRound\" t-att-class=\"{disabled: !game.isNextRoundEnabled() }\">\n          <t t-if=\"game.round\">Next Round</t>\n          <t t-else=\"\">Start Scenario</t>\n        </div>\n      </ControlPanel>\n      <t t-if=\"game.config.battleGoals\">\n        <BattleGoalTracker game=\"game\"/>\n      </t>\n      <TurnTracker t-if=\"game.config.turnTracker\" game=\"props.game\" />\n      <t t-if=\"game.enemies.length and game.config.enemyActions\">\n        <EnemyActions game=\"game\"/>\n      </t>\n      <ElementTracker t-if=\"game.config.elements\" game=\"props.game\" />\n      <t t-foreach=\"game.heroes\" t-as=\"hero\" t-key=\"hero.id\">\n        <CharacterCard hero=\"hero\" game=\"game\"/>\n      </t>\n      <t t-foreach=\"game.enemies\" t-as=\"enemy\" t-key=\"enemy.id\">\n        <EnemyCard enemy=\"enemy\" game=\"game\"/>\n      </t>\n      <t t-if=\"game.config.attackModifiers and game.enemies.length\">\n        <EnemyAttackModifiers game=\"game\"/>\n      </t>\n    </Layout>`;\n  static components = {\n    Layout,\n    ControlPanel,\n    CharacterCard,\n    EnemyActions,\n    EnemyCard,\n    ElementTracker,\n    TurnTracker,\n    BattleGoalTracker,\n    EnemyAttackModifiers,\n  };\n\n  setup() {\n    this.game = this.props.game;\n  }\n\n  goToNextRound() {\n    this.props.game.incrementRound();\n  }\n}\n", "import { Component, xml } from \"@odoo/owl\";\nimport { Layout } from \"../shared/layout\";\nimport { ControlPanel } from \"../shared/control_panel\";\nimport { CharacterCard } from \"../shared/character_card\";\n\nexport class StartScreen extends Component {\n  static template = xml`\n        <t t-set=\"game\" t-value=\"props.game\"/>\n        <t t-set=\"ui\" t-value=\"props.ui\"/>\n        <Layout>\n          <t t-set-slot=\"navbar\">\n            <span class=\"mx-2\">GloomHaven</span>\n            <div class=\"m-3 text-bold text-larger\" t-on-click=\"() => game.pushScreen('CONFIG')\">\u2699</div>\n          </t>\n          <ControlPanel>\n            <div class=\"button ms-1\" t-on-click=\"() => game.pushScreen('CHAR_EDITOR')\">Add Hero</div>\n            <select class=\"border-none bg-white\" t-model.number=\"game.scenarioLevel\">\n              <option value=\"1\">Scenario Level 1</option>\n              <option value=\"2\">Scenario Level 2</option>\n              <option value=\"3\">Scenario Level 3</option>\n              <option value=\"4\">Scenario Level 4</option>\n              <option value=\"5\">Scenario Level 5</option>\n              <option value=\"6\">Scenario Level 6</option>\n              <option value=\"7\">Scenario Level 7</option>\n            </select>\n            <div class=\"me-2 button me-2\" t-att-class=\"{disabled: !canStartGame() }\" t-on-click=\"start\">Start Game</div>\n          </ControlPanel>\n          <t t-if=\"game.heroes.length\">\n            <t t-foreach=\"game.heroes\" t-as=\"hero\" t-key=\"hero.id\">\n              <CharacterCard hero=\"hero\" game=\"game\"/>\n            </t>\n          </t>\n          <div t-else=\"\" class=\"text-gray\" style=\"padding:24px;\">\n            Prepare your team of heroes, then start a game!\n            <t t-if=\"canRestore()\">(or <span t-on-click=\"restore\">restore from local storage</span>)</t>\n          </div>\n        </Layout>\n      `;\n  static components = {\n    Layout,\n    ControlPanel,\n    CharacterCard,\n  };\n\n  canStartGame() {\n    return this.props.game.heroes.length;\n  }\n\n  canRestore() {\n    const value = localStorage.getItem('game_state');\n    return !!value;\n  }\n  restore() {\n    this.props.game.restore();\n  }\n\n  start() {\n    this.props.game.round = 1;\n    this.props.game.pushScreen(\"MAIN\");\n  }\n}\n", "import { GameState } from \"./game_state\";\nimport { AddEnemyScreen } from \"./screens/add_enemy_screen\";\nimport { CharacterEditor } from \"./screens/character_editor_screen\";\nimport { ConfigScreen } from \"./screens/config_screen\";\nimport { MainScreen } from \"./screens/main_screen\";\nimport { StartScreen } from \"./screens/start_screen\";\nimport { preventSleep } from \"./utils\";\n\nimport { Component, mount, useState, xml } from \"@odoo/owl\";\n\nconst SCREEN_MAP = {\n  START: StartScreen,\n  CONFIG: ConfigScreen,\n  CHAR_EDITOR: CharacterEditor,\n  MAIN: MainScreen,\n  ADD_ENEMY: AddEnemyScreen,\n};\n\nclass GameModel extends GameState {\n  setScreen(screen) {\n    if (!(screen in SCREEN_MAP)) {\n      throw new Error(\"Nope...\");\n    }\n    super.setScreen(screen);\n  }\n\n  pushScreen(screen, state = null) {\n    if (!(screen in SCREEN_MAP)) {\n      throw new Error(\"Nope...\");\n    }\n    super.pushScreen(screen, state);\n  }\n}\n\nclass App extends Component {\n  static template = xml`<t t-component=\"screen\" game=\"game\"/>`;\n\n  setup() {\n    this.game = useState(new GameModel());\n\n    preventSleep();\n    // @ts-ignore (for debug purpose)\n    window.app = this;\n  }\n\n  get screen() {\n    return SCREEN_MAP[this.game.screen];\n  }\n}\n\nmount(App, document.body);\n"],
  "mappings": "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",
  "names": ["hero", "words", "document", "capture", "text", "tagName", "nodeInsertBefore", "mount", "children", "afterNode", "html", "currentNode", "node", "targets", "target", "bdom", "fn", "fn", "bdom", "helpers", "callSlot", "key", "value", "name", "xml", "config", "expr", "s", "text", "html", "condition", "on", "el", "Component", "hero", "App"]
}
